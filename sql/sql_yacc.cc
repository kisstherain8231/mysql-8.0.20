/* A Bison parser, made by GNU Bison 3.0.4.  */

/* Bison implementation for Yacc-like parsers in C

   Copyright (C) 1984, 1989-1990, 2000-2015 Free Software Foundation, Inc.

   This program is free software: you can redistribute it and/or modify
   it under the terms of the GNU General Public License as published by
   the Free Software Foundation, either version 3 of the License, or
   (at your option) any later version.

   This program is distributed in the hope that it will be useful,
   but WITHOUT ANY WARRANTY; without even the implied warranty of
   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
   GNU General Public License for more details.

   You should have received a copy of the GNU General Public License
   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */

/* As a special exception, you may create a larger work that contains
   part or all of the Bison parser skeleton and distribute that work
   under terms of your choice, so long as that work isn't itself a
   parser generator using the skeleton or a modified version thereof
   as a parser skeleton.  Alternatively, if you modify or redistribute
   the parser skeleton itself, you may (at your option) remove this
   special exception, which will cause the skeleton and the resulting
   Bison output files to be licensed under the GNU General Public
   License without this special exception.

   This special exception was added by the Free Software Foundation in
   version 2.2 of Bison.  */

/* C LALR(1) parser skeleton written by Richard Stallman, by
   simplifying the original so-called "semantic" parser.  */

/* All symbols defined below should begin with yy or YY, to avoid
   infringing on user name space.  This should be done even for local
   variables, as they might otherwise be expanded by user macros.
   There are some unavoidable exceptions within include files to
   define necessary library symbols; they are noted "INFRINGES ON
   USER NAME SPACE" below.  */

/* Identify Bison output.  */
#define YYBISON 1

/* Bison version.  */
#define YYBISON_VERSION "3.0.4"

/* Skeleton name.  */
#define YYSKELETON_NAME "yacc.c"

/* Pure parsers.  */
#define YYPURE 1

/* Push parsers.  */
#define YYPUSH 0

/* Pull parsers.  */
#define YYPULL 1


/* Substitute the variable and function names.  */
#define yyparse         MYSQLparse
#define yylex           MYSQLlex
#define yyerror         MYSQLerror
#define yydebug         MYSQLdebug
#define yynerrs         MYSQLnerrs


/* Copy the first part of user declarations.  */
#line 31 "sql_yacc.yy" /* yacc.c:339  */

/*
Note: YYTHD is passed as an argument to yyparse(), and subsequently to yylex().
*/
#define YYP (YYTHD->m_parser_state)
#define YYLIP (& YYTHD->m_parser_state->m_lip)
#define YYPS (& YYTHD->m_parser_state->m_yacc)
#define YYCSCL (YYLIP->query_charset)
#define YYMEM_ROOT (YYTHD->mem_root)

#define YYINITDEPTH 100
#define YYMAXDEPTH 3200                        /* Because of 64K stack */
#define Lex (YYTHD->lex)
#define Select Lex->current_select()

#include <limits>
#include <type_traits>                       // for std::remove_reference
#include <utility>

#include "my_alloc.h"
#include "my_dbug.h"
#include "myisam.h"
#include "myisammrg.h"
#include "mysql/plugin.h"
#include "sql/auth/auth_acls.h"
#include "sql/auth/auth_common.h"
#include "sql/binlog.h"                          // for MAX_LOG_UNIQUE_FN_EXT
#include "sql/dd/info_schema/show.h"             // build_show_...
#include "sql/dd/types/abstract_table.h"         // TT_BASE_TABLE
#include "sql/derror.h"
#include "sql/event_parse_data.h"
                                             // used in RESET_MASTER parsing check
#include "sql/gis/srid.h"                    // gis::srid_t
#include "sql/item_cmpfunc.h"
#include "sql/item_create.h"
#include "sql/item_geofunc.h"
#include "sql/item_json_func.h"
#include "sql/item_regexp_func.h"
#include "sql/json_dom.h"
#include "sql/key_spec.h"
#include "sql/keycaches.h"
#include "sql/lex_symbol.h"
#include "sql/lex_token.h"
#include "sql/log_event.h"
#include "sql/opt_explain_json.h"
#include "sql/opt_explain_traditional.h"
#include "sql/parser_yystype.h"
#include "sql/protocol.h"
#include "sql/resourcegroups/resource_group_mgr.h" // resource_group_support
#include "sql/resourcegroups/resource_group_sql_cmd.h" // Sql_cmd_*_resource_group etc.
#include "sql/rpl_filter.h"
#include "sql/rpl_msr.h"       /* multisource replication */
#include "sql/rpl_slave.h"
#include "sql/rpl_slave.h"                       // Sql_cmd_change_repl_filter
#include "sql/set_var.h"
#include "sql/sp.h"
#include "sql/sp_head.h"
#include "sql/sp_instr.h"
#include "sql/sp_pcontext.h"
#include "sql/sp_rcontext.h"
#include "sql/sql_admin.h"                         // Sql_cmd_analyze/Check..._table
#include "sql/sql_alter.h"                         // Sql_cmd_alter_table*
#include "sql/sql_backup_lock.h"                   // Sql_cmd_lock_instance,
                                               // Sql_cmd_unlock_instance
#include "sql/sql_base.h"                        // find_temporary_table
#include "sql/sql_class.h"      /* Key_part_spec, enum_filetype */
#include "sql/sql_cmd_srs.h"
#include "sql/sql_component.h"
#include "sql/sql_get_diagnostics.h"               // Sql_cmd_get_diagnostics
#include "sql/sql_handler.h"                       // Sql_cmd_handler_*
#include "sql/sql_import.h"                        // Sql_cmd_import_table
#include "sql/sql_parse.h"                        /* comp_*_creator */
#include "sql/sql_partition.h"                    /* mem_alloc_error */
#include "sql/sql_partition_admin.h"               // Sql_cmd_alter_table_*_part.
#include "sql/sql_plugin.h"                      // plugin_is_ready
#include "sql/sql_profile.h"
#include "sql/sql_select.h"                        // Sql_cmd_select...
#include "sql/sql_servers.h"
#include "sql/sql_show_status.h"                 // build_show_session_status, ...
#include "sql/sql_signal.h"
#include "sql/sql_table.h"                        /* primary_key_name */
#include "sql/sql_tablespace.h"                  // Sql_cmd_alter_tablespace
#include "sql/sql_trigger.h"                     // Sql_cmd_create_trigger
#include "sql/sql_truncate.h"                      // Sql_cmd_truncate_table
#include "sql/table_function.h"

/* this is to get the bison compilation windows warnings out */
#ifdef _MSC_VER
/* warning C4065: switch statement contains 'default' but no 'case' labels */
#pragma warning (disable : 4065)
#endif

using std::min;
using std::max;

/// The maximum number of histogram buckets.
static const int MAX_NUMBER_OF_HISTOGRAM_BUCKETS= 1024;

/// The default number of histogram buckets when the user does not specify it
/// explicitly. A value of 100 is chosen because the gain in accuracy above this
/// point seems to be generally low.
static const int DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS= 100;

int yylex(void *yylval, void *yythd);

#define yyoverflow(A,B,C,D,E,F,G,H)           \
  {                                           \
    ulong val= *(H);                          \
    if (my_yyoverflow((B), (D), (F), &val))   \
    {                                         \
      yyerror(NULL, YYTHD, NULL, (const char*) (A));\
      return 2;                               \
    }                                         \
    else                                      \
    {                                         \
      *(H)= (YYSIZE_T)val;                    \
    }                                         \
  }

#define MYSQL_YYABORT YYABORT

#define MYSQL_YYABORT_ERROR(...)              \
  do                                          \
  {                                           \
    my_error(__VA_ARGS__);                    \
    MYSQL_YYABORT;                            \
  } while(0)

#define MYSQL_YYABORT_UNLESS(A)         \
  if (!(A))                             \
  {                                     \
    YYTHD->syntax_error();              \
    MYSQL_YYABORT;                      \
  }

#define NEW_PTN new(YYMEM_ROOT)


/**
  Parse_tree_node::contextualize() function call wrapper
*/
#define CONTEXTUALIZE(x)                                \
  do                                                    \
  {                                                     \
    std::remove_reference<decltype(*x)>::type::context_t pc(YYTHD, Select); \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->contextualize(&pc)))    \
      MYSQL_YYABORT;                                                    \
  } while(0)


/**
  Item::itemize() function call wrapper
*/
#define ITEMIZE(x, y)                                                   \
  do                                                                    \
  {                                                                     \
    Parse_context pc(YYTHD, Select);                                    \
    if (YYTHD->is_error() ||                                            \
        (YYTHD->lex->will_contextualize && (x)->itemize(&pc, (y))))     \
      MYSQL_YYABORT;                                                    \
  } while(0)

/**
  Parse_tree_root::make_cmd() wrapper to raise postponed error message on OOM

  @note x may be NULL because of OOM error.
*/
#define MAKE_CMD(x)                                    \
  do                                                   \
  {                                                    \
    if (YYTHD->is_error() || Lex->make_sql_cmd(x))     \
      MYSQL_YYABORT;                                   \
  } while(0)


#ifndef DBUG_OFF
#define YYDEBUG 1
#else
#define YYDEBUG 0
#endif


/**
  @brief Bison callback to report a syntax/OOM error

  This function is invoked by the bison-generated parser
  when a syntax error or an out-of-memory
  condition occurs, then the parser function MYSQLparse()
  returns 1 to the caller.

  This function is not invoked when the
  parser is requested to abort by semantic action code
  by means of YYABORT or YYACCEPT macros..

  This function is not for use in semantic actions and is internal to
  the parser, as it performs some pre-return cleanup.
  In semantic actions, please use syntax_error or my_error to
  push an error into the error stack and MYSQL_YYABORT
  to abort from the parser.
*/

static
void MYSQLerror(YYLTYPE *location, THD *thd, Parse_tree_root **, const char *s)
{
  if (strcmp(s, "syntax error") == 0) {
    thd->syntax_error_at(*location);
  } else if (strcmp(s, "memory exhausted") == 0) {
    my_error(ER_DA_OOM, MYF(0));
  } else {
    // Find omitted error messages in the generated file (sql_yacc.cc) and fix:
    DBUG_ASSERT(false);
    my_error(ER_UNKNOWN_ERROR, MYF(0));
  }
}


#ifndef DBUG_OFF
void turn_parser_debug_on()
{
  /*
     MYSQLdebug is in sql/sql_yacc.cc, in bison generated code.
     Turning this option on is **VERY** verbose, and should be
     used when investigating a syntax error problem only.

     The syntax to run with bison traces is as follows :
     - Starting a server manually :
       mysqld --debug="d,parser_debug" ...
     - Running a test :
       mysql-test-run.pl --mysqld="--debug=d,parser_debug" ...

     The result will be in the process stderr (var/log/master.err)
   */

  extern int yydebug;
  yydebug= 1;
}
#endif

static bool is_native_function(const LEX_STRING &name)
{
  if (find_native_function_builder(name) != nullptr)
    return true;

  if (is_lex_native_function(&name))
    return true;

  return false;
}


/**
  Helper action for a case statement (entering the CASE).
  This helper is used for both 'simple' and 'searched' cases.
  This helper, with the other case_stmt_action_..., is executed when
  the following SQL code is parsed:
<pre>
CREATE PROCEDURE proc_19194_simple(i int)
BEGIN
  DECLARE str CHAR(10);

  CASE i
    WHEN 1 THEN SET str="1";
    WHEN 2 THEN SET str="2";
    WHEN 3 THEN SET str="3";
    ELSE SET str="unknown";
  END CASE;

  SELECT str;
END
</pre>
  The actions are used to generate the following code:
<pre>
SHOW PROCEDURE CODE proc_19194_simple;
Pos     Instruction
0       set str@1 NULL
1       set_case_expr (12) 0 i@0
2       jump_if_not 5(12) (case_expr@0 = 1)
3       set str@1 _latin1'1'
4       jump 12
5       jump_if_not 8(12) (case_expr@0 = 2)
6       set str@1 _latin1'2'
7       jump 12
8       jump_if_not 11(12) (case_expr@0 = 3)
9       set str@1 _latin1'3'
10      jump 12
11      set str@1 _latin1'unknown'
12      stmt 0 "SELECT str"
</pre>

  @param thd thread handler
*/

static void case_stmt_action_case(THD *thd)
{
  LEX *lex= thd->lex;
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp->m_parser_data.new_cont_backpatch();

  /*
    BACKPATCH: Creating target label for the jump to
    "case_stmt_action_end_case"
    (Instruction 12 in the example)
  */

  pctx->push_label(thd, EMPTY_CSTR, sp->instructions());
}

/**
  Helper action for a case then statements.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
*/

static bool case_stmt_action_then(THD *thd, LEX *lex)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  sp_instr_jump *i =
    new (thd->mem_root) sp_instr_jump(sp->instructions(), pctx);

  if (!i || sp->add_instr(thd, i))
    return true;

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_when" to "case_stmt_action_then"
    (jump_if_not from instruction 2 to 5, 5 to 8 ... in the example)
  */

  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  /*
    BACKPATCH: Registering forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */

  return sp->m_parser_data.add_backpatch_entry(i, pctx->last_label());
}

/**
  Helper action for an end case.
  This helper is used for both 'simple' and 'searched' cases.
  @param lex the parser lex context
  @param simple true for simple cases, false for searched cases
*/

static void case_stmt_action_end_case(LEX *lex, bool simple)
{
  sp_head *sp= lex->sphead;
  sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

  /*
    BACKPATCH: Resolving forward jump from
    "case_stmt_action_then" to "case_stmt_action_end_case"
    (jump from instruction 4 to 12, 7 to 12 ... in the example)
  */
  sp->m_parser_data.do_backpatch(pctx->pop_label(), sp->instructions());

  if (simple)
    pctx->pop_case_expr_id();

  sp->m_parser_data.do_cont_backpatch(sp->instructions());
}


static void init_index_hints(List<Index_hint> *hints, index_hint_type type,
                             index_clause_map clause)
{
  List_iterator<Index_hint> it(*hints);
  Index_hint *hint;
  while ((hint= it++))
  {
    hint->type= type;
    hint->clause= clause;
  }
}

bool my_yyoverflow(short **a, YYSTYPE **b, YYLTYPE **c, ulong *yystacksize);

#include "sql/parse_tree_column_attrs.h"
#include "sql/parse_tree_handler.h"
#include "sql/parse_tree_items.h"
#include "sql/parse_tree_nodes.h"
#include "sql/parse_tree_partitions.h"

void warn_about_deprecated_national(THD *thd)
{
  if (native_strcasecmp(national_charset_info->csname, "utf8") == 0)
    push_warning(thd, ER_DEPRECATED_NATIONAL);
}

void warn_about_deprecated_binary(THD *thd)
{
  push_deprecated_warn(thd, "BINARY as attribute of a type",
  "a CHARACTER SET clause with _bin collation");
}


#line 476 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:339  */

# ifndef YY_NULLPTR
#  if defined __cplusplus && 201103L <= __cplusplus
#   define YY_NULLPTR nullptr
#  else
#   define YY_NULLPTR 0
#  endif
# endif

/* Enabling verbose error messages.  */
#ifdef YYERROR_VERBOSE
# undef YYERROR_VERBOSE
# define YYERROR_VERBOSE 1
#else
# define YYERROR_VERBOSE 0
#endif

/* In a future release of Bison, this section will be replaced
   by #include "sql_yacc.h".  */
#ifndef YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_38522761_1585229681_91_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
# define YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_38522761_1585229681_91_DIST_GPL_SQL_SQL_YACC_H_INCLUDED
/* Debug traces.  */
#ifndef YYDEBUG
# define YYDEBUG 0
#endif
#if YYDEBUG
extern int MYSQLdebug;
#endif

/* Token type.  */
#ifndef YYTOKENTYPE
# define YYTOKENTYPE
  enum yytokentype
  {
    ABORT_SYM = 258,
    ACCESSIBLE_SYM = 259,
    ACCOUNT_SYM = 260,
    ACTION = 261,
    ADD = 262,
    ADDDATE_SYM = 263,
    AFTER_SYM = 264,
    AGAINST = 265,
    AGGREGATE_SYM = 266,
    ALGORITHM_SYM = 267,
    ALL = 268,
    ALTER = 269,
    ALWAYS_SYM = 270,
    OBSOLETE_TOKEN_271 = 271,
    ANALYZE_SYM = 272,
    AND_AND_SYM = 273,
    AND_SYM = 274,
    ANY_SYM = 275,
    AS = 276,
    ASC = 277,
    ASCII_SYM = 278,
    ASENSITIVE_SYM = 279,
    AT_SYM = 280,
    AUTOEXTEND_SIZE_SYM = 281,
    AUTO_INC = 282,
    AVG_ROW_LENGTH = 283,
    AVG_SYM = 284,
    BACKUP_SYM = 285,
    BEFORE_SYM = 286,
    BEGIN_SYM = 287,
    BETWEEN_SYM = 288,
    BIGINT_SYM = 289,
    BINARY_SYM = 290,
    BINLOG_SYM = 291,
    BIN_NUM = 292,
    BIT_AND_SYM = 293,
    BIT_OR_SYM = 294,
    BIT_SYM = 295,
    BIT_XOR_SYM = 296,
    BLOB_SYM = 297,
    BLOCK_SYM = 298,
    BOOLEAN_SYM = 299,
    BOOL_SYM = 300,
    BOTH = 301,
    BTREE_SYM = 302,
    BY = 303,
    BYTE_SYM = 304,
    CACHE_SYM = 305,
    CALL_SYM = 306,
    CASCADE = 307,
    CASCADED = 308,
    CASE_SYM = 309,
    CAST_SYM = 310,
    CATALOG_NAME_SYM = 311,
    CHAIN_SYM = 312,
    CHANGE = 313,
    CHANGED = 314,
    CHANNEL_SYM = 315,
    CHARSET = 316,
    CHAR_SYM = 317,
    CHECKSUM_SYM = 318,
    CHECK_SYM = 319,
    CIPHER_SYM = 320,
    CLASS_ORIGIN_SYM = 321,
    CLIENT_SYM = 322,
    CLOSE_SYM = 323,
    COALESCE = 324,
    CODE_SYM = 325,
    COLLATE_SYM = 326,
    COLLATION_SYM = 327,
    COLUMNS = 328,
    COLUMN_SYM = 329,
    COLUMN_FORMAT_SYM = 330,
    COLUMN_NAME_SYM = 331,
    COMMENT_SYM = 332,
    COMMITTED_SYM = 333,
    COMMIT_SYM = 334,
    COMPACT_SYM = 335,
    COMPLETION_SYM = 336,
    COMPRESSED_SYM = 337,
    COMPRESSION_SYM = 338,
    ENCRYPTION_SYM = 339,
    CONCURRENT = 340,
    CONDITION_SYM = 341,
    CONNECTION_SYM = 342,
    CONSISTENT_SYM = 343,
    CONSTRAINT = 344,
    CONSTRAINT_CATALOG_SYM = 345,
    CONSTRAINT_NAME_SYM = 346,
    CONSTRAINT_SCHEMA_SYM = 347,
    CONTAINS_SYM = 348,
    CONTEXT_SYM = 349,
    CONTINUE_SYM = 350,
    CONVERT_SYM = 351,
    COUNT_SYM = 352,
    CPU_SYM = 353,
    CREATE = 354,
    CROSS = 355,
    CUBE_SYM = 356,
    CURDATE = 357,
    CURRENT_SYM = 358,
    CURRENT_USER = 359,
    CURSOR_SYM = 360,
    CURSOR_NAME_SYM = 361,
    CURTIME = 362,
    DATABASE = 363,
    DATABASES = 364,
    DATAFILE_SYM = 365,
    DATA_SYM = 366,
    DATETIME_SYM = 367,
    DATE_ADD_INTERVAL = 368,
    DATE_SUB_INTERVAL = 369,
    DATE_SYM = 370,
    DAY_HOUR_SYM = 371,
    DAY_MICROSECOND_SYM = 372,
    DAY_MINUTE_SYM = 373,
    DAY_SECOND_SYM = 374,
    DAY_SYM = 375,
    DEALLOCATE_SYM = 376,
    DECIMAL_NUM = 377,
    DECIMAL_SYM = 378,
    DECLARE_SYM = 379,
    DEFAULT_SYM = 380,
    DEFAULT_AUTH_SYM = 381,
    DEFINER_SYM = 382,
    DELAYED_SYM = 383,
    DELAY_KEY_WRITE_SYM = 384,
    DELETE_SYM = 385,
    DESC = 386,
    DESCRIBE = 387,
    OBSOLETE_TOKEN_388 = 388,
    DETERMINISTIC_SYM = 389,
    DIAGNOSTICS_SYM = 390,
    DIRECTORY_SYM = 391,
    DISABLE_SYM = 392,
    DISCARD_SYM = 393,
    DISK_SYM = 394,
    DISTINCT = 395,
    DIV_SYM = 396,
    DOUBLE_SYM = 397,
    DO_SYM = 398,
    DROP = 399,
    DUAL_SYM = 400,
    DUMPFILE = 401,
    DUPLICATE_SYM = 402,
    DYNAMIC_SYM = 403,
    EACH_SYM = 404,
    ELSE = 405,
    ELSEIF_SYM = 406,
    ENABLE_SYM = 407,
    ENCLOSED = 408,
    END = 409,
    ENDS_SYM = 410,
    END_OF_INPUT = 411,
    ENGINES_SYM = 412,
    ENGINE_SYM = 413,
    ENUM_SYM = 414,
    EQ = 415,
    EQUAL_SYM = 416,
    ERROR_SYM = 417,
    ERRORS = 418,
    ESCAPED = 419,
    ESCAPE_SYM = 420,
    EVENTS_SYM = 421,
    EVENT_SYM = 422,
    EVERY_SYM = 423,
    EXCHANGE_SYM = 424,
    EXECUTE_SYM = 425,
    EXISTS = 426,
    EXIT_SYM = 427,
    EXPANSION_SYM = 428,
    EXPIRE_SYM = 429,
    EXPORT_SYM = 430,
    EXTENDED_SYM = 431,
    EXTENT_SIZE_SYM = 432,
    EXTRACT_SYM = 433,
    FALSE_SYM = 434,
    FAST_SYM = 435,
    FAULTS_SYM = 436,
    FETCH_SYM = 437,
    FILE_SYM = 438,
    FILE_BLOCK_SIZE_SYM = 439,
    FILTER_SYM = 440,
    FIRST_SYM = 441,
    FIXED_SYM = 442,
    FLOAT_NUM = 443,
    FLOAT_SYM = 444,
    FLUSH_SYM = 445,
    FOLLOWS_SYM = 446,
    FORCE_SYM = 447,
    FOREIGN = 448,
    FOR_SYM = 449,
    FORMAT_SYM = 450,
    FOUND_SYM = 451,
    FROM = 452,
    FULL = 453,
    FULLTEXT_SYM = 454,
    FUNCTION_SYM = 455,
    GE = 456,
    GENERAL = 457,
    GENERATED = 458,
    GROUP_REPLICATION = 459,
    GEOMETRYCOLLECTION_SYM = 460,
    GEOMETRY_SYM = 461,
    GET_FORMAT = 462,
    GET_SYM = 463,
    GLOBAL_SYM = 464,
    GRANT = 465,
    GRANTS = 466,
    GROUP_SYM = 467,
    GROUP_CONCAT_SYM = 468,
    GT_SYM = 469,
    HANDLER_SYM = 470,
    HASH_SYM = 471,
    HAVING = 472,
    HELP_SYM = 473,
    HEX_NUM = 474,
    HIGH_PRIORITY = 475,
    HOST_SYM = 476,
    HOSTS_SYM = 477,
    HOUR_MICROSECOND_SYM = 478,
    HOUR_MINUTE_SYM = 479,
    HOUR_SECOND_SYM = 480,
    HOUR_SYM = 481,
    IDENT = 482,
    IDENTIFIED_SYM = 483,
    IDENT_QUOTED = 484,
    IF = 485,
    IGNORE_SYM = 486,
    IGNORE_SERVER_IDS_SYM = 487,
    IMPORT = 488,
    INDEXES = 489,
    INDEX_SYM = 490,
    INFILE = 491,
    INITIAL_SIZE_SYM = 492,
    INNER_SYM = 493,
    INOUT_SYM = 494,
    INSENSITIVE_SYM = 495,
    INSERT_SYM = 496,
    INSERT_METHOD = 497,
    INSTANCE_SYM = 498,
    INSTALL_SYM = 499,
    INTERVAL_SYM = 500,
    INTO = 501,
    INT_SYM = 502,
    INVOKER_SYM = 503,
    IN_SYM = 504,
    IO_AFTER_GTIDS = 505,
    IO_BEFORE_GTIDS = 506,
    IO_SYM = 507,
    IPC_SYM = 508,
    IS = 509,
    ISOLATION = 510,
    ISSUER_SYM = 511,
    ITERATE_SYM = 512,
    JOIN_SYM = 513,
    JSON_SEPARATOR_SYM = 514,
    JSON_SYM = 515,
    KEYS = 516,
    KEY_BLOCK_SIZE = 517,
    KEY_SYM = 518,
    KILL_SYM = 519,
    LANGUAGE_SYM = 520,
    LAST_SYM = 521,
    LE = 522,
    LEADING = 523,
    LEAVES = 524,
    LEAVE_SYM = 525,
    LEFT = 526,
    LESS_SYM = 527,
    LEVEL_SYM = 528,
    LEX_HOSTNAME = 529,
    LIKE = 530,
    LIMIT = 531,
    LINEAR_SYM = 532,
    LINES = 533,
    LINESTRING_SYM = 534,
    LIST_SYM = 535,
    LOAD = 536,
    LOCAL_SYM = 537,
    OBSOLETE_TOKEN_538 = 538,
    LOCKS_SYM = 539,
    LOCK_SYM = 540,
    LOGFILE_SYM = 541,
    LOGS_SYM = 542,
    LONGBLOB_SYM = 543,
    LONGTEXT_SYM = 544,
    LONG_NUM = 545,
    LONG_SYM = 546,
    LOOP_SYM = 547,
    LOW_PRIORITY = 548,
    LT = 549,
    MASTER_AUTO_POSITION_SYM = 550,
    MASTER_BIND_SYM = 551,
    MASTER_CONNECT_RETRY_SYM = 552,
    MASTER_DELAY_SYM = 553,
    MASTER_HOST_SYM = 554,
    MASTER_LOG_FILE_SYM = 555,
    MASTER_LOG_POS_SYM = 556,
    MASTER_PASSWORD_SYM = 557,
    MASTER_PORT_SYM = 558,
    MASTER_RETRY_COUNT_SYM = 559,
    MASTER_SERVER_ID_SYM = 560,
    MASTER_SSL_CAPATH_SYM = 561,
    MASTER_TLS_VERSION_SYM = 562,
    MASTER_SSL_CA_SYM = 563,
    MASTER_SSL_CERT_SYM = 564,
    MASTER_SSL_CIPHER_SYM = 565,
    MASTER_SSL_CRL_SYM = 566,
    MASTER_SSL_CRLPATH_SYM = 567,
    MASTER_SSL_KEY_SYM = 568,
    MASTER_SSL_SYM = 569,
    MASTER_SSL_VERIFY_SERVER_CERT_SYM = 570,
    MASTER_SYM = 571,
    MASTER_USER_SYM = 572,
    MASTER_HEARTBEAT_PERIOD_SYM = 573,
    MATCH = 574,
    MAX_CONNECTIONS_PER_HOUR = 575,
    MAX_QUERIES_PER_HOUR = 576,
    MAX_ROWS = 577,
    MAX_SIZE_SYM = 578,
    MAX_SYM = 579,
    MAX_UPDATES_PER_HOUR = 580,
    MAX_USER_CONNECTIONS_SYM = 581,
    MAX_VALUE_SYM = 582,
    MEDIUMBLOB_SYM = 583,
    MEDIUMINT_SYM = 584,
    MEDIUMTEXT_SYM = 585,
    MEDIUM_SYM = 586,
    MEMORY_SYM = 587,
    MERGE_SYM = 588,
    MESSAGE_TEXT_SYM = 589,
    MICROSECOND_SYM = 590,
    MIGRATE_SYM = 591,
    MINUTE_MICROSECOND_SYM = 592,
    MINUTE_SECOND_SYM = 593,
    MINUTE_SYM = 594,
    MIN_ROWS = 595,
    MIN_SYM = 596,
    MODE_SYM = 597,
    MODIFIES_SYM = 598,
    MODIFY_SYM = 599,
    MOD_SYM = 600,
    MONTH_SYM = 601,
    MULTILINESTRING_SYM = 602,
    MULTIPOINT_SYM = 603,
    MULTIPOLYGON_SYM = 604,
    MUTEX_SYM = 605,
    MYSQL_ERRNO_SYM = 606,
    NAMES_SYM = 607,
    NAME_SYM = 608,
    NATIONAL_SYM = 609,
    NATURAL = 610,
    NCHAR_STRING = 611,
    NCHAR_SYM = 612,
    NDBCLUSTER_SYM = 613,
    NE = 614,
    NEG = 615,
    NEVER_SYM = 616,
    NEW_SYM = 617,
    NEXT_SYM = 618,
    NODEGROUP_SYM = 619,
    NONE_SYM = 620,
    NOT2_SYM = 621,
    NOT_SYM = 622,
    NOW_SYM = 623,
    NO_SYM = 624,
    NO_WAIT_SYM = 625,
    NO_WRITE_TO_BINLOG = 626,
    NULL_SYM = 627,
    NUM = 628,
    NUMBER_SYM = 629,
    NUMERIC_SYM = 630,
    NVARCHAR_SYM = 631,
    OFFSET_SYM = 632,
    ON_SYM = 633,
    ONE_SYM = 634,
    ONLY_SYM = 635,
    OPEN_SYM = 636,
    OPTIMIZE = 637,
    OPTIMIZER_COSTS_SYM = 638,
    OPTIONS_SYM = 639,
    OPTION = 640,
    OPTIONALLY = 641,
    OR2_SYM = 642,
    ORDER_SYM = 643,
    OR_OR_SYM = 644,
    OR_SYM = 645,
    OUTER_SYM = 646,
    OUTFILE = 647,
    OUT_SYM = 648,
    OWNER_SYM = 649,
    PACK_KEYS_SYM = 650,
    PAGE_SYM = 651,
    PARAM_MARKER = 652,
    PARSER_SYM = 653,
    OBSOLETE_TOKEN_654 = 654,
    PARTIAL = 655,
    PARTITION_SYM = 656,
    PARTITIONS_SYM = 657,
    PARTITIONING_SYM = 658,
    PASSWORD = 659,
    PHASE_SYM = 660,
    PLUGIN_DIR_SYM = 661,
    PLUGIN_SYM = 662,
    PLUGINS_SYM = 663,
    POINT_SYM = 664,
    POLYGON_SYM = 665,
    PORT_SYM = 666,
    POSITION_SYM = 667,
    PRECEDES_SYM = 668,
    PRECISION = 669,
    PREPARE_SYM = 670,
    PRESERVE_SYM = 671,
    PREV_SYM = 672,
    PRIMARY_SYM = 673,
    PRIVILEGES = 674,
    PROCEDURE_SYM = 675,
    PROCESS = 676,
    PROCESSLIST_SYM = 677,
    PROFILE_SYM = 678,
    PROFILES_SYM = 679,
    PROXY_SYM = 680,
    PURGE = 681,
    QUARTER_SYM = 682,
    QUERY_SYM = 683,
    QUICK = 684,
    RANGE_SYM = 685,
    READS_SYM = 686,
    READ_ONLY_SYM = 687,
    READ_SYM = 688,
    READ_WRITE_SYM = 689,
    REAL_SYM = 690,
    REBUILD_SYM = 691,
    RECOVER_SYM = 692,
    OBSOLETE_TOKEN_693 = 693,
    REDO_BUFFER_SIZE_SYM = 694,
    REDUNDANT_SYM = 695,
    REFERENCES = 696,
    REGEXP = 697,
    RELAY = 698,
    RELAYLOG_SYM = 699,
    RELAY_LOG_FILE_SYM = 700,
    RELAY_LOG_POS_SYM = 701,
    RELAY_THREAD = 702,
    RELEASE_SYM = 703,
    RELOAD = 704,
    REMOVE_SYM = 705,
    RENAME = 706,
    REORGANIZE_SYM = 707,
    REPAIR = 708,
    REPEATABLE_SYM = 709,
    REPEAT_SYM = 710,
    REPLACE_SYM = 711,
    REPLICATION = 712,
    REPLICATE_DO_DB = 713,
    REPLICATE_IGNORE_DB = 714,
    REPLICATE_DO_TABLE = 715,
    REPLICATE_IGNORE_TABLE = 716,
    REPLICATE_WILD_DO_TABLE = 717,
    REPLICATE_WILD_IGNORE_TABLE = 718,
    REPLICATE_REWRITE_DB = 719,
    REQUIRE_SYM = 720,
    RESET_SYM = 721,
    RESIGNAL_SYM = 722,
    RESOURCES = 723,
    RESTORE_SYM = 724,
    RESTRICT = 725,
    RESUME_SYM = 726,
    RETURNED_SQLSTATE_SYM = 727,
    RETURNS_SYM = 728,
    RETURN_SYM = 729,
    REVERSE_SYM = 730,
    REVOKE = 731,
    RIGHT = 732,
    ROLLBACK_SYM = 733,
    ROLLUP_SYM = 734,
    ROTATE_SYM = 735,
    ROUTINE_SYM = 736,
    ROWS_SYM = 737,
    ROW_FORMAT_SYM = 738,
    ROW_SYM = 739,
    ROW_COUNT_SYM = 740,
    RTREE_SYM = 741,
    SAVEPOINT_SYM = 742,
    SCHEDULE_SYM = 743,
    SCHEMA_NAME_SYM = 744,
    SECOND_MICROSECOND_SYM = 745,
    SECOND_SYM = 746,
    SECURITY_SYM = 747,
    SELECT_SYM = 748,
    SENSITIVE_SYM = 749,
    SEPARATOR_SYM = 750,
    SERIALIZABLE_SYM = 751,
    SERIAL_SYM = 752,
    SESSION_SYM = 753,
    SERVER_SYM = 754,
    OBSOLETE_TOKEN_755 = 755,
    SET_SYM = 756,
    SET_VAR = 757,
    SHARE_SYM = 758,
    SHIFT_LEFT = 759,
    SHIFT_RIGHT = 760,
    SHOW = 761,
    SHUTDOWN = 762,
    SIGNAL_SYM = 763,
    SIGNED_SYM = 764,
    SIMPLE_SYM = 765,
    SLAVE = 766,
    SLOW = 767,
    SMALLINT_SYM = 768,
    SNAPSHOT_SYM = 769,
    SOCKET_SYM = 770,
    SONAME_SYM = 771,
    SOUNDS_SYM = 772,
    SOURCE_SYM = 773,
    SPATIAL_SYM = 774,
    SPECIFIC_SYM = 775,
    SQLEXCEPTION_SYM = 776,
    SQLSTATE_SYM = 777,
    SQLWARNING_SYM = 778,
    SQL_AFTER_GTIDS = 779,
    SQL_AFTER_MTS_GAPS = 780,
    SQL_BEFORE_GTIDS = 781,
    SQL_BIG_RESULT = 782,
    SQL_BUFFER_RESULT = 783,
    OBSOLETE_TOKEN_784 = 784,
    SQL_CALC_FOUND_ROWS = 785,
    SQL_NO_CACHE_SYM = 786,
    SQL_SMALL_RESULT = 787,
    SQL_SYM = 788,
    SQL_THREAD = 789,
    SSL_SYM = 790,
    STACKED_SYM = 791,
    STARTING = 792,
    STARTS_SYM = 793,
    START_SYM = 794,
    STATS_AUTO_RECALC_SYM = 795,
    STATS_PERSISTENT_SYM = 796,
    STATS_SAMPLE_PAGES_SYM = 797,
    STATUS_SYM = 798,
    STDDEV_SAMP_SYM = 799,
    STD_SYM = 800,
    STOP_SYM = 801,
    STORAGE_SYM = 802,
    STORED_SYM = 803,
    STRAIGHT_JOIN = 804,
    STRING_SYM = 805,
    SUBCLASS_ORIGIN_SYM = 806,
    SUBDATE_SYM = 807,
    SUBJECT_SYM = 808,
    SUBPARTITIONS_SYM = 809,
    SUBPARTITION_SYM = 810,
    SUBSTRING = 811,
    SUM_SYM = 812,
    SUPER_SYM = 813,
    SUSPEND_SYM = 814,
    SWAPS_SYM = 815,
    SWITCHES_SYM = 816,
    SYSDATE = 817,
    TABLES = 818,
    TABLESPACE_SYM = 819,
    OBSOLETE_TOKEN_820 = 820,
    TABLE_SYM = 821,
    TABLE_CHECKSUM_SYM = 822,
    TABLE_NAME_SYM = 823,
    TEMPORARY = 824,
    TEMPTABLE_SYM = 825,
    TERMINATED = 826,
    TEXT_STRING = 827,
    TEXT_SYM = 828,
    THAN_SYM = 829,
    THEN_SYM = 830,
    TIMESTAMP_SYM = 831,
    TIMESTAMP_ADD = 832,
    TIMESTAMP_DIFF = 833,
    TIME_SYM = 834,
    TINYBLOB_SYM = 835,
    TINYINT_SYM = 836,
    TINYTEXT_SYN = 837,
    TO_SYM = 838,
    TRAILING = 839,
    TRANSACTION_SYM = 840,
    TRIGGERS_SYM = 841,
    TRIGGER_SYM = 842,
    TRIM = 843,
    TRUE_SYM = 844,
    TRUNCATE_SYM = 845,
    TYPES_SYM = 846,
    TYPE_SYM = 847,
    OBSOLETE_TOKEN_848 = 848,
    ULONGLONG_NUM = 849,
    UNCOMMITTED_SYM = 850,
    UNDEFINED_SYM = 851,
    UNDERSCORE_CHARSET = 852,
    UNDOFILE_SYM = 853,
    UNDO_BUFFER_SIZE_SYM = 854,
    UNDO_SYM = 855,
    UNICODE_SYM = 856,
    UNINSTALL_SYM = 857,
    UNION_SYM = 858,
    UNIQUE_SYM = 859,
    UNKNOWN_SYM = 860,
    UNLOCK_SYM = 861,
    UNSIGNED_SYM = 862,
    UNTIL_SYM = 863,
    UPDATE_SYM = 864,
    UPGRADE_SYM = 865,
    USAGE = 866,
    USER = 867,
    USE_FRM = 868,
    USE_SYM = 869,
    USING = 870,
    UTC_DATE_SYM = 871,
    UTC_TIMESTAMP_SYM = 872,
    UTC_TIME_SYM = 873,
    VALIDATION_SYM = 874,
    VALUES = 875,
    VALUE_SYM = 876,
    VARBINARY_SYM = 877,
    VARCHAR_SYM = 878,
    VARIABLES = 879,
    VARIANCE_SYM = 880,
    VARYING = 881,
    VAR_SAMP_SYM = 882,
    VIEW_SYM = 883,
    VIRTUAL_SYM = 884,
    WAIT_SYM = 885,
    WARNINGS = 886,
    WEEK_SYM = 887,
    WEIGHT_STRING_SYM = 888,
    WHEN_SYM = 889,
    WHERE = 890,
    WHILE_SYM = 891,
    WITH = 892,
    OBSOLETE_TOKEN_893 = 893,
    WITH_ROLLUP_SYM = 894,
    WITHOUT_SYM = 895,
    WORK_SYM = 896,
    WRAPPER_SYM = 897,
    WRITE_SYM = 898,
    X509_SYM = 899,
    XA_SYM = 900,
    XID_SYM = 901,
    XML_SYM = 902,
    XOR = 903,
    YEAR_MONTH_SYM = 904,
    YEAR_SYM = 905,
    ZEROFILL_SYM = 906,
    JSON_UNQUOTED_SEPARATOR_SYM = 907,
    PERSIST_SYM = 908,
    ROLE_SYM = 909,
    ADMIN_SYM = 910,
    INVISIBLE_SYM = 911,
    VISIBLE_SYM = 912,
    EXCEPT_SYM = 913,
    COMPONENT_SYM = 914,
    RECURSIVE_SYM = 915,
    GRAMMAR_SELECTOR_EXPR = 916,
    GRAMMAR_SELECTOR_GCOL = 917,
    GRAMMAR_SELECTOR_PART = 918,
    GRAMMAR_SELECTOR_CTE = 919,
    JSON_OBJECTAGG = 920,
    JSON_ARRAYAGG = 921,
    OF_SYM = 922,
    SKIP_SYM = 923,
    LOCKED_SYM = 924,
    NOWAIT_SYM = 925,
    GROUPING_SYM = 926,
    PERSIST_ONLY_SYM = 927,
    HISTOGRAM_SYM = 928,
    BUCKETS_SYM = 929,
    OBSOLETE_TOKEN_930 = 930,
    CLONE_SYM = 931,
    CUME_DIST_SYM = 932,
    DENSE_RANK_SYM = 933,
    EXCLUDE_SYM = 934,
    FIRST_VALUE_SYM = 935,
    FOLLOWING_SYM = 936,
    GROUPS_SYM = 937,
    LAG_SYM = 938,
    LAST_VALUE_SYM = 939,
    LEAD_SYM = 940,
    NTH_VALUE_SYM = 941,
    NTILE_SYM = 942,
    NULLS_SYM = 943,
    OTHERS_SYM = 944,
    OVER_SYM = 945,
    PERCENT_RANK_SYM = 946,
    PRECEDING_SYM = 947,
    RANK_SYM = 948,
    RESPECT_SYM = 949,
    ROW_NUMBER_SYM = 950,
    TIES_SYM = 951,
    UNBOUNDED_SYM = 952,
    WINDOW_SYM = 953,
    EMPTY_SYM = 954,
    JSON_TABLE_SYM = 955,
    NESTED_SYM = 956,
    ORDINALITY_SYM = 957,
    PATH_SYM = 958,
    HISTORY_SYM = 959,
    REUSE_SYM = 960,
    SRID_SYM = 961,
    THREAD_PRIORITY_SYM = 962,
    RESOURCE_SYM = 963,
    SYSTEM_SYM = 964,
    VCPU_SYM = 965,
    MASTER_PUBLIC_KEY_PATH_SYM = 966,
    GET_MASTER_PUBLIC_KEY_SYM = 967,
    RESTART_SYM = 968,
    DEFINITION_SYM = 969,
    DESCRIPTION_SYM = 970,
    ORGANIZATION_SYM = 971,
    REFERENCE_SYM = 972,
    ACTIVE_SYM = 973,
    INACTIVE_SYM = 974,
    LATERAL_SYM = 975,
    ARRAY_SYM = 976,
    MEMBER_SYM = 977,
    OPTIONAL_SYM = 978,
    SECONDARY_SYM = 979,
    SECONDARY_ENGINE_SYM = 980,
    SECONDARY_LOAD_SYM = 981,
    SECONDARY_UNLOAD_SYM = 982,
    RETAIN_SYM = 983,
    OLD_SYM = 984,
    ENFORCED_SYM = 985,
    OJ_SYM = 986,
    NETWORK_NAMESPACE_SYM = 987,
    RANDOM_SYM = 988,
    MASTER_COMPRESSION_ALGORITHM_SYM = 989,
    MASTER_ZSTD_COMPRESSION_LEVEL_SYM = 990,
    PRIVILEGE_CHECKS_USER_SYM = 991,
    MASTER_TLS_CIPHERSUITES_SYM = 992,
    REQUIRE_ROW_FORMAT_SYM = 993,
    PASSWORD_LOCK_TIME_SYM = 994,
    FAILED_LOGIN_ATTEMPTS_SYM = 995,
    REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM = 996,
    STREAM_SYM = 997,
    OFF_SYM = 998,
    NOT_A_TOKEN_SYM = 1150,
    KEYWORD_USED_AS_IDENT = 1152,
    KEYWORD_USED_AS_KEYWORD = 1153,
    CONDITIONLESS_JOIN = 1154,
    SUBQUERY_AS_EXPR = 1155,
    EMPTY_FROM_CLAUSE = 1156
  };
#endif
/* Tokens.  */
#define ABORT_SYM 258
#define ACCESSIBLE_SYM 259
#define ACCOUNT_SYM 260
#define ACTION 261
#define ADD 262
#define ADDDATE_SYM 263
#define AFTER_SYM 264
#define AGAINST 265
#define AGGREGATE_SYM 266
#define ALGORITHM_SYM 267
#define ALL 268
#define ALTER 269
#define ALWAYS_SYM 270
#define OBSOLETE_TOKEN_271 271
#define ANALYZE_SYM 272
#define AND_AND_SYM 273
#define AND_SYM 274
#define ANY_SYM 275
#define AS 276
#define ASC 277
#define ASCII_SYM 278
#define ASENSITIVE_SYM 279
#define AT_SYM 280
#define AUTOEXTEND_SIZE_SYM 281
#define AUTO_INC 282
#define AVG_ROW_LENGTH 283
#define AVG_SYM 284
#define BACKUP_SYM 285
#define BEFORE_SYM 286
#define BEGIN_SYM 287
#define BETWEEN_SYM 288
#define BIGINT_SYM 289
#define BINARY_SYM 290
#define BINLOG_SYM 291
#define BIN_NUM 292
#define BIT_AND_SYM 293
#define BIT_OR_SYM 294
#define BIT_SYM 295
#define BIT_XOR_SYM 296
#define BLOB_SYM 297
#define BLOCK_SYM 298
#define BOOLEAN_SYM 299
#define BOOL_SYM 300
#define BOTH 301
#define BTREE_SYM 302
#define BY 303
#define BYTE_SYM 304
#define CACHE_SYM 305
#define CALL_SYM 306
#define CASCADE 307
#define CASCADED 308
#define CASE_SYM 309
#define CAST_SYM 310
#define CATALOG_NAME_SYM 311
#define CHAIN_SYM 312
#define CHANGE 313
#define CHANGED 314
#define CHANNEL_SYM 315
#define CHARSET 316
#define CHAR_SYM 317
#define CHECKSUM_SYM 318
#define CHECK_SYM 319
#define CIPHER_SYM 320
#define CLASS_ORIGIN_SYM 321
#define CLIENT_SYM 322
#define CLOSE_SYM 323
#define COALESCE 324
#define CODE_SYM 325
#define COLLATE_SYM 326
#define COLLATION_SYM 327
#define COLUMNS 328
#define COLUMN_SYM 329
#define COLUMN_FORMAT_SYM 330
#define COLUMN_NAME_SYM 331
#define COMMENT_SYM 332
#define COMMITTED_SYM 333
#define COMMIT_SYM 334
#define COMPACT_SYM 335
#define COMPLETION_SYM 336
#define COMPRESSED_SYM 337
#define COMPRESSION_SYM 338
#define ENCRYPTION_SYM 339
#define CONCURRENT 340
#define CONDITION_SYM 341
#define CONNECTION_SYM 342
#define CONSISTENT_SYM 343
#define CONSTRAINT 344
#define CONSTRAINT_CATALOG_SYM 345
#define CONSTRAINT_NAME_SYM 346
#define CONSTRAINT_SCHEMA_SYM 347
#define CONTAINS_SYM 348
#define CONTEXT_SYM 349
#define CONTINUE_SYM 350
#define CONVERT_SYM 351
#define COUNT_SYM 352
#define CPU_SYM 353
#define CREATE 354
#define CROSS 355
#define CUBE_SYM 356
#define CURDATE 357
#define CURRENT_SYM 358
#define CURRENT_USER 359
#define CURSOR_SYM 360
#define CURSOR_NAME_SYM 361
#define CURTIME 362
#define DATABASE 363
#define DATABASES 364
#define DATAFILE_SYM 365
#define DATA_SYM 366
#define DATETIME_SYM 367
#define DATE_ADD_INTERVAL 368
#define DATE_SUB_INTERVAL 369
#define DATE_SYM 370
#define DAY_HOUR_SYM 371
#define DAY_MICROSECOND_SYM 372
#define DAY_MINUTE_SYM 373
#define DAY_SECOND_SYM 374
#define DAY_SYM 375
#define DEALLOCATE_SYM 376
#define DECIMAL_NUM 377
#define DECIMAL_SYM 378
#define DECLARE_SYM 379
#define DEFAULT_SYM 380
#define DEFAULT_AUTH_SYM 381
#define DEFINER_SYM 382
#define DELAYED_SYM 383
#define DELAY_KEY_WRITE_SYM 384
#define DELETE_SYM 385
#define DESC 386
#define DESCRIBE 387
#define OBSOLETE_TOKEN_388 388
#define DETERMINISTIC_SYM 389
#define DIAGNOSTICS_SYM 390
#define DIRECTORY_SYM 391
#define DISABLE_SYM 392
#define DISCARD_SYM 393
#define DISK_SYM 394
#define DISTINCT 395
#define DIV_SYM 396
#define DOUBLE_SYM 397
#define DO_SYM 398
#define DROP 399
#define DUAL_SYM 400
#define DUMPFILE 401
#define DUPLICATE_SYM 402
#define DYNAMIC_SYM 403
#define EACH_SYM 404
#define ELSE 405
#define ELSEIF_SYM 406
#define ENABLE_SYM 407
#define ENCLOSED 408
#define END 409
#define ENDS_SYM 410
#define END_OF_INPUT 411
#define ENGINES_SYM 412
#define ENGINE_SYM 413
#define ENUM_SYM 414
#define EQ 415
#define EQUAL_SYM 416
#define ERROR_SYM 417
#define ERRORS 418
#define ESCAPED 419
#define ESCAPE_SYM 420
#define EVENTS_SYM 421
#define EVENT_SYM 422
#define EVERY_SYM 423
#define EXCHANGE_SYM 424
#define EXECUTE_SYM 425
#define EXISTS 426
#define EXIT_SYM 427
#define EXPANSION_SYM 428
#define EXPIRE_SYM 429
#define EXPORT_SYM 430
#define EXTENDED_SYM 431
#define EXTENT_SIZE_SYM 432
#define EXTRACT_SYM 433
#define FALSE_SYM 434
#define FAST_SYM 435
#define FAULTS_SYM 436
#define FETCH_SYM 437
#define FILE_SYM 438
#define FILE_BLOCK_SIZE_SYM 439
#define FILTER_SYM 440
#define FIRST_SYM 441
#define FIXED_SYM 442
#define FLOAT_NUM 443
#define FLOAT_SYM 444
#define FLUSH_SYM 445
#define FOLLOWS_SYM 446
#define FORCE_SYM 447
#define FOREIGN 448
#define FOR_SYM 449
#define FORMAT_SYM 450
#define FOUND_SYM 451
#define FROM 452
#define FULL 453
#define FULLTEXT_SYM 454
#define FUNCTION_SYM 455
#define GE 456
#define GENERAL 457
#define GENERATED 458
#define GROUP_REPLICATION 459
#define GEOMETRYCOLLECTION_SYM 460
#define GEOMETRY_SYM 461
#define GET_FORMAT 462
#define GET_SYM 463
#define GLOBAL_SYM 464
#define GRANT 465
#define GRANTS 466
#define GROUP_SYM 467
#define GROUP_CONCAT_SYM 468
#define GT_SYM 469
#define HANDLER_SYM 470
#define HASH_SYM 471
#define HAVING 472
#define HELP_SYM 473
#define HEX_NUM 474
#define HIGH_PRIORITY 475
#define HOST_SYM 476
#define HOSTS_SYM 477
#define HOUR_MICROSECOND_SYM 478
#define HOUR_MINUTE_SYM 479
#define HOUR_SECOND_SYM 480
#define HOUR_SYM 481
#define IDENT 482
#define IDENTIFIED_SYM 483
#define IDENT_QUOTED 484
#define IF 485
#define IGNORE_SYM 486
#define IGNORE_SERVER_IDS_SYM 487
#define IMPORT 488
#define INDEXES 489
#define INDEX_SYM 490
#define INFILE 491
#define INITIAL_SIZE_SYM 492
#define INNER_SYM 493
#define INOUT_SYM 494
#define INSENSITIVE_SYM 495
#define INSERT_SYM 496
#define INSERT_METHOD 497
#define INSTANCE_SYM 498
#define INSTALL_SYM 499
#define INTERVAL_SYM 500
#define INTO 501
#define INT_SYM 502
#define INVOKER_SYM 503
#define IN_SYM 504
#define IO_AFTER_GTIDS 505
#define IO_BEFORE_GTIDS 506
#define IO_SYM 507
#define IPC_SYM 508
#define IS 509
#define ISOLATION 510
#define ISSUER_SYM 511
#define ITERATE_SYM 512
#define JOIN_SYM 513
#define JSON_SEPARATOR_SYM 514
#define JSON_SYM 515
#define KEYS 516
#define KEY_BLOCK_SIZE 517
#define KEY_SYM 518
#define KILL_SYM 519
#define LANGUAGE_SYM 520
#define LAST_SYM 521
#define LE 522
#define LEADING 523
#define LEAVES 524
#define LEAVE_SYM 525
#define LEFT 526
#define LESS_SYM 527
#define LEVEL_SYM 528
#define LEX_HOSTNAME 529
#define LIKE 530
#define LIMIT 531
#define LINEAR_SYM 532
#define LINES 533
#define LINESTRING_SYM 534
#define LIST_SYM 535
#define LOAD 536
#define LOCAL_SYM 537
#define OBSOLETE_TOKEN_538 538
#define LOCKS_SYM 539
#define LOCK_SYM 540
#define LOGFILE_SYM 541
#define LOGS_SYM 542
#define LONGBLOB_SYM 543
#define LONGTEXT_SYM 544
#define LONG_NUM 545
#define LONG_SYM 546
#define LOOP_SYM 547
#define LOW_PRIORITY 548
#define LT 549
#define MASTER_AUTO_POSITION_SYM 550
#define MASTER_BIND_SYM 551
#define MASTER_CONNECT_RETRY_SYM 552
#define MASTER_DELAY_SYM 553
#define MASTER_HOST_SYM 554
#define MASTER_LOG_FILE_SYM 555
#define MASTER_LOG_POS_SYM 556
#define MASTER_PASSWORD_SYM 557
#define MASTER_PORT_SYM 558
#define MASTER_RETRY_COUNT_SYM 559
#define MASTER_SERVER_ID_SYM 560
#define MASTER_SSL_CAPATH_SYM 561
#define MASTER_TLS_VERSION_SYM 562
#define MASTER_SSL_CA_SYM 563
#define MASTER_SSL_CERT_SYM 564
#define MASTER_SSL_CIPHER_SYM 565
#define MASTER_SSL_CRL_SYM 566
#define MASTER_SSL_CRLPATH_SYM 567
#define MASTER_SSL_KEY_SYM 568
#define MASTER_SSL_SYM 569
#define MASTER_SSL_VERIFY_SERVER_CERT_SYM 570
#define MASTER_SYM 571
#define MASTER_USER_SYM 572
#define MASTER_HEARTBEAT_PERIOD_SYM 573
#define MATCH 574
#define MAX_CONNECTIONS_PER_HOUR 575
#define MAX_QUERIES_PER_HOUR 576
#define MAX_ROWS 577
#define MAX_SIZE_SYM 578
#define MAX_SYM 579
#define MAX_UPDATES_PER_HOUR 580
#define MAX_USER_CONNECTIONS_SYM 581
#define MAX_VALUE_SYM 582
#define MEDIUMBLOB_SYM 583
#define MEDIUMINT_SYM 584
#define MEDIUMTEXT_SYM 585
#define MEDIUM_SYM 586
#define MEMORY_SYM 587
#define MERGE_SYM 588
#define MESSAGE_TEXT_SYM 589
#define MICROSECOND_SYM 590
#define MIGRATE_SYM 591
#define MINUTE_MICROSECOND_SYM 592
#define MINUTE_SECOND_SYM 593
#define MINUTE_SYM 594
#define MIN_ROWS 595
#define MIN_SYM 596
#define MODE_SYM 597
#define MODIFIES_SYM 598
#define MODIFY_SYM 599
#define MOD_SYM 600
#define MONTH_SYM 601
#define MULTILINESTRING_SYM 602
#define MULTIPOINT_SYM 603
#define MULTIPOLYGON_SYM 604
#define MUTEX_SYM 605
#define MYSQL_ERRNO_SYM 606
#define NAMES_SYM 607
#define NAME_SYM 608
#define NATIONAL_SYM 609
#define NATURAL 610
#define NCHAR_STRING 611
#define NCHAR_SYM 612
#define NDBCLUSTER_SYM 613
#define NE 614
#define NEG 615
#define NEVER_SYM 616
#define NEW_SYM 617
#define NEXT_SYM 618
#define NODEGROUP_SYM 619
#define NONE_SYM 620
#define NOT2_SYM 621
#define NOT_SYM 622
#define NOW_SYM 623
#define NO_SYM 624
#define NO_WAIT_SYM 625
#define NO_WRITE_TO_BINLOG 626
#define NULL_SYM 627
#define NUM 628
#define NUMBER_SYM 629
#define NUMERIC_SYM 630
#define NVARCHAR_SYM 631
#define OFFSET_SYM 632
#define ON_SYM 633
#define ONE_SYM 634
#define ONLY_SYM 635
#define OPEN_SYM 636
#define OPTIMIZE 637
#define OPTIMIZER_COSTS_SYM 638
#define OPTIONS_SYM 639
#define OPTION 640
#define OPTIONALLY 641
#define OR2_SYM 642
#define ORDER_SYM 643
#define OR_OR_SYM 644
#define OR_SYM 645
#define OUTER_SYM 646
#define OUTFILE 647
#define OUT_SYM 648
#define OWNER_SYM 649
#define PACK_KEYS_SYM 650
#define PAGE_SYM 651
#define PARAM_MARKER 652
#define PARSER_SYM 653
#define OBSOLETE_TOKEN_654 654
#define PARTIAL 655
#define PARTITION_SYM 656
#define PARTITIONS_SYM 657
#define PARTITIONING_SYM 658
#define PASSWORD 659
#define PHASE_SYM 660
#define PLUGIN_DIR_SYM 661
#define PLUGIN_SYM 662
#define PLUGINS_SYM 663
#define POINT_SYM 664
#define POLYGON_SYM 665
#define PORT_SYM 666
#define POSITION_SYM 667
#define PRECEDES_SYM 668
#define PRECISION 669
#define PREPARE_SYM 670
#define PRESERVE_SYM 671
#define PREV_SYM 672
#define PRIMARY_SYM 673
#define PRIVILEGES 674
#define PROCEDURE_SYM 675
#define PROCESS 676
#define PROCESSLIST_SYM 677
#define PROFILE_SYM 678
#define PROFILES_SYM 679
#define PROXY_SYM 680
#define PURGE 681
#define QUARTER_SYM 682
#define QUERY_SYM 683
#define QUICK 684
#define RANGE_SYM 685
#define READS_SYM 686
#define READ_ONLY_SYM 687
#define READ_SYM 688
#define READ_WRITE_SYM 689
#define REAL_SYM 690
#define REBUILD_SYM 691
#define RECOVER_SYM 692
#define OBSOLETE_TOKEN_693 693
#define REDO_BUFFER_SIZE_SYM 694
#define REDUNDANT_SYM 695
#define REFERENCES 696
#define REGEXP 697
#define RELAY 698
#define RELAYLOG_SYM 699
#define RELAY_LOG_FILE_SYM 700
#define RELAY_LOG_POS_SYM 701
#define RELAY_THREAD 702
#define RELEASE_SYM 703
#define RELOAD 704
#define REMOVE_SYM 705
#define RENAME 706
#define REORGANIZE_SYM 707
#define REPAIR 708
#define REPEATABLE_SYM 709
#define REPEAT_SYM 710
#define REPLACE_SYM 711
#define REPLICATION 712
#define REPLICATE_DO_DB 713
#define REPLICATE_IGNORE_DB 714
#define REPLICATE_DO_TABLE 715
#define REPLICATE_IGNORE_TABLE 716
#define REPLICATE_WILD_DO_TABLE 717
#define REPLICATE_WILD_IGNORE_TABLE 718
#define REPLICATE_REWRITE_DB 719
#define REQUIRE_SYM 720
#define RESET_SYM 721
#define RESIGNAL_SYM 722
#define RESOURCES 723
#define RESTORE_SYM 724
#define RESTRICT 725
#define RESUME_SYM 726
#define RETURNED_SQLSTATE_SYM 727
#define RETURNS_SYM 728
#define RETURN_SYM 729
#define REVERSE_SYM 730
#define REVOKE 731
#define RIGHT 732
#define ROLLBACK_SYM 733
#define ROLLUP_SYM 734
#define ROTATE_SYM 735
#define ROUTINE_SYM 736
#define ROWS_SYM 737
#define ROW_FORMAT_SYM 738
#define ROW_SYM 739
#define ROW_COUNT_SYM 740
#define RTREE_SYM 741
#define SAVEPOINT_SYM 742
#define SCHEDULE_SYM 743
#define SCHEMA_NAME_SYM 744
#define SECOND_MICROSECOND_SYM 745
#define SECOND_SYM 746
#define SECURITY_SYM 747
#define SELECT_SYM 748
#define SENSITIVE_SYM 749
#define SEPARATOR_SYM 750
#define SERIALIZABLE_SYM 751
#define SERIAL_SYM 752
#define SESSION_SYM 753
#define SERVER_SYM 754
#define OBSOLETE_TOKEN_755 755
#define SET_SYM 756
#define SET_VAR 757
#define SHARE_SYM 758
#define SHIFT_LEFT 759
#define SHIFT_RIGHT 760
#define SHOW 761
#define SHUTDOWN 762
#define SIGNAL_SYM 763
#define SIGNED_SYM 764
#define SIMPLE_SYM 765
#define SLAVE 766
#define SLOW 767
#define SMALLINT_SYM 768
#define SNAPSHOT_SYM 769
#define SOCKET_SYM 770
#define SONAME_SYM 771
#define SOUNDS_SYM 772
#define SOURCE_SYM 773
#define SPATIAL_SYM 774
#define SPECIFIC_SYM 775
#define SQLEXCEPTION_SYM 776
#define SQLSTATE_SYM 777
#define SQLWARNING_SYM 778
#define SQL_AFTER_GTIDS 779
#define SQL_AFTER_MTS_GAPS 780
#define SQL_BEFORE_GTIDS 781
#define SQL_BIG_RESULT 782
#define SQL_BUFFER_RESULT 783
#define OBSOLETE_TOKEN_784 784
#define SQL_CALC_FOUND_ROWS 785
#define SQL_NO_CACHE_SYM 786
#define SQL_SMALL_RESULT 787
#define SQL_SYM 788
#define SQL_THREAD 789
#define SSL_SYM 790
#define STACKED_SYM 791
#define STARTING 792
#define STARTS_SYM 793
#define START_SYM 794
#define STATS_AUTO_RECALC_SYM 795
#define STATS_PERSISTENT_SYM 796
#define STATS_SAMPLE_PAGES_SYM 797
#define STATUS_SYM 798
#define STDDEV_SAMP_SYM 799
#define STD_SYM 800
#define STOP_SYM 801
#define STORAGE_SYM 802
#define STORED_SYM 803
#define STRAIGHT_JOIN 804
#define STRING_SYM 805
#define SUBCLASS_ORIGIN_SYM 806
#define SUBDATE_SYM 807
#define SUBJECT_SYM 808
#define SUBPARTITIONS_SYM 809
#define SUBPARTITION_SYM 810
#define SUBSTRING 811
#define SUM_SYM 812
#define SUPER_SYM 813
#define SUSPEND_SYM 814
#define SWAPS_SYM 815
#define SWITCHES_SYM 816
#define SYSDATE 817
#define TABLES 818
#define TABLESPACE_SYM 819
#define OBSOLETE_TOKEN_820 820
#define TABLE_SYM 821
#define TABLE_CHECKSUM_SYM 822
#define TABLE_NAME_SYM 823
#define TEMPORARY 824
#define TEMPTABLE_SYM 825
#define TERMINATED 826
#define TEXT_STRING 827
#define TEXT_SYM 828
#define THAN_SYM 829
#define THEN_SYM 830
#define TIMESTAMP_SYM 831
#define TIMESTAMP_ADD 832
#define TIMESTAMP_DIFF 833
#define TIME_SYM 834
#define TINYBLOB_SYM 835
#define TINYINT_SYM 836
#define TINYTEXT_SYN 837
#define TO_SYM 838
#define TRAILING 839
#define TRANSACTION_SYM 840
#define TRIGGERS_SYM 841
#define TRIGGER_SYM 842
#define TRIM 843
#define TRUE_SYM 844
#define TRUNCATE_SYM 845
#define TYPES_SYM 846
#define TYPE_SYM 847
#define OBSOLETE_TOKEN_848 848
#define ULONGLONG_NUM 849
#define UNCOMMITTED_SYM 850
#define UNDEFINED_SYM 851
#define UNDERSCORE_CHARSET 852
#define UNDOFILE_SYM 853
#define UNDO_BUFFER_SIZE_SYM 854
#define UNDO_SYM 855
#define UNICODE_SYM 856
#define UNINSTALL_SYM 857
#define UNION_SYM 858
#define UNIQUE_SYM 859
#define UNKNOWN_SYM 860
#define UNLOCK_SYM 861
#define UNSIGNED_SYM 862
#define UNTIL_SYM 863
#define UPDATE_SYM 864
#define UPGRADE_SYM 865
#define USAGE 866
#define USER 867
#define USE_FRM 868
#define USE_SYM 869
#define USING 870
#define UTC_DATE_SYM 871
#define UTC_TIMESTAMP_SYM 872
#define UTC_TIME_SYM 873
#define VALIDATION_SYM 874
#define VALUES 875
#define VALUE_SYM 876
#define VARBINARY_SYM 877
#define VARCHAR_SYM 878
#define VARIABLES 879
#define VARIANCE_SYM 880
#define VARYING 881
#define VAR_SAMP_SYM 882
#define VIEW_SYM 883
#define VIRTUAL_SYM 884
#define WAIT_SYM 885
#define WARNINGS 886
#define WEEK_SYM 887
#define WEIGHT_STRING_SYM 888
#define WHEN_SYM 889
#define WHERE 890
#define WHILE_SYM 891
#define WITH 892
#define OBSOLETE_TOKEN_893 893
#define WITH_ROLLUP_SYM 894
#define WITHOUT_SYM 895
#define WORK_SYM 896
#define WRAPPER_SYM 897
#define WRITE_SYM 898
#define X509_SYM 899
#define XA_SYM 900
#define XID_SYM 901
#define XML_SYM 902
#define XOR 903
#define YEAR_MONTH_SYM 904
#define YEAR_SYM 905
#define ZEROFILL_SYM 906
#define JSON_UNQUOTED_SEPARATOR_SYM 907
#define PERSIST_SYM 908
#define ROLE_SYM 909
#define ADMIN_SYM 910
#define INVISIBLE_SYM 911
#define VISIBLE_SYM 912
#define EXCEPT_SYM 913
#define COMPONENT_SYM 914
#define RECURSIVE_SYM 915
#define GRAMMAR_SELECTOR_EXPR 916
#define GRAMMAR_SELECTOR_GCOL 917
#define GRAMMAR_SELECTOR_PART 918
#define GRAMMAR_SELECTOR_CTE 919
#define JSON_OBJECTAGG 920
#define JSON_ARRAYAGG 921
#define OF_SYM 922
#define SKIP_SYM 923
#define LOCKED_SYM 924
#define NOWAIT_SYM 925
#define GROUPING_SYM 926
#define PERSIST_ONLY_SYM 927
#define HISTOGRAM_SYM 928
#define BUCKETS_SYM 929
#define OBSOLETE_TOKEN_930 930
#define CLONE_SYM 931
#define CUME_DIST_SYM 932
#define DENSE_RANK_SYM 933
#define EXCLUDE_SYM 934
#define FIRST_VALUE_SYM 935
#define FOLLOWING_SYM 936
#define GROUPS_SYM 937
#define LAG_SYM 938
#define LAST_VALUE_SYM 939
#define LEAD_SYM 940
#define NTH_VALUE_SYM 941
#define NTILE_SYM 942
#define NULLS_SYM 943
#define OTHERS_SYM 944
#define OVER_SYM 945
#define PERCENT_RANK_SYM 946
#define PRECEDING_SYM 947
#define RANK_SYM 948
#define RESPECT_SYM 949
#define ROW_NUMBER_SYM 950
#define TIES_SYM 951
#define UNBOUNDED_SYM 952
#define WINDOW_SYM 953
#define EMPTY_SYM 954
#define JSON_TABLE_SYM 955
#define NESTED_SYM 956
#define ORDINALITY_SYM 957
#define PATH_SYM 958
#define HISTORY_SYM 959
#define REUSE_SYM 960
#define SRID_SYM 961
#define THREAD_PRIORITY_SYM 962
#define RESOURCE_SYM 963
#define SYSTEM_SYM 964
#define VCPU_SYM 965
#define MASTER_PUBLIC_KEY_PATH_SYM 966
#define GET_MASTER_PUBLIC_KEY_SYM 967
#define RESTART_SYM 968
#define DEFINITION_SYM 969
#define DESCRIPTION_SYM 970
#define ORGANIZATION_SYM 971
#define REFERENCE_SYM 972
#define ACTIVE_SYM 973
#define INACTIVE_SYM 974
#define LATERAL_SYM 975
#define ARRAY_SYM 976
#define MEMBER_SYM 977
#define OPTIONAL_SYM 978
#define SECONDARY_SYM 979
#define SECONDARY_ENGINE_SYM 980
#define SECONDARY_LOAD_SYM 981
#define SECONDARY_UNLOAD_SYM 982
#define RETAIN_SYM 983
#define OLD_SYM 984
#define ENFORCED_SYM 985
#define OJ_SYM 986
#define NETWORK_NAMESPACE_SYM 987
#define RANDOM_SYM 988
#define MASTER_COMPRESSION_ALGORITHM_SYM 989
#define MASTER_ZSTD_COMPRESSION_LEVEL_SYM 990
#define PRIVILEGE_CHECKS_USER_SYM 991
#define MASTER_TLS_CIPHERSUITES_SYM 992
#define REQUIRE_ROW_FORMAT_SYM 993
#define PASSWORD_LOCK_TIME_SYM 994
#define FAILED_LOGIN_ATTEMPTS_SYM 995
#define REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM 996
#define STREAM_SYM 997
#define OFF_SYM 998
#define NOT_A_TOKEN_SYM 1150
#define KEYWORD_USED_AS_IDENT 1152
#define KEYWORD_USED_AS_KEYWORD 1153
#define CONDITIONLESS_JOIN 1154
#define SUBQUERY_AS_EXPR 1155
#define EMPTY_FROM_CLAUSE 1156

/* Value type.  */

/* Location type.  */
#if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
typedef struct YYLTYPE YYLTYPE;
struct YYLTYPE
{
  int first_line;
  int first_column;
  int last_line;
  int last_column;
};
# define YYLTYPE_IS_DECLARED 1
# define YYLTYPE_IS_TRIVIAL 1
#endif



int MYSQLparse (class THD *YYTHD, class Parse_tree_root **parse_tree);

#endif /* !YY_MYSQL_EXPORT_HOME_PB2_BUILD_SB_3_38522761_1585229681_91_DIST_GPL_SQL_SQL_YACC_H_INCLUDED  */

/* Copy the second part of user declarations.  */

#line 2033 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:358  */

#ifdef short
# undef short
#endif

#ifdef YYTYPE_UINT8
typedef YYTYPE_UINT8 yytype_uint8;
#else
typedef unsigned char yytype_uint8;
#endif

#ifdef YYTYPE_INT8
typedef YYTYPE_INT8 yytype_int8;
#else
typedef signed char yytype_int8;
#endif

#ifdef YYTYPE_UINT16
typedef YYTYPE_UINT16 yytype_uint16;
#else
typedef unsigned short int yytype_uint16;
#endif

#ifdef YYTYPE_INT16
typedef YYTYPE_INT16 yytype_int16;
#else
typedef short int yytype_int16;
#endif

#ifndef YYSIZE_T
# ifdef __SIZE_TYPE__
#  define YYSIZE_T __SIZE_TYPE__
# elif defined size_t
#  define YYSIZE_T size_t
# elif ! defined YYSIZE_T
#  include <stddef.h> /* INFRINGES ON USER NAME SPACE */
#  define YYSIZE_T size_t
# else
#  define YYSIZE_T unsigned int
# endif
#endif

#define YYSIZE_MAXIMUM ((YYSIZE_T) -1)

#ifndef YY_
# if defined YYENABLE_NLS && YYENABLE_NLS
#  if ENABLE_NLS
#   include <libintl.h> /* INFRINGES ON USER NAME SPACE */
#   define YY_(Msgid) dgettext ("bison-runtime", Msgid)
#  endif
# endif
# ifndef YY_
#  define YY_(Msgid) Msgid
# endif
#endif

#ifndef YY_ATTRIBUTE
# if (defined __GNUC__                                               \
      && (2 < __GNUC__ || (__GNUC__ == 2 && 96 <= __GNUC_MINOR__)))  \
     || defined __SUNPRO_C && 0x5110 <= __SUNPRO_C
#  define YY_ATTRIBUTE(Spec) __attribute__(Spec)
# else
#  define YY_ATTRIBUTE(Spec) /* empty */
# endif
#endif

#ifndef YY_ATTRIBUTE_PURE
# define YY_ATTRIBUTE_PURE   YY_ATTRIBUTE ((__pure__))
#endif

#ifndef YY_ATTRIBUTE_UNUSED
# define YY_ATTRIBUTE_UNUSED YY_ATTRIBUTE ((__unused__))
#endif

#if !defined _Noreturn \
     && (!defined __STDC_VERSION__ || __STDC_VERSION__ < 201112)
# if defined _MSC_VER && 1200 <= _MSC_VER
#  define _Noreturn __declspec (noreturn)
# else
#  define _Noreturn YY_ATTRIBUTE ((__noreturn__))
# endif
#endif

/* Suppress unused-variable warnings by "using" E.  */
#if ! defined lint || defined __GNUC__
# define YYUSE(E) ((void) (E))
#else
# define YYUSE(E) /* empty */
#endif

#if defined __GNUC__ && 407 <= __GNUC__ * 100 + __GNUC_MINOR__
/* Suppress an incorrect diagnostic about yylval being uninitialized.  */
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN \
    _Pragma ("GCC diagnostic push") \
    _Pragma ("GCC diagnostic ignored \"-Wuninitialized\"")\
    _Pragma ("GCC diagnostic ignored \"-Wmaybe-uninitialized\"")
# define YY_IGNORE_MAYBE_UNINITIALIZED_END \
    _Pragma ("GCC diagnostic pop")
#else
# define YY_INITIAL_VALUE(Value) Value
#endif
#ifndef YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
# define YY_IGNORE_MAYBE_UNINITIALIZED_END
#endif
#ifndef YY_INITIAL_VALUE
# define YY_INITIAL_VALUE(Value) /* Nothing. */
#endif


#if ! defined yyoverflow || YYERROR_VERBOSE

/* The parser invokes alloca or malloc; define the necessary symbols.  */

# ifdef YYSTACK_USE_ALLOCA
#  if YYSTACK_USE_ALLOCA
#   ifdef __GNUC__
#    define YYSTACK_ALLOC __builtin_alloca
#   elif defined __BUILTIN_VA_ARG_INCR
#    include <alloca.h> /* INFRINGES ON USER NAME SPACE */
#   elif defined _AIX
#    define YYSTACK_ALLOC __alloca
#   elif defined _MSC_VER
#    include <malloc.h> /* INFRINGES ON USER NAME SPACE */
#    define alloca _alloca
#   else
#    define YYSTACK_ALLOC alloca
#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS
#     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
      /* Use EXIT_SUCCESS as a witness for stdlib.h.  */
#     ifndef EXIT_SUCCESS
#      define EXIT_SUCCESS 0
#     endif
#    endif
#   endif
#  endif
# endif

# ifdef YYSTACK_ALLOC
   /* Pacify GCC's 'empty if-body' warning.  */
#  define YYSTACK_FREE(Ptr) do { /* empty */; } while (0)
#  ifndef YYSTACK_ALLOC_MAXIMUM
    /* The OS might guarantee only one guard page at the bottom of the stack,
       and a page size can be as small as 4096 bytes.  So we cannot safely
       invoke alloca (N) if N exceeds 4096.  Use a slightly smaller number
       to allow for a few compiler-allocated temporary stack slots.  */
#   define YYSTACK_ALLOC_MAXIMUM 4032 /* reasonable circa 2006 */
#  endif
# else
#  define YYSTACK_ALLOC YYMALLOC
#  define YYSTACK_FREE YYFREE
#  ifndef YYSTACK_ALLOC_MAXIMUM
#   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
#  endif
#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
       && ! ((defined YYMALLOC || defined malloc) \
             && (defined YYFREE || defined free)))
#   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
#   ifndef EXIT_SUCCESS
#    define EXIT_SUCCESS 0
#   endif
#  endif
#  ifndef YYMALLOC
#   define YYMALLOC malloc
#   if ! defined malloc && ! defined EXIT_SUCCESS
void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
#  ifndef YYFREE
#   define YYFREE free
#   if ! defined free && ! defined EXIT_SUCCESS
void free (void *); /* INFRINGES ON USER NAME SPACE */
#   endif
#  endif
# endif
#endif /* ! defined yyoverflow || YYERROR_VERBOSE */


#if (! defined yyoverflow \
     && (! defined __cplusplus \
         || (defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL \
             && defined YYSTYPE_IS_TRIVIAL && YYSTYPE_IS_TRIVIAL)))

/* A type that is properly aligned for any stack member.  */
union yyalloc
{
  yytype_int16 yyss_alloc;
  YYSTYPE yyvs_alloc;
  YYLTYPE yyls_alloc;
};

/* The size of the maximum gap between one aligned stack and the next.  */
# define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)

/* The size of an array large to enough to hold all stacks, each with
   N elements.  */
# define YYSTACK_BYTES(N) \
     ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
      + 2 * YYSTACK_GAP_MAXIMUM)

# define YYCOPY_NEEDED 1

/* Relocate STACK from its old location to the new one.  The
   local variables YYSIZE and YYSTACKSIZE give the old and new number of
   elements in the stack, and YYPTR gives the new location of the
   stack.  Advance YYPTR to a properly aligned location for the next
   stack.  */
# define YYSTACK_RELOCATE(Stack_alloc, Stack)                           \
    do                                                                  \
      {                                                                 \
        YYSIZE_T yynewbytes;                                            \
        YYCOPY (&yyptr->Stack_alloc, Stack, yysize);                    \
        Stack = &yyptr->Stack_alloc;                                    \
        yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
        yyptr += yynewbytes / sizeof (*yyptr);                          \
      }                                                                 \
    while (0)

#endif

#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
/* Copy COUNT objects from SRC to DST.  The source and destination do
   not overlap.  */
# ifndef YYCOPY
#  if defined __GNUC__ && 1 < __GNUC__
#   define YYCOPY(Dst, Src, Count) \
      __builtin_memcpy (Dst, Src, (Count) * sizeof (*(Src)))
#  else
#   define YYCOPY(Dst, Src, Count)              \
      do                                        \
        {                                       \
          YYSIZE_T yyi;                         \
          for (yyi = 0; yyi < (Count); yyi++)   \
            (Dst)[yyi] = (Src)[yyi];            \
        }                                       \
      while (0)
#  endif
# endif
#endif /* !YYCOPY_NEEDED */

/* YYFINAL -- State number of the termination state.  */
#define YYFINAL  998
/* YYLAST -- Last index in YYTABLE.  */
#define YYLAST   83481

/* YYNTOKENS -- Number of terminals.  */
#define YYNTOKENS  769
/* YYNNTS -- Number of nonterminals.  */
#define YYNNTS  915
/* YYNRULES -- Number of rules.  */
#define YYNRULES  2974
/* YYNSTATES -- Number of states.  */
#define YYNSTATES  5216

/* YYTRANSLATE[YYX] -- Symbol number corresponding to YYX as returned
   by yylex, with out-of-bounds checking.  */
#define YYUNDEFTOK  2
#define YYMAXUTOK   1156

#define YYTRANSLATE(YYX)                                                \
  ((unsigned int) (YYX) <= YYMAXUTOK ? yytranslate[YYX] : YYUNDEFTOK)

/* YYTRANSLATE[TOKEN-NUM] -- Symbol number corresponding to TOKEN-NUM
   as returned by yylex, without out-of-bounds checking.  */
static const yytype_uint16 yytranslate[] =
{
       0,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   766,     2,     2,     2,   754,   749,     2,
     758,   759,   752,   751,   763,   750,   764,   753,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,   765,   761,
       2,     2,     2,     2,   762,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,   755,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,   767,   748,   768,   756,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     1,     2,     3,     4,
       5,     6,     7,     8,     9,    10,    11,    12,    13,    14,
      15,    16,    17,    18,    19,    20,    21,    22,    23,    24,
      25,    26,    27,    28,    29,    30,    31,    32,    33,    34,
      35,    36,    37,    38,    39,    40,    41,    42,    43,    44,
      45,    46,    47,    48,    49,    50,    51,    52,    53,    54,
      55,    56,    57,    58,    59,    60,    61,    62,    63,    64,
      65,    66,    67,    68,    69,    70,    71,    72,    73,    74,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    86,    87,    88,    89,    90,    91,    92,    93,    94,
      95,    96,    97,    98,    99,   100,   101,   102,   103,   104,
     105,   106,   107,   108,   109,   110,   111,   112,   113,   114,
     115,   116,   117,   118,   119,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,   137,   138,   139,   140,   141,   142,   143,   144,
     145,   146,   147,   148,   149,   150,   151,   152,   153,   154,
     155,   156,   157,   158,   159,   160,   161,   162,   163,   164,
     165,   166,   167,   168,   169,   170,   171,   172,   173,   174,
     175,   176,   177,   178,   179,   180,   181,   182,   183,   184,
     185,   186,   187,   188,   189,   190,   191,   192,   193,   194,
     195,   196,   197,   198,   199,   200,   201,   202,   203,   204,
     205,   206,   207,   208,   209,   210,   211,   212,   213,   214,
     215,   216,   217,   218,   219,   220,   221,   222,   223,   224,
     225,   226,   227,   228,   229,   230,   231,   232,   233,   234,
     235,   236,   237,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,   249,   250,   251,   252,   253,   254,
     255,   256,   257,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
       2,     2,     2,     2,     2,     2,     2,     2,     2,     2,
     744,     2,   745,   746,   747,   757,   760
};

#if YYDEBUG
  /* YYRLINE[YYN] -- Source line where rule number YYN was defined.  */
static const yytype_uint16 yyrline[] =
{
       0,  1986,  1986,  1987,  1992,  2002,  2020,  2027,  2040,  2039,
    2064,  2071,  2073,  2077,  2078,  2083,  2084,  2085,  2086,  2087,
    2088,  2089,  2090,  2091,  2092,  2093,  2094,  2095,  2096,  2097,
    2098,  2099,  2100,  2101,  2102,  2103,  2104,  2105,  2106,  2107,
    2108,  2109,  2110,  2111,  2112,  2113,  2114,  2115,  2116,  2117,
    2118,  2119,  2120,  2121,  2122,  2123,  2124,  2125,  2126,  2127,
    2128,  2129,  2130,  2131,  2132,  2133,  2134,  2135,  2136,  2137,
    2138,  2139,  2140,  2141,  2142,  2143,  2144,  2145,  2146,  2147,
    2148,  2149,  2150,  2151,  2152,  2153,  2154,  2155,  2156,  2157,
    2158,  2159,  2160,  2161,  2162,  2163,  2164,  2165,  2166,  2167,
    2168,  2169,  2170,  2171,  2172,  2173,  2177,  2187,  2188,  2192,
    2212,  2219,  2230,  2229,  2240,  2242,  2246,  2247,  2251,  2264,
    2263,  2283,  2282,  2296,  2295,  2310,  2311,  2314,  2321,  2328,
    2335,  2342,  2349,  2357,  2366,  2372,  2379,  2386,  2394,  2403,
    2409,  2415,  2423,  2431,  2437,  2444,  2451,  2459,  2471,  2477,
    2484,  2491,  2499,  2509,  2510,  2514,  2518,  2522,  2526,  2530,
    2540,  2544,  2548,  2553,  2564,  2569,  2573,  2577,  2581,  2582,
    2586,  2590,  2594,  2599,  2603,  2607,  2611,  2617,  2651,  2655,
    2659,  2663,  2669,  2670,  2680,  2681,  2684,  2686,  2687,  2691,
    2697,  2703,  2712,  2716,  2720,  2727,  2732,  2740,  2744,  2760,
    2764,  2775,  2779,  2794,  2804,  2814,  2819,  2827,  2834,  2847,
    2846,  2861,  2863,  2875,  2895,  2914,  2934,  2951,  2956,  2965,
    2970,  2982,  2994,  3008,  3024,  3028,  3035,  3044,  3052,  3063,
    3064,  3068,  3072,  3076,  3080,  3084,  3089,  3093,  3101,  3100,
    3132,  3131,  3140,  3149,  3150,  3156,  3162,  3172,  3178,  3186,
    3188,  3197,  3198,  3202,  3208,  3217,  3218,  3226,  3226,  3284,
    3285,  3286,  3287,  3288,  3289,  3290,  3291,  3292,  3293,  3294,
    3295,  3296,  3300,  3314,  3333,  3334,  3338,  3339,  3344,  3346,
    3348,  3350,  3352,  3354,  3356,  3362,  3363,  3364,  3368,  3372,
    3379,  3386,  3387,  3394,  3396,  3400,  3401,  3405,  3456,  3458,
    3462,  3463,  3467,  3517,  3518,  3519,  3520,  3524,  3525,  3529,
    3530,  3535,  3538,  3562,  3661,  3679,  3678,  3757,  3753,  3829,
    3830,  3835,  3837,  3842,  3865,  3876,  3880,  3902,  3903,  3907,
    3911,  3924,  3930,  3936,  3945,  3958,  3984,  3990,  3991,  3997,
    3998,  4003,  4009,  4022,  4024,  4044,  4050,  4052,  4054,  4056,
    4058,  4060,  4062,  4064,  4066,  4068,  4070,  4072,  4077,  4091,
    4108,  4109,  4111,  4116,  4122,  4131,  4137,  4146,  4154,  4182,
    4190,  4192,  4201,  4206,  4212,  4221,  4229,  4231,  4233,  4235,
    4237,  4239,  4241,  4243,  4245,  4247,  4249,  4251,  4253,  4258,
    4278,  4302,  4306,  4314,  4315,  4316,  4317,  4318,  4319,  4320,
    4321,  4322,  4323,  4324,  4325,  4326,  4331,  4330,  4341,  4341,
    4401,  4400,  4457,  4457,  4479,  4536,  4583,  4607,  4606,  4631,
    4653,  4655,  4656,  4660,  4678,  4699,  4707,  4745,  4699,  4773,
    4775,  4776,  4780,  4781,  4786,  4796,  4785,  4848,  4847,  4861,
    4862,  4866,  4867,  4872,  4880,  4871,  4930,  4938,  4929,  4984,
    4997,  5002,  5001,  5039,  5040,  5045,  5044,  5078,  5078,  5097,
    5096,  5144,  5159,  5167,  5158,  5225,  5233,  5222,  5275,  5277,
    5282,  5284,  5286,  5301,  5302,  5309,  5310,  5317,  5318,  5322,
    5328,  5337,  5338,  5339,  5340,  5341,  5342,  5343,  5344,  5345,
    5346,  5350,  5351,  5355,  5361,  5370,  5371,  5372,  5373,  5374,
    5375,  5379,  5380,  5384,  5390,  5399,  5403,  5404,  5408,  5414,
    5423,  5424,  5425,  5426,  5427,  5428,  5429,  5433,  5434,  5438,
    5444,  5453,  5454,  5455,  5459,  5463,  5464,  5468,  5472,  5479,
    5486,  5493,  5500,  5507,  5514,  5521,  5528,  5535,  5542,  5546,
    5553,  5560,  5561,  5636,  5642,  5646,  5651,  5656,  5662,  5670,
    5680,  5681,  5695,  5703,  5707,  5711,  5715,  5719,  5723,  5730,
    5731,  5736,  5737,  5755,  5756,  5768,  5769,  5774,  5783,  5784,
    5789,  5795,  5805,  5806,  5818,  5819,  5823,  5829,  5838,  5847,
    5850,  5855,  5863,  5864,  5868,  5872,  5879,  5886,  5896,  5895,
    5913,  5919,  5928,  5929,  5934,  5935,  5939,  5945,  5954,  5961,
    5962,  5966,  5972,  5981,  5983,  5985,  5987,  5989,  5991,  5993,
    5995,  6004,  6005,  6009,  6010,  6014,  6019,  6024,  6039,  6040,
    6044,  6050,  6059,  6065,  6073,  6075,  6079,  6083,  6087,  6091,
    6095,  6099,  6103,  6107,  6111,  6115,  6119,  6123,  6127,  6131,
    6135,  6152,  6156,  6160,  6164,  6168,  6172,  6176,  6180,  6184,
    6188,  6192,  6196,  6200,  6204,  6208,  6212,  6219,  6233,  6237,
    6241,  6245,  6249,  6250,  6251,  6252,  6253,  6254,  6258,  6259,
    6260,  6264,  6265,  6266,  6267,  6271,  6277,  6286,  6287,  6291,
    6298,  6299,  6307,  6313,  6319,  6324,  6334,  6342,  6350,  6354,
    6355,  6359,  6360,  6364,  6365,  6369,  6373,  6377,  6398,  6400,
    6404,  6405,  6406,  6410,  6414,  6418,  6422,  6426,  6430,  6434,
    6438,  6443,  6448,  6457,  6466,  6470,  6474,  6479,  6488,  6492,
    6515,  6519,  6523,  6527,  6531,  6535,  6539,  6540,  6544,  6548,
    6552,  6557,  6562,  6567,  6572,  6577,  6581,  6585,  6590,  6594,
    6601,  6603,  6605,  6607,  6609,  6611,  6613,  6615,  6620,  6621,
    6625,  6626,  6630,  6631,  6632,  6633,  6634,  6638,  6639,  6640,
    6641,  6642,  6646,  6651,  6655,  6657,  6661,  6662,  6663,  6664,
    6669,  6673,  6682,  6686,  6691,  6695,  6704,  6705,  6709,  6710,
    6711,  6719,  6720,  6724,  6728,  6732,  6733,  6734,  6743,  6744,
    6745,  6746,  6749,  6750,  6755,  6759,  6763,  6764,  6768,  6787,
    6806,  6810,  6814,  6818,  6822,  6826,  6830,  6834,  6838,  6842,
    6846,  6850,  6854,  6858,  6862,  6866,  6875,  6880,  6896,  6897,
    6898,  6902,  6903,  6904,  6908,  6914,  6918,  6922,  6923,  6927,
    6936,  6940,  6941,  6945,  6954,  6958,  6959,  6963,  6969,  6973,
    6974,  6978,  6979,  6984,  6985,  6989,  6996,  7004,  7010,  7020,
    7024,  7029,  7034,  7039,  7046,  7052,  7063,  7064,  7072,  7071,
    7083,  7085,  7089,  7104,  7105,  7109,  7116,  7126,  7127,  7128,
    7129,  7134,  7138,  7143,  7148,  7154,  7163,  7164,  7165,  7166,
    7167,  7171,  7172,  7176,  7177,  7181,  7182,  7186,  7187,  7188,
    7192,  7193,  7197,  7198,  7202,  7208,  7217,  7218,  7232,  7233,
    7237,  7243,  7252,  7256,  7257,  7261,  7267,  7276,  7277,  7282,
    7283,  7287,  7311,  7312,  7313,  7317,  7318,  7322,  7323,  7327,
    7328,  7332,  7333,  7334,  7338,  7344,  7354,  7360,  7375,  7381,
    7391,  7392,  7401,  7402,  7406,  7407,  7411,  7417,  7429,  7439,
    7453,  7452,  7473,  7472,  7494,  7493,  7515,  7514,  7533,  7527,
    7550,  7549,  7585,  7607,  7626,  7646,  7654,  7676,  7700,  7711,
    7713,  7728,  7742,  7748,  7760,  7772,  7786,  7787,  7791,  7801,
    7810,  7811,  7815,  7816,  7820,  7826,  7832,  7840,  7855,  7863,
    7871,  7878,  7885,  7892,  7899,  7905,  7911,  7917,  7929,  7941,
    7950,  7951,  7955,  7956,  7960,  7966,  7972,  7978,  7987,  8001,
    8002,  8003,  8004,  8008,  8009,  8021,  8022,  8026,  8027,  8031,
    8032,  8047,  8052,  8060,  8064,  8072,  8076,  8081,  8082,  8091,
    8095,  8106,  8110,  8114,  8118,  8122,  8127,  8132,  8137,  8142,
    8149,  8153,  8157,  8161,  8166,  8171,  8176,  8181,  8185,  8192,
    8193,  8197,  8201,  8208,  8209,  8217,  8224,  8229,  8233,  8238,
    8249,  8250,  8258,  8262,  8266,  8270,  8274,  8278,  8283,  8287,
    8291,  8295,  8299,  8303,  8307,  8311,  8315,  8319,  8323,  8327,
    8331,  8335,  8339,  8343,  8347,  8351,  8357,  8361,  8368,  8373,
    8378,  8386,  8387,  8392,  8397,  8403,  8412,  8416,  8420,  8437,
    8441,  8445,  8461,  8463,  8467,  8468,  8472,  8473,  8474,  8478,
    8479,  8480,  8484,  8485,  8486,  8487,  8491,  8496,  8504,  8505,
    8515,  8531,  8529,  8551,  8568,  8571,  8578,  8582,  8589,  8593,
    8597,  8604,  8609,  8612,  8619,  8622,  8629,  8632,  8639,  8642,
    8650,  8653,  8660,  8664,  8671,  8675,  8683,  8687,  8712,  8713,
    8714,  8719,  8724,  8731,  8745,  8746,  8747,  8751,  8760,  8761,
    8765,  8766,  8774,  8775,  8776,  8780,  8790,  8791,  8810,  8815,
    8822,  8832,  8840,  8848,  8849,  8853,  8854,  8862,  8864,  8866,
    8868,  8870,  8872,  8877,  8884,  8885,  8886,  8891,  8890,  8896,
    8903,  8908,  8916,  8917,  8921,  8934,  8938,  8947,  8953,  8962,
    8969,  8970,  8974,  8979,  8986,  8992,  9001,  9008,  9015,  9016,
    9026,  9027,  9031,  9035,  9040,  9044,  9080,  9084,  9088,  9092,
    9131,  9137,  9144,  9150,  9157,  9162,  9168,  9176,  9180,  9184,
    9188,  9192,  9200,  9201,  9202,  9209,  9214,  9218,  9230,  9252,
    9276,  9277,  9281,  9285,  9286,  9290,  9296,  9305,  9312,  9324,
    9327,  9331,  9336,  9340,  9344,  9353,  9359,  9368,  9372,  9376,
    9383,  9384,  9388,  9392,  9393,  9397,  9398,  9402,  9408,  9414,
    9424,  9425,  9433,  9434,  9435,  9436,  9437,  9441,  9442,  9447,
    9453,  9458,  9464,  9468,  9472,  9476,  9480,  9484,  9488,  9492,
    9496,  9500,  9504,  9508,  9521,  9525,  9529,  9534,  9538,  9545,
    9549,  9556,  9560,  9564,  9568,  9576,  9580,  9584,  9589,  9594,
    9602,  9610,  9614,  9615,  9619,  9623,  9627,  9631,  9635,  9639,
    9643,  9647,  9651,  9655,  9659,  9663,  9667,  9671,  9675,  9679,
    9680,  9684,  9685,  9692,  9693,  9697,  9698,  9702,  9703,  9704,
    9705,  9706,  9707,  9708,  9712,  9713,  9717,  9718,  9719,  9720,
    9721,  9722,  9726,  9727,  9728,  9729,  9730,  9731,  9735,  9739,
    9743,  9747,  9751,  9755,  9756,  9760,  9764,  9768,  9772,  9776,
    9780,  9784,  9788,  9792,  9796,  9800,  9804,  9809,  9816,  9827,
    9828,  9838,  9842,  9846,  9850,  9854,  9858,  9862,  9866,  9870,
    9874,  9878,  9882,  9886,  9890,  9894,  9898,  9902,  9906,  9911,
    9916,  9921,  9925,  9929,  9933,  9937,  9942,  9946,  9965,  9969,
    9973,  9977,  9981,  9986,  9991,  9995,  9999, 10004, 10008, 10012,
   10016, 10020, 10024, 10028, 10032, 10037, 10041, 10045, 10049, 10053,
   10065, 10069, 10073, 10077, 10081, 10085, 10089, 10093, 10097, 10101,
   10105, 10109, 10113, 10117, 10121, 10125, 10129, 10133, 10137, 10141,
   10145, 10149, 10153, 10157, 10163, 10169, 10175, 10181, 10187, 10191,
   10209, 10213, 10220, 10222, 10235, 10236, 10240, 10241, 10245, 10246,
   10250, 10256, 10265, 10272, 10273, 10277, 10281, 10285, 10289, 10293,
   10303, 10313, 10317, 10321, 10325, 10329, 10338, 10342, 10346, 10350,
   10354, 10358, 10362, 10366, 10370, 10374, 10384, 10388, 10392, 10396,
   10400, 10404, 10408, 10419, 10430, 10434, 10438, 10451, 10455, 10460,
   10469, 10472, 10480, 10483, 10487, 10496, 10499, 10503, 10511, 10514,
   10521, 10528, 10532, 10539, 10546, 10553, 10574, 10577, 10585, 10588,
   10596, 10599, 10607, 10610, 10619, 10624, 10631, 10635, 10639, 10643,
   10647, 10654, 10661, 10665, 10669, 10673, 10677, 10685, 10688, 10692,
   10696, 10700, 10706, 10707, 10708, 10712, 10719, 10723, 10730, 10734,
   10741, 10742, 10747, 10752, 10756, 10757, 10761, 10766, 10776, 10783,
   10790, 10809, 10817, 10824, 10831, 10838, 10845, 10852, 10859, 10866,
   10873, 10880, 10888, 10898, 10899, 10903, 10909, 10918, 10919, 10923,
   10929, 10938, 10939, 10943, 10944, 10948, 10956, 10965, 10966, 10967,
   10980, 10981, 11062, 11066, 11071, 11075, 11079, 11089, 11096, 11097,
   11098, 11102, 11103, 11104, 11105, 11108, 11109, 11112, 11114, 11117,
   11119, 11127, 11128, 11132, 11161, 11162, 11163, 11164, 11166, 11168,
   11172, 11173, 11182, 11183, 11187, 11194, 11195, 11199, 11212, 11223,
   11239, 11246, 11252, 11261, 11265, 11275, 11282, 11285, 11293, 11297,
   11302, 11307, 11312, 11323, 11326, 11329, 11333, 11337, 11345, 11348,
   11349, 11350, 11354, 11355, 11359, 11365, 11374, 11375, 11383, 11384,
   11388, 11393, 11399, 11403, 11409, 11418, 11424, 11432, 11436, 11445,
   11457, 11458, 11459, 11460, 11461, 11462, 11463, 11464, 11465, 11466,
   11467, 11468, 11472, 11473, 11474, 11475, 11476, 11477, 11478, 11479,
   11480, 11484, 11485, 11486, 11487, 11490, 11492, 11496, 11497, 11500,
   11502, 11506, 11507, 11511, 11515, 11516, 11523, 11527, 11534, 11539,
   11548, 11565, 11573, 11580, 11586, 11596, 11599, 11606, 11612, 11621,
   11635, 11636, 11643, 11648, 11659, 11660, 11675, 11680, 11690, 11697,
   11698, 11702, 11709, 11714, 11724, 11725, 11729, 11730, 11734, 11735,
   11739, 11746, 11752, 11758, 11767, 11771, 11775, 11779, 11783, 11790,
   11791, 11795, 11796, 11797, 11798, 11799, 11800, 11804, 11805, 11806,
   11807, 11808, 11812, 11813, 11814, 11815, 11816, 11820, 11821, 11822,
   11823, 11824, 11828, 11833, 11834, 11838, 11844, 11853, 11857, 11864,
   11871, 11877, 11881, 11889, 11902, 11918, 11927, 11937, 11960, 11995,
   12002, 12017, 12027, 12042, 12051, 12062, 12082, 12104, 12127, 12135,
   12142, 12149, 12155, 12164, 12170, 12179, 12180, 12184, 12185, 12189,
   12190, 12194, 12200, 12209, 12210, 12217, 12237, 12257, 12275, 12288,
   12305, 12321, 12322, 12323, 12332, 12336, 12337, 12348, 12350, 12354,
   12359, 12364, 12372, 12377, 12382, 12390, 12396, 12405, 12412, 12413,
   12417, 12421, 12422, 12426, 12431, 12441, 12446, 12455, 12456, 12459,
   12461, 12465, 12469, 12474, 12479, 12483, 12489, 12498, 12499, 12507,
   12511, 12525, 12529, 12538, 12555, 12556, 12560, 12567, 12579, 12587,
   12588, 12594, 12607, 12617, 12630, 12632, 12636, 12637, 12641, 12642,
   12643, 12647, 12653, 12655, 12658, 12660, 12663, 12664, 12667, 12671,
   12675, 12679, 12683, 12687, 12691, 12695, 12699, 12707, 12710, 12724,
   12723, 12734, 12743, 12749, 12761, 12772, 12783, 12798, 12805, 12813,
   12815, 12838, 12842, 12847, 12846, 12857, 12856, 12866, 12884, 12891,
   12899, 12907, 12915, 12923, 12931, 12941, 12963, 12968, 12990, 12999,
   13008, 13014, 13019, 13024, 13029, 13035, 13044, 13052, 13056, 13060,
   13067, 13074, 13080, 13090, 13100, 13105, 13110, 13115, 13124, 13126,
   13128, 13133, 13134, 13137, 13139, 13143, 13144, 13148, 13149, 13153,
   13154, 13158, 13159, 13160, 13161, 13165, 13166, 13170, 13171, 13175,
   13176, 13180, 13181, 13182, 13187, 13194, 13201, 13202, 13203, 13204,
   13205, 13206, 13213, 13214, 13219, 13222, 13236, 13243, 13244, 13249,
   13257, 13256, 13269, 13268, 13282, 13286, 13287, 13300, 13299, 13322,
   13323, 13328, 13330, 13332, 13334, 13336, 13338, 13340, 13342, 13344,
   13346, 13348, 13350, 13355, 13356, 13361, 13360, 13367, 13377, 13378,
   13383, 13388, 13397, 13397, 13400, 13399, 13419, 13420, 13424, 13425,
   13440, 13439, 13450, 13454, 13458, 13472, 13484, 13485, 13486, 13492,
   13503, 13542, 13543, 13547, 13548, 13552, 13553, 13554, 13558, 13559,
   13563, 13564, 13568, 13569, 13573, 13578, 13582, 13587, 13593, 13598,
   13606, 13607, 13611, 13616, 13620, 13625, 13633, 13634, 13638, 13639,
   13643, 13644, 13648, 13649, 13650, 13654, 13660, 13669, 13670, 13677,
   13678, 13682, 13690, 13710, 13731, 13736, 13742, 13747, 13755, 13762,
   13769, 13779, 13798, 13799, 13800, 13811, 13812, 13813, 13814, 13826,
   13830, 13834, 13838, 13842, 13846, 13853, 13857, 13861, 13865, 13869,
   13877, 13881, 13885, 13899, 13900, 13904, 13908, 13917, 13924, 13931,
   13935, 13939, 13943, 13947, 13951, 13960, 13966, 13979, 13985, 13996,
   13997, 14027, 14040, 14053, 14069, 14085, 14102, 14106, 14107, 14114,
   14130, 14131, 14142, 14143, 14153, 14154, 14165, 14166, 14176, 14177,
   14178, 14182, 14183, 14184, 14188, 14193, 14201, 14205, 14219, 14224,
   14232, 14256, 14257, 14258, 14259, 14260, 14267, 14268, 14269, 14276,
   14277, 14278, 14279, 14280, 14281, 14282, 14283, 14284, 14285, 14286,
   14287, 14288, 14289, 14290, 14291, 14292, 14293, 14294, 14295, 14296,
   14297, 14298, 14299, 14300, 14301, 14302, 14303, 14304, 14305, 14306,
   14307, 14308, 14309, 14310, 14325, 14326, 14327, 14334, 14335, 14336,
   14337, 14338, 14339, 14340, 14341, 14342, 14350, 14351, 14352, 14353,
   14354, 14355, 14356, 14357, 14358, 14359, 14360, 14361, 14362, 14363,
   14364, 14365, 14366, 14367, 14368, 14369, 14370, 14371, 14372, 14373,
   14374, 14375, 14376, 14377, 14378, 14379, 14380, 14381, 14382, 14383,
   14384, 14385, 14386, 14387, 14388, 14389, 14390, 14391, 14392, 14393,
   14394, 14395, 14396, 14397, 14398, 14399, 14400, 14401, 14402, 14403,
   14404, 14405, 14406, 14407, 14408, 14409, 14410, 14411, 14412, 14413,
   14414, 14415, 14416, 14417, 14418, 14419, 14420, 14421, 14422, 14423,
   14424, 14425, 14426, 14427, 14428, 14429, 14430, 14431, 14432, 14433,
   14434, 14435, 14436, 14437, 14438, 14439, 14440, 14441, 14442, 14443,
   14444, 14445, 14446, 14447, 14448, 14449, 14450, 14451, 14452, 14453,
   14454, 14455, 14456, 14457, 14458, 14459, 14460, 14461, 14462, 14463,
   14464, 14465, 14466, 14467, 14468, 14469, 14470, 14471, 14472, 14473,
   14474, 14475, 14476, 14477, 14478, 14479, 14480, 14481, 14482, 14483,
   14484, 14485, 14486, 14487, 14488, 14489, 14490, 14491, 14492, 14493,
   14494, 14495, 14496, 14497, 14498, 14499, 14500, 14501, 14502, 14503,
   14504, 14505, 14506, 14507, 14508, 14509, 14510, 14511, 14512, 14513,
   14514, 14515, 14516, 14517, 14518, 14519, 14520, 14521, 14522, 14523,
   14524, 14525, 14526, 14527, 14528, 14529, 14530, 14531, 14532, 14533,
   14534, 14535, 14536, 14537, 14538, 14539, 14540, 14541, 14542, 14543,
   14544, 14545, 14546, 14547, 14548, 14549, 14550, 14551, 14552, 14553,
   14554, 14555, 14556, 14557, 14558, 14559, 14560, 14561, 14562, 14563,
   14564, 14565, 14566, 14567, 14568, 14569, 14570, 14571, 14572, 14573,
   14574, 14575, 14576, 14577, 14578, 14579, 14580, 14581, 14582, 14583,
   14584, 14585, 14586, 14587, 14588, 14589, 14590, 14591, 14592, 14593,
   14594, 14595, 14596, 14597, 14598, 14599, 14600, 14601, 14602, 14603,
   14604, 14605, 14606, 14607, 14608, 14609, 14610, 14611, 14612, 14613,
   14614, 14615, 14616, 14617, 14618, 14619, 14620, 14621, 14622, 14623,
   14624, 14625, 14626, 14627, 14628, 14629, 14630, 14631, 14632, 14633,
   14634, 14635, 14636, 14637, 14638, 14639, 14640, 14641, 14642, 14643,
   14644, 14645, 14646, 14647, 14648, 14649, 14650, 14651, 14652, 14653,
   14654, 14655, 14656, 14657, 14658, 14659, 14660, 14661, 14662, 14663,
   14664, 14665, 14666, 14667, 14668, 14669, 14670, 14671, 14672, 14673,
   14674, 14675, 14676, 14677, 14678, 14679, 14680, 14681, 14682, 14683,
   14684, 14685, 14686, 14687, 14688, 14689, 14690, 14691, 14692, 14693,
   14694, 14695, 14696, 14697, 14698, 14699, 14700, 14701, 14702, 14703,
   14704, 14705, 14706, 14707, 14708, 14709, 14710, 14711, 14712, 14713,
   14714, 14715, 14716, 14717, 14718, 14719, 14720, 14721, 14722, 14723,
   14724, 14725, 14737, 14738, 14739, 14751, 14752, 14753, 14754, 14763,
   14764, 14765, 14766, 14767, 14778, 14787, 14791, 14795, 14799, 14806,
   14814, 14822, 14834, 14838, 14843, 14848, 14853, 14858, 14863, 14871,
   14872, 14876, 14880, 14887, 14893, 14902, 14907, 14914, 14924, 14925,
   14930, 14934, 14942, 14946, 14950, 14951, 14952, 14953, 14954, 14958,
   14959, 14960, 14961, 14965, 14966, 14967, 14968, 14972, 14973, 14974,
   14975, 14976, 14977, 14982, 14990, 14996, 15000, 15005, 15009, 15016,
   15020, 15027, 15031, 15035, 15042, 15046, 15053, 15060, 15061, 15065,
   15072, 15073, 15077, 15078, 15082, 15083, 15084, 15085, 15089, 15090,
   15091, 15095, 15099, 15103, 15107, 15117, 15116, 15129, 15139, 15140,
   15144, 15145, 15149, 15177, 15178, 15179, 15184, 15189, 15188, 15201,
   15212, 15220, 15227, 15234, 15250, 15262, 15281, 15285, 15289, 15298,
   15309, 15325, 15326, 15330, 15331, 15332, 15333, 15337, 15338, 15339,
   15340, 15341, 15347, 15352, 15368, 15367, 15386, 15391, 15402, 15407,
   15424, 15423, 15440, 15453, 15454, 15455, 15456, 15459, 15461, 15465,
   15471, 15480, 15487, 15489, 15491, 15493, 15495, 15497, 15499, 15501,
   15503, 15505, 15507, 15509, 15511, 15513, 15515, 15517, 15519, 15524,
   15526, 15540, 15542, 15544, 15546, 15548, 15550, 15552, 15554, 15556,
   15558, 15560, 15562, 15564, 15566, 15571, 15572, 15575, 15577, 15581,
   15582, 15586, 15596, 15606, 15619, 15633, 15645, 15657, 15669, 15689,
   15695, 15704, 15710, 15719, 15720, 15724, 15725, 15728, 15739, 15750,
   15761, 15774, 15788, 15800, 15811, 15825, 15843, 15854, 15865, 15879,
   15890, 15904, 15919, 15932, 15943, 15948, 15956, 15961, 15969, 15970,
   15974, 15980, 15988, 15990, 15994, 15998, 16002, 16009, 16010, 16015,
   16016, 16020, 16021, 16025, 16030, 16032, 16037, 16038, 16046, 16045,
   16055, 16056, 16061, 16062, 16063, 16068, 16069, 16070, 16074, 16075,
   16079, 16091, 16100, 16110, 16119, 16133, 16134, 16135, 16139, 16143,
   16147, 16154, 16155, 16156, 16157, 16158, 16159, 16160, 16166, 16177,
   16186, 16188, 16190, 16195, 16196, 16197, 16198, 16199, 16203, 16204,
   16205, 16206, 16207, 16208, 16218, 16219, 16224, 16237, 16250, 16252,
   16254, 16259, 16264, 16266, 16268, 16274, 16275, 16277, 16283, 16282,
   16322, 16373, 16374, 16375, 16376, 16386, 16388, 16394, 16399, 16417,
   16407, 16484, 16502, 16526, 16550, 16556, 16597, 16523, 16664, 16684,
   16689, 16697, 16662, 16718, 16723, 16728, 16733, 16738, 16743, 16751,
   16752, 16755, 16764, 16774, 16792, 16793, 16797, 16798, 16799, 16803,
   16804, 16809, 16810, 16812, 16817, 16823, 16832, 16838, 16847, 16853,
   16862, 16879, 16888, 16911, 16915, 16923, 16926, 16930, 16937, 16938,
   16943, 16949, 16953, 16960, 16970, 16977, 16990, 16991, 16995, 16996,
   17004, 17005, 17010, 17018, 17019
};
#endif

#if YYDEBUG || YYERROR_VERBOSE || 0
/* YYTNAME[SYMBOL-NUM] -- String name of the symbol SYMBOL-NUM.
   First, the terminals, then, starting at YYNTOKENS, nonterminals.  */
static const char *const yytname[] =
{
  "$end", "error", "$undefined", "ABORT_SYM", "ACCESSIBLE_SYM",
  "ACCOUNT_SYM", "ACTION", "ADD", "ADDDATE_SYM", "AFTER_SYM", "AGAINST",
  "AGGREGATE_SYM", "ALGORITHM_SYM", "ALL", "ALTER", "ALWAYS_SYM",
  "OBSOLETE_TOKEN_271", "ANALYZE_SYM", "AND_AND_SYM", "AND_SYM", "ANY_SYM",
  "AS", "ASC", "ASCII_SYM", "ASENSITIVE_SYM", "AT_SYM",
  "AUTOEXTEND_SIZE_SYM", "AUTO_INC", "AVG_ROW_LENGTH", "AVG_SYM",
  "BACKUP_SYM", "BEFORE_SYM", "BEGIN_SYM", "BETWEEN_SYM", "BIGINT_SYM",
  "BINARY_SYM", "BINLOG_SYM", "BIN_NUM", "BIT_AND_SYM", "BIT_OR_SYM",
  "BIT_SYM", "BIT_XOR_SYM", "BLOB_SYM", "BLOCK_SYM", "BOOLEAN_SYM",
  "BOOL_SYM", "BOTH", "BTREE_SYM", "BY", "BYTE_SYM", "CACHE_SYM",
  "CALL_SYM", "CASCADE", "CASCADED", "CASE_SYM", "CAST_SYM",
  "CATALOG_NAME_SYM", "CHAIN_SYM", "CHANGE", "CHANGED", "CHANNEL_SYM",
  "CHARSET", "CHAR_SYM", "CHECKSUM_SYM", "CHECK_SYM", "CIPHER_SYM",
  "CLASS_ORIGIN_SYM", "CLIENT_SYM", "CLOSE_SYM", "COALESCE", "CODE_SYM",
  "COLLATE_SYM", "COLLATION_SYM", "COLUMNS", "COLUMN_SYM",
  "COLUMN_FORMAT_SYM", "COLUMN_NAME_SYM", "COMMENT_SYM", "COMMITTED_SYM",
  "COMMIT_SYM", "COMPACT_SYM", "COMPLETION_SYM", "COMPRESSED_SYM",
  "COMPRESSION_SYM", "ENCRYPTION_SYM", "CONCURRENT", "CONDITION_SYM",
  "CONNECTION_SYM", "CONSISTENT_SYM", "CONSTRAINT",
  "CONSTRAINT_CATALOG_SYM", "CONSTRAINT_NAME_SYM", "CONSTRAINT_SCHEMA_SYM",
  "CONTAINS_SYM", "CONTEXT_SYM", "CONTINUE_SYM", "CONVERT_SYM",
  "COUNT_SYM", "CPU_SYM", "CREATE", "CROSS", "CUBE_SYM", "CURDATE",
  "CURRENT_SYM", "CURRENT_USER", "CURSOR_SYM", "CURSOR_NAME_SYM",
  "CURTIME", "DATABASE", "DATABASES", "DATAFILE_SYM", "DATA_SYM",
  "DATETIME_SYM", "DATE_ADD_INTERVAL", "DATE_SUB_INTERVAL", "DATE_SYM",
  "DAY_HOUR_SYM", "DAY_MICROSECOND_SYM", "DAY_MINUTE_SYM",
  "DAY_SECOND_SYM", "DAY_SYM", "DEALLOCATE_SYM", "DECIMAL_NUM",
  "DECIMAL_SYM", "DECLARE_SYM", "DEFAULT_SYM", "DEFAULT_AUTH_SYM",
  "DEFINER_SYM", "DELAYED_SYM", "DELAY_KEY_WRITE_SYM", "DELETE_SYM",
  "DESC", "DESCRIBE", "OBSOLETE_TOKEN_388", "DETERMINISTIC_SYM",
  "DIAGNOSTICS_SYM", "DIRECTORY_SYM", "DISABLE_SYM", "DISCARD_SYM",
  "DISK_SYM", "DISTINCT", "DIV_SYM", "DOUBLE_SYM", "DO_SYM", "DROP",
  "DUAL_SYM", "DUMPFILE", "DUPLICATE_SYM", "DYNAMIC_SYM", "EACH_SYM",
  "ELSE", "ELSEIF_SYM", "ENABLE_SYM", "ENCLOSED", "END", "ENDS_SYM",
  "END_OF_INPUT", "ENGINES_SYM", "ENGINE_SYM", "ENUM_SYM", "EQ",
  "EQUAL_SYM", "ERROR_SYM", "ERRORS", "ESCAPED", "ESCAPE_SYM",
  "EVENTS_SYM", "EVENT_SYM", "EVERY_SYM", "EXCHANGE_SYM", "EXECUTE_SYM",
  "EXISTS", "EXIT_SYM", "EXPANSION_SYM", "EXPIRE_SYM", "EXPORT_SYM",
  "EXTENDED_SYM", "EXTENT_SIZE_SYM", "EXTRACT_SYM", "FALSE_SYM",
  "FAST_SYM", "FAULTS_SYM", "FETCH_SYM", "FILE_SYM", "FILE_BLOCK_SIZE_SYM",
  "FILTER_SYM", "FIRST_SYM", "FIXED_SYM", "FLOAT_NUM", "FLOAT_SYM",
  "FLUSH_SYM", "FOLLOWS_SYM", "FORCE_SYM", "FOREIGN", "FOR_SYM",
  "FORMAT_SYM", "FOUND_SYM", "FROM", "FULL", "FULLTEXT_SYM",
  "FUNCTION_SYM", "GE", "GENERAL", "GENERATED", "GROUP_REPLICATION",
  "GEOMETRYCOLLECTION_SYM", "GEOMETRY_SYM", "GET_FORMAT", "GET_SYM",
  "GLOBAL_SYM", "GRANT", "GRANTS", "GROUP_SYM", "GROUP_CONCAT_SYM",
  "GT_SYM", "HANDLER_SYM", "HASH_SYM", "HAVING", "HELP_SYM", "HEX_NUM",
  "HIGH_PRIORITY", "HOST_SYM", "HOSTS_SYM", "HOUR_MICROSECOND_SYM",
  "HOUR_MINUTE_SYM", "HOUR_SECOND_SYM", "HOUR_SYM", "IDENT",
  "IDENTIFIED_SYM", "IDENT_QUOTED", "IF", "IGNORE_SYM",
  "IGNORE_SERVER_IDS_SYM", "IMPORT", "INDEXES", "INDEX_SYM", "INFILE",
  "INITIAL_SIZE_SYM", "INNER_SYM", "INOUT_SYM", "INSENSITIVE_SYM",
  "INSERT_SYM", "INSERT_METHOD", "INSTANCE_SYM", "INSTALL_SYM",
  "INTERVAL_SYM", "INTO", "INT_SYM", "INVOKER_SYM", "IN_SYM",
  "IO_AFTER_GTIDS", "IO_BEFORE_GTIDS", "IO_SYM", "IPC_SYM", "IS",
  "ISOLATION", "ISSUER_SYM", "ITERATE_SYM", "JOIN_SYM",
  "JSON_SEPARATOR_SYM", "JSON_SYM", "KEYS", "KEY_BLOCK_SIZE", "KEY_SYM",
  "KILL_SYM", "LANGUAGE_SYM", "LAST_SYM", "LE", "LEADING", "LEAVES",
  "LEAVE_SYM", "LEFT", "LESS_SYM", "LEVEL_SYM", "LEX_HOSTNAME", "LIKE",
  "LIMIT", "LINEAR_SYM", "LINES", "LINESTRING_SYM", "LIST_SYM", "LOAD",
  "LOCAL_SYM", "OBSOLETE_TOKEN_538", "LOCKS_SYM", "LOCK_SYM",
  "LOGFILE_SYM", "LOGS_SYM", "LONGBLOB_SYM", "LONGTEXT_SYM", "LONG_NUM",
  "LONG_SYM", "LOOP_SYM", "LOW_PRIORITY", "LT", "MASTER_AUTO_POSITION_SYM",
  "MASTER_BIND_SYM", "MASTER_CONNECT_RETRY_SYM", "MASTER_DELAY_SYM",
  "MASTER_HOST_SYM", "MASTER_LOG_FILE_SYM", "MASTER_LOG_POS_SYM",
  "MASTER_PASSWORD_SYM", "MASTER_PORT_SYM", "MASTER_RETRY_COUNT_SYM",
  "MASTER_SERVER_ID_SYM", "MASTER_SSL_CAPATH_SYM",
  "MASTER_TLS_VERSION_SYM", "MASTER_SSL_CA_SYM", "MASTER_SSL_CERT_SYM",
  "MASTER_SSL_CIPHER_SYM", "MASTER_SSL_CRL_SYM", "MASTER_SSL_CRLPATH_SYM",
  "MASTER_SSL_KEY_SYM", "MASTER_SSL_SYM",
  "MASTER_SSL_VERIFY_SERVER_CERT_SYM", "MASTER_SYM", "MASTER_USER_SYM",
  "MASTER_HEARTBEAT_PERIOD_SYM", "MATCH", "MAX_CONNECTIONS_PER_HOUR",
  "MAX_QUERIES_PER_HOUR", "MAX_ROWS", "MAX_SIZE_SYM", "MAX_SYM",
  "MAX_UPDATES_PER_HOUR", "MAX_USER_CONNECTIONS_SYM", "MAX_VALUE_SYM",
  "MEDIUMBLOB_SYM", "MEDIUMINT_SYM", "MEDIUMTEXT_SYM", "MEDIUM_SYM",
  "MEMORY_SYM", "MERGE_SYM", "MESSAGE_TEXT_SYM", "MICROSECOND_SYM",
  "MIGRATE_SYM", "MINUTE_MICROSECOND_SYM", "MINUTE_SECOND_SYM",
  "MINUTE_SYM", "MIN_ROWS", "MIN_SYM", "MODE_SYM", "MODIFIES_SYM",
  "MODIFY_SYM", "MOD_SYM", "MONTH_SYM", "MULTILINESTRING_SYM",
  "MULTIPOINT_SYM", "MULTIPOLYGON_SYM", "MUTEX_SYM", "MYSQL_ERRNO_SYM",
  "NAMES_SYM", "NAME_SYM", "NATIONAL_SYM", "NATURAL", "NCHAR_STRING",
  "NCHAR_SYM", "NDBCLUSTER_SYM", "NE", "NEG", "NEVER_SYM", "NEW_SYM",
  "NEXT_SYM", "NODEGROUP_SYM", "NONE_SYM", "NOT2_SYM", "NOT_SYM",
  "NOW_SYM", "NO_SYM", "NO_WAIT_SYM", "NO_WRITE_TO_BINLOG", "NULL_SYM",
  "NUM", "NUMBER_SYM", "NUMERIC_SYM", "NVARCHAR_SYM", "OFFSET_SYM",
  "ON_SYM", "ONE_SYM", "ONLY_SYM", "OPEN_SYM", "OPTIMIZE",
  "OPTIMIZER_COSTS_SYM", "OPTIONS_SYM", "OPTION", "OPTIONALLY", "OR2_SYM",
  "ORDER_SYM", "OR_OR_SYM", "OR_SYM", "OUTER_SYM", "OUTFILE", "OUT_SYM",
  "OWNER_SYM", "PACK_KEYS_SYM", "PAGE_SYM", "PARAM_MARKER", "PARSER_SYM",
  "OBSOLETE_TOKEN_654", "PARTIAL", "PARTITION_SYM", "PARTITIONS_SYM",
  "PARTITIONING_SYM", "PASSWORD", "PHASE_SYM", "PLUGIN_DIR_SYM",
  "PLUGIN_SYM", "PLUGINS_SYM", "POINT_SYM", "POLYGON_SYM", "PORT_SYM",
  "POSITION_SYM", "PRECEDES_SYM", "PRECISION", "PREPARE_SYM",
  "PRESERVE_SYM", "PREV_SYM", "PRIMARY_SYM", "PRIVILEGES", "PROCEDURE_SYM",
  "PROCESS", "PROCESSLIST_SYM", "PROFILE_SYM", "PROFILES_SYM", "PROXY_SYM",
  "PURGE", "QUARTER_SYM", "QUERY_SYM", "QUICK", "RANGE_SYM", "READS_SYM",
  "READ_ONLY_SYM", "READ_SYM", "READ_WRITE_SYM", "REAL_SYM", "REBUILD_SYM",
  "RECOVER_SYM", "OBSOLETE_TOKEN_693", "REDO_BUFFER_SIZE_SYM",
  "REDUNDANT_SYM", "REFERENCES", "REGEXP", "RELAY", "RELAYLOG_SYM",
  "RELAY_LOG_FILE_SYM", "RELAY_LOG_POS_SYM", "RELAY_THREAD", "RELEASE_SYM",
  "RELOAD", "REMOVE_SYM", "RENAME", "REORGANIZE_SYM", "REPAIR",
  "REPEATABLE_SYM", "REPEAT_SYM", "REPLACE_SYM", "REPLICATION",
  "REPLICATE_DO_DB", "REPLICATE_IGNORE_DB", "REPLICATE_DO_TABLE",
  "REPLICATE_IGNORE_TABLE", "REPLICATE_WILD_DO_TABLE",
  "REPLICATE_WILD_IGNORE_TABLE", "REPLICATE_REWRITE_DB", "REQUIRE_SYM",
  "RESET_SYM", "RESIGNAL_SYM", "RESOURCES", "RESTORE_SYM", "RESTRICT",
  "RESUME_SYM", "RETURNED_SQLSTATE_SYM", "RETURNS_SYM", "RETURN_SYM",
  "REVERSE_SYM", "REVOKE", "RIGHT", "ROLLBACK_SYM", "ROLLUP_SYM",
  "ROTATE_SYM", "ROUTINE_SYM", "ROWS_SYM", "ROW_FORMAT_SYM", "ROW_SYM",
  "ROW_COUNT_SYM", "RTREE_SYM", "SAVEPOINT_SYM", "SCHEDULE_SYM",
  "SCHEMA_NAME_SYM", "SECOND_MICROSECOND_SYM", "SECOND_SYM",
  "SECURITY_SYM", "SELECT_SYM", "SENSITIVE_SYM", "SEPARATOR_SYM",
  "SERIALIZABLE_SYM", "SERIAL_SYM", "SESSION_SYM", "SERVER_SYM",
  "OBSOLETE_TOKEN_755", "SET_SYM", "SET_VAR", "SHARE_SYM", "SHIFT_LEFT",
  "SHIFT_RIGHT", "SHOW", "SHUTDOWN", "SIGNAL_SYM", "SIGNED_SYM",
  "SIMPLE_SYM", "SLAVE", "SLOW", "SMALLINT_SYM", "SNAPSHOT_SYM",
  "SOCKET_SYM", "SONAME_SYM", "SOUNDS_SYM", "SOURCE_SYM", "SPATIAL_SYM",
  "SPECIFIC_SYM", "SQLEXCEPTION_SYM", "SQLSTATE_SYM", "SQLWARNING_SYM",
  "SQL_AFTER_GTIDS", "SQL_AFTER_MTS_GAPS", "SQL_BEFORE_GTIDS",
  "SQL_BIG_RESULT", "SQL_BUFFER_RESULT", "OBSOLETE_TOKEN_784",
  "SQL_CALC_FOUND_ROWS", "SQL_NO_CACHE_SYM", "SQL_SMALL_RESULT", "SQL_SYM",
  "SQL_THREAD", "SSL_SYM", "STACKED_SYM", "STARTING", "STARTS_SYM",
  "START_SYM", "STATS_AUTO_RECALC_SYM", "STATS_PERSISTENT_SYM",
  "STATS_SAMPLE_PAGES_SYM", "STATUS_SYM", "STDDEV_SAMP_SYM", "STD_SYM",
  "STOP_SYM", "STORAGE_SYM", "STORED_SYM", "STRAIGHT_JOIN", "STRING_SYM",
  "SUBCLASS_ORIGIN_SYM", "SUBDATE_SYM", "SUBJECT_SYM", "SUBPARTITIONS_SYM",
  "SUBPARTITION_SYM", "SUBSTRING", "SUM_SYM", "SUPER_SYM", "SUSPEND_SYM",
  "SWAPS_SYM", "SWITCHES_SYM", "SYSDATE", "TABLES", "TABLESPACE_SYM",
  "OBSOLETE_TOKEN_820", "TABLE_SYM", "TABLE_CHECKSUM_SYM",
  "TABLE_NAME_SYM", "TEMPORARY", "TEMPTABLE_SYM", "TERMINATED",
  "TEXT_STRING", "TEXT_SYM", "THAN_SYM", "THEN_SYM", "TIMESTAMP_SYM",
  "TIMESTAMP_ADD", "TIMESTAMP_DIFF", "TIME_SYM", "TINYBLOB_SYM",
  "TINYINT_SYM", "TINYTEXT_SYN", "TO_SYM", "TRAILING", "TRANSACTION_SYM",
  "TRIGGERS_SYM", "TRIGGER_SYM", "TRIM", "TRUE_SYM", "TRUNCATE_SYM",
  "TYPES_SYM", "TYPE_SYM", "OBSOLETE_TOKEN_848", "ULONGLONG_NUM",
  "UNCOMMITTED_SYM", "UNDEFINED_SYM", "UNDERSCORE_CHARSET", "UNDOFILE_SYM",
  "UNDO_BUFFER_SIZE_SYM", "UNDO_SYM", "UNICODE_SYM", "UNINSTALL_SYM",
  "UNION_SYM", "UNIQUE_SYM", "UNKNOWN_SYM", "UNLOCK_SYM", "UNSIGNED_SYM",
  "UNTIL_SYM", "UPDATE_SYM", "UPGRADE_SYM", "USAGE", "USER", "USE_FRM",
  "USE_SYM", "USING", "UTC_DATE_SYM", "UTC_TIMESTAMP_SYM", "UTC_TIME_SYM",
  "VALIDATION_SYM", "VALUES", "VALUE_SYM", "VARBINARY_SYM", "VARCHAR_SYM",
  "VARIABLES", "VARIANCE_SYM", "VARYING", "VAR_SAMP_SYM", "VIEW_SYM",
  "VIRTUAL_SYM", "WAIT_SYM", "WARNINGS", "WEEK_SYM", "WEIGHT_STRING_SYM",
  "WHEN_SYM", "WHERE", "WHILE_SYM", "WITH", "OBSOLETE_TOKEN_893",
  "WITH_ROLLUP_SYM", "WITHOUT_SYM", "WORK_SYM", "WRAPPER_SYM", "WRITE_SYM",
  "X509_SYM", "XA_SYM", "XID_SYM", "XML_SYM", "XOR", "YEAR_MONTH_SYM",
  "YEAR_SYM", "ZEROFILL_SYM", "JSON_UNQUOTED_SEPARATOR_SYM", "PERSIST_SYM",
  "ROLE_SYM", "ADMIN_SYM", "INVISIBLE_SYM", "VISIBLE_SYM", "EXCEPT_SYM",
  "COMPONENT_SYM", "RECURSIVE_SYM", "GRAMMAR_SELECTOR_EXPR",
  "GRAMMAR_SELECTOR_GCOL", "GRAMMAR_SELECTOR_PART", "GRAMMAR_SELECTOR_CTE",
  "JSON_OBJECTAGG", "JSON_ARRAYAGG", "OF_SYM", "SKIP_SYM", "LOCKED_SYM",
  "NOWAIT_SYM", "GROUPING_SYM", "PERSIST_ONLY_SYM", "HISTOGRAM_SYM",
  "BUCKETS_SYM", "OBSOLETE_TOKEN_930", "CLONE_SYM", "CUME_DIST_SYM",
  "DENSE_RANK_SYM", "EXCLUDE_SYM", "FIRST_VALUE_SYM", "FOLLOWING_SYM",
  "GROUPS_SYM", "LAG_SYM", "LAST_VALUE_SYM", "LEAD_SYM", "NTH_VALUE_SYM",
  "NTILE_SYM", "NULLS_SYM", "OTHERS_SYM", "OVER_SYM", "PERCENT_RANK_SYM",
  "PRECEDING_SYM", "RANK_SYM", "RESPECT_SYM", "ROW_NUMBER_SYM", "TIES_SYM",
  "UNBOUNDED_SYM", "WINDOW_SYM", "EMPTY_SYM", "JSON_TABLE_SYM",
  "NESTED_SYM", "ORDINALITY_SYM", "PATH_SYM", "HISTORY_SYM", "REUSE_SYM",
  "SRID_SYM", "THREAD_PRIORITY_SYM", "RESOURCE_SYM", "SYSTEM_SYM",
  "VCPU_SYM", "MASTER_PUBLIC_KEY_PATH_SYM", "GET_MASTER_PUBLIC_KEY_SYM",
  "RESTART_SYM", "DEFINITION_SYM", "DESCRIPTION_SYM", "ORGANIZATION_SYM",
  "REFERENCE_SYM", "ACTIVE_SYM", "INACTIVE_SYM", "LATERAL_SYM",
  "ARRAY_SYM", "MEMBER_SYM", "OPTIONAL_SYM", "SECONDARY_SYM",
  "SECONDARY_ENGINE_SYM", "SECONDARY_LOAD_SYM", "SECONDARY_UNLOAD_SYM",
  "RETAIN_SYM", "OLD_SYM", "ENFORCED_SYM", "OJ_SYM",
  "NETWORK_NAMESPACE_SYM", "RANDOM_SYM",
  "MASTER_COMPRESSION_ALGORITHM_SYM", "MASTER_ZSTD_COMPRESSION_LEVEL_SYM",
  "PRIVILEGE_CHECKS_USER_SYM", "MASTER_TLS_CIPHERSUITES_SYM",
  "REQUIRE_ROW_FORMAT_SYM", "PASSWORD_LOCK_TIME_SYM",
  "FAILED_LOGIN_ATTEMPTS_SYM", "REQUIRE_TABLE_PRIMARY_KEY_CHECK_SYM",
  "STREAM_SYM", "OFF_SYM", "NOT_A_TOKEN_SYM", "KEYWORD_USED_AS_IDENT",
  "KEYWORD_USED_AS_KEYWORD", "CONDITIONLESS_JOIN", "'|'", "'&'", "'-'",
  "'+'", "'*'", "'/'", "'%'", "'^'", "'~'", "SUBQUERY_AS_EXPR", "'('",
  "')'", "EMPTY_FROM_CLAUSE", "';'", "'@'", "','", "'.'", "':'", "'!'",
  "'{'", "'}'", "$accept", "start_entry", "sql_statement", "$@1",
  "opt_end_of_input", "simple_statement_or_begin", "simple_statement",
  "deallocate", "deallocate_or_drop", "prepare", "prepare_src", "execute",
  "$@2", "execute_using", "execute_var_list", "execute_var_ident", "help",
  "$@3", "change", "$@4", "$@5", "filter_defs", "filter_def",
  "opt_filter_db_list", "filter_db_list", "filter_db_ident",
  "opt_filter_db_pair_list", "filter_db_pair_list",
  "opt_filter_table_list", "filter_table_list", "filter_table_ident",
  "opt_filter_string_list", "filter_string_list", "filter_string",
  "master_defs", "master_def", "ignore_server_id_list", "ignore_server_id",
  "privilege_check_def", "table_primary_key_check_def",
  "master_tls_ciphersuites_def", "master_file_def", "opt_channel",
  "create_table_stmt", "create_role_stmt", "create_resource_group_stmt",
  "create", "$@6", "create_srs_stmt", "srs_attributes",
  "default_role_clause", "create_index_stmt", "server_options_list",
  "server_option", "event_tail", "$@7", "ev_schedule_time", "$@8",
  "opt_ev_status", "ev_starts", "ev_ends", "opt_ev_on_completion",
  "ev_on_completion", "opt_ev_comment", "ev_sql_stmt", "$@9",
  "ev_sql_stmt_inner", "sp_name", "sp_a_chistics", "sp_c_chistics",
  "sp_chistic", "sp_c_chistic", "sp_suid", "call_stmt",
  "opt_paren_expr_list", "sp_fdparam_list", "sp_fdparams", "sp_fdparam",
  "sp_pdparam_list", "sp_pdparams", "sp_pdparam", "sp_opt_inout",
  "sp_proc_stmts", "sp_proc_stmts1", "sp_decls", "sp_decl", "$@10", "$@11",
  "sp_handler_type", "sp_hcond_list", "sp_hcond_element", "sp_cond",
  "sqlstate", "opt_value", "sp_hcond", "signal_stmt", "signal_value",
  "opt_signal_value", "opt_set_signal_information",
  "signal_information_item_list", "signal_allowed_expr",
  "signal_condition_information_item_name", "resignal_stmt",
  "get_diagnostics", "which_area", "diagnostics_information",
  "statement_information", "statement_information_item",
  "simple_target_specification", "statement_information_item_name",
  "condition_number", "condition_information",
  "condition_information_item", "condition_information_item_name",
  "sp_decl_idents", "sp_opt_default", "sp_proc_stmt", "sp_proc_stmt_if",
  "$@12", "sp_proc_stmt_statement", "$@13", "sp_proc_stmt_return", "$@14",
  "sp_proc_stmt_unlabeled", "$@15", "sp_proc_stmt_leave",
  "sp_proc_stmt_iterate", "sp_proc_stmt_open", "sp_proc_stmt_fetch",
  "$@16", "sp_proc_stmt_close", "sp_opt_fetch_noise", "sp_fetch_list",
  "sp_if", "$@17", "$@18", "$@19", "sp_elseifs", "case_stmt_specification",
  "simple_case_stmt", "$@20", "$@21", "searched_case_stmt", "$@22",
  "simple_when_clause_list", "searched_when_clause_list",
  "simple_when_clause", "$@23", "$@24", "searched_when_clause", "$@25",
  "$@26", "else_clause_opt", "sp_labeled_control", "$@27", "sp_opt_label",
  "sp_labeled_block", "$@28", "sp_unlabeled_block", "$@29",
  "sp_block_content", "$@30", "sp_unlabeled_control", "$@31", "$@32",
  "$@33", "$@34", "trg_action_time", "trg_event", "opt_ts_datafile_name",
  "opt_logfile_group_name", "opt_tablespace_options",
  "tablespace_option_list", "tablespace_option",
  "opt_alter_tablespace_options", "alter_tablespace_option_list",
  "alter_tablespace_option", "opt_undo_tablespace_options",
  "undo_tablespace_option_list", "undo_tablespace_option",
  "opt_logfile_group_options", "logfile_group_option_list",
  "logfile_group_option", "opt_alter_logfile_group_options",
  "alter_logfile_group_option_list", "alter_logfile_group_option",
  "ts_datafile", "undo_tablespace_state", "lg_undofile",
  "ts_option_initial_size", "ts_option_autoextend_size",
  "ts_option_max_size", "ts_option_extent_size",
  "ts_option_undo_buffer_size", "ts_option_redo_buffer_size",
  "ts_option_nodegroup", "ts_option_comment", "ts_option_engine",
  "ts_option_file_block_size", "ts_option_wait", "ts_option_encryption",
  "size_number", "opt_create_table_options_etc",
  "opt_create_partitioning_etc", "opt_duplicate_as_qe",
  "as_create_query_expression", "partition_clause", "part_type_def",
  "opt_linear", "opt_key_algo", "opt_num_parts", "opt_sub_part",
  "opt_name_list", "name_list", "opt_num_subparts", "opt_part_defs",
  "part_def_list", "part_definition", "opt_part_values", "part_func_max",
  "part_values_in", "part_value_list", "part_value_item_list_paren",
  "$@35", "part_value_item_list", "part_value_item", "opt_sub_partition",
  "sub_part_list", "sub_part_definition", "opt_part_options",
  "part_option_list", "part_option", "opt_create_database_options",
  "create_database_options", "create_database_option", "opt_if_not_exists",
  "create_table_options_space_separated", "create_table_options",
  "opt_comma", "create_table_option", "ternary_option", "default_charset",
  "default_collation", "default_encryption", "row_types",
  "merge_insert_types", "udf_type", "table_element_list", "table_element",
  "column_def", "opt_references", "table_constraint_def",
  "check_constraint", "opt_constraint_name", "opt_not",
  "opt_constraint_enforcement", "constraint_enforcement", "field_def",
  "opt_generated_always", "opt_stored_attribute", "type", "spatial_type",
  "nchar", "varchar", "nvarchar", "int_type", "real_type", "opt_PRECISION",
  "numeric_type", "standard_float_options", "float_options", "precision",
  "type_datetime_precision", "func_datetime_precision", "field_options",
  "field_opt_list", "field_option", "field_length", "opt_field_length",
  "opt_precision", "opt_column_attribute_list", "column_attribute_list",
  "column_attribute", "column_format", "storage_media", "now",
  "now_or_signed_literal", "character_set", "charset_name",
  "opt_load_data_charset", "old_or_new_charset_name",
  "old_or_new_charset_name_or_default", "collation_name", "opt_collate",
  "opt_default", "ascii", "unicode", "opt_charset_with_opt_binary",
  "opt_bin_mod", "ws_num_codepoints", "$@36", "opt_primary", "references",
  "opt_ref_list", "reference_list", "opt_match_clause",
  "opt_on_update_delete", "delete_option", "constraint_key_type",
  "key_or_index", "opt_key_or_index", "keys_or_index", "opt_unique",
  "opt_fulltext_index_options", "fulltext_index_options",
  "fulltext_index_option", "opt_spatial_index_options",
  "spatial_index_options", "spatial_index_option", "opt_index_options",
  "index_options", "index_option", "common_index_option",
  "opt_index_name_and_type", "opt_index_type_clause", "index_type_clause",
  "visibility", "index_type", "key_list", "key_part",
  "key_list_with_expression", "key_part_with_expression", "opt_ident",
  "opt_component", "string_list", "alter_table_stmt",
  "alter_database_stmt", "$@37", "alter_procedure_stmt", "$@38",
  "alter_function_stmt", "$@39", "alter_view_stmt", "$@40", "$@41",
  "alter_event_stmt", "$@42", "alter_logfile_stmt",
  "alter_tablespace_stmt", "alter_undo_tablespace_stmt",
  "alter_server_stmt", "alter_user_stmt", "opt_replace_password",
  "alter_resource_group_stmt", "alter_user_command",
  "opt_account_lock_password_expire_options",
  "opt_account_lock_password_expire_option_list",
  "opt_account_lock_password_expire_option", "connect_options",
  "connect_option_list", "connect_option", "user_func",
  "ev_alter_on_schedule_completion", "opt_ev_rename_to", "opt_ev_sql_stmt",
  "ident_or_empty", "opt_alter_table_actions",
  "standalone_alter_table_action", "alter_table_partition_options",
  "opt_alter_command_list", "standalone_alter_commands",
  "opt_with_validation", "with_validation", "all_or_alt_part_name_list",
  "alter_list", "alter_commands_modifier_list", "alter_list_item",
  "alter_commands_modifier", "opt_index_lock_and_algorithm",
  "alter_algorithm_option", "alter_algorithm_option_value",
  "alter_lock_option", "alter_lock_option_value", "opt_column",
  "opt_ignore", "opt_restrict", "opt_place", "opt_to", "group_replication",
  "slave", "slave_start", "start_slave_opts", "$@43", "start",
  "opt_start_transaction_option_list", "start_transaction_option_list",
  "start_transaction_option", "slave_connection_opts",
  "slave_user_name_opt", "slave_user_pass_opt", "slave_plugin_auth_opt",
  "slave_plugin_dir_opt", "opt_slave_thread_option_list",
  "slave_thread_option_list", "slave_thread_option", "slave_until",
  "slave_until_opts", "checksum", "opt_checksum_type", "repair_table_stmt",
  "opt_mi_repair_types", "mi_repair_types", "mi_repair_type",
  "analyze_table_stmt", "opt_num_buckets", "opt_histogram",
  "binlog_base64_event", "check_table_stmt", "opt_mi_check_types",
  "mi_check_types", "mi_check_type", "optimize_table_stmt",
  "opt_no_write_to_binlog", "rename", "$@44", "rename_list",
  "table_to_table_list", "table_to_table", "keycache_stmt",
  "keycache_list", "assign_to_keycache", "key_cache_name", "preload_stmt",
  "preload_list", "preload_keys", "adm_partition", "opt_cache_key_list",
  "opt_ignore_leaves", "select_stmt", "select_stmt_with_into",
  "query_expression", "query_expression_body", "query_expression_parens",
  "query_primary", "query_specification", "opt_from_clause", "from_clause",
  "from_tables", "table_reference_list", "table_value_constructor",
  "explicit_table", "select_options", "select_option_list",
  "select_option", "locking_clause_list", "locking_clause",
  "lock_strength", "table_locking_list", "opt_locked_row_action",
  "locked_row_action", "select_item_list", "select_item", "select_alias",
  "optional_braces", "expr", "bool_pri", "predicate", "opt_of", "bit_expr",
  "or", "and", "not", "not2", "comp_op", "all_or_any", "simple_expr",
  "opt_array_cast", "function_call_keyword", "function_call_nonkeyword",
  "function_call_conflict", "geometry_function", "function_call_generic",
  "fulltext_options", "opt_natural_language_mode", "opt_query_expansion",
  "opt_udf_expr_list", "udf_expr_list", "udf_expr",
  "set_function_specification", "sum_expr", "window_func_call",
  "opt_lead_lag_info", "opt_ll_default", "opt_null_treatment",
  "opt_from_first_last", "opt_windowing_clause", "windowing_clause",
  "window_name_or_spec", "window_name", "window_spec",
  "window_spec_details", "opt_existing_window_name",
  "opt_partition_clause", "opt_window_order_by_clause",
  "opt_window_frame_clause", "window_frame_extent", "window_frame_start",
  "window_frame_between", "window_frame_bound",
  "opt_window_frame_exclusion", "window_frame_units", "grouping_operation",
  "variable", "variable_aux", "opt_distinct", "opt_gconcat_separator",
  "opt_gorder_clause", "gorder_list", "in_sum_expr", "cast_type",
  "opt_expr_list", "expr_list", "ident_list_arg", "ident_list", "opt_expr",
  "opt_else", "when_list", "table_reference", "esc_table_reference",
  "joined_table", "natural_join_type", "inner_join_type",
  "outer_join_type", "opt_inner", "opt_outer", "opt_use_partition",
  "use_partition", "table_factor", "table_reference_list_parens",
  "single_table_parens", "single_table", "joined_table_parens",
  "derived_table", "table_function", "columns_clause", "columns_list",
  "jt_column", "jt_column_type", "opt_on_empty_or_error", "opt_on_empty",
  "opt_on_error", "jt_on_response", "index_hint_clause", "index_hint_type",
  "index_hint_definition", "index_hints_list", "opt_index_hints_list",
  "opt_key_definition", "opt_key_usage_list", "key_usage_element",
  "key_usage_list", "using_list", "ident_string_list", "interval",
  "interval_time_stamp", "date_time_type", "opt_as", "opt_table_alias",
  "opt_all", "opt_where_clause", "where_clause", "opt_having_clause",
  "with_clause", "with_list", "common_table_expr",
  "opt_derived_column_list", "simple_ident_list", "opt_window_clause",
  "window_definition_list", "window_definition", "opt_group_clause",
  "group_list", "olap_opt", "alter_order_list", "alter_order_item",
  "opt_order_clause", "order_clause", "order_list",
  "opt_ordering_direction", "ordering_direction", "opt_limit_clause",
  "limit_clause", "limit_options", "limit_option", "opt_simple_limit",
  "ulong_num", "real_ulong_num", "ulonglong_num", "real_ulonglong_num",
  "dec_num_error", "dec_num", "select_var_list", "select_var_ident",
  "into_clause", "into_destination", "do_stmt", "drop_table_stmt",
  "drop_index_stmt", "drop_database_stmt", "drop_function_stmt",
  "drop_resource_group_stmt", "drop_procedure_stmt", "drop_user_stmt",
  "drop_view_stmt", "drop_event_stmt", "drop_trigger_stmt",
  "drop_tablespace_stmt", "drop_undo_tablespace_stmt", "drop_logfile_stmt",
  "drop_server_stmt", "drop_srs_stmt", "drop_role_stmt", "table_list",
  "table_alias_ref_list", "if_exists", "opt_temporary",
  "opt_drop_ts_options", "drop_ts_option_list", "drop_ts_option",
  "insert_stmt", "replace_stmt", "insert_lock_option",
  "replace_lock_option", "opt_INTO", "insert_from_constructor",
  "insert_query_expression", "fields", "insert_values",
  "query_expression_or_parens", "value_or_values", "values_list",
  "values_row_list", "equal", "opt_equal", "row_value",
  "row_value_explicit", "opt_values", "values", "expr_or_default",
  "opt_values_reference", "opt_insert_update_list", "update_stmt",
  "opt_with_clause", "update_list", "update_elem", "opt_low_priority",
  "delete_stmt", "opt_wild", "opt_delete_options", "opt_delete_option",
  "truncate_stmt", "opt_table", "opt_profile_defs", "profile_defs",
  "profile_def", "opt_profile_args", "show", "$@45", "show_param", "$@46",
  "$@47", "show_engine_param", "master_or_binary", "opt_storage", "opt_db",
  "opt_full", "opt_extended", "opt_show_cmd_type", "from_or_in",
  "binlog_in", "binlog_from", "opt_wild_or_where", "describe_stmt",
  "explain_stmt", "explainable_stmt", "describe_command",
  "opt_explain_format_type", "opt_describe_column", "flush", "$@48",
  "flush_options", "$@49", "opt_flush_lock", "$@50", "flush_options_list",
  "flush_option", "opt_table_list", "reset", "$@51", "reset_options",
  "opt_if_exists_ident", "reset_option", "$@52", "$@53",
  "slave_reset_options", "master_reset_options", "purge", "$@54",
  "purge_options", "purge_option", "kill", "kill_option", "use",
  "load_stmt", "data_or_xml", "opt_local", "load_data_lock",
  "opt_duplicate", "duplicate", "opt_field_term", "field_term_list",
  "field_term", "opt_line_term", "line_term_list", "line_term",
  "opt_xml_rows_identified_by", "opt_ignore_lines", "lines_or_rows",
  "opt_field_or_var_spec", "fields_or_vars", "field_or_var",
  "opt_load_data_set_spec", "load_data_set_list", "load_data_set_elem",
  "text_literal", "text_string", "param_marker", "signed_literal",
  "literal", "NUM_literal", "temporal_literal", "insert_ident",
  "table_wild", "order_expr", "grouping_expr", "simple_ident",
  "simple_ident_nospvar", "simple_ident_q", "table_ident",
  "table_ident_opt_wild", "IDENT_sys", "TEXT_STRING_sys_nonewline",
  "filter_wild_db_table_string", "TEXT_STRING_sys", "TEXT_STRING_literal",
  "TEXT_STRING_filesystem", "TEXT_STRING_password", "TEXT_STRING_hash",
  "TEXT_STRING_validated", "ident", "role_ident", "label_ident",
  "lvalue_ident", "ident_or_text", "role_ident_or_text",
  "user_ident_or_text", "user", "role", "schema", "ident_keyword",
  "ident_keywords_ambiguous_1_roles_and_labels",
  "ident_keywords_ambiguous_2_labels", "label_keyword",
  "ident_keywords_ambiguous_3_roles", "ident_keywords_unambiguous",
  "role_keyword", "lvalue_keyword",
  "ident_keywords_ambiguous_4_system_variables", "set",
  "start_option_value_list", "set_role_stmt", "opt_except_role_list",
  "set_resource_group_stmt", "thread_id_list", "thread_id_list_options",
  "start_option_value_list_following_option_type",
  "option_value_list_continued", "option_value_list", "option_value",
  "option_type", "opt_var_type", "opt_var_ident_type",
  "opt_set_var_ident_type", "option_value_following_option_type",
  "option_value_no_option_type", "internal_variable_name",
  "transaction_characteristics", "transaction_access_mode",
  "opt_transaction_access_mode", "isolation_level", "opt_isolation_level",
  "transaction_access_mode_types", "isolation_types",
  "set_expr_or_default", "lock", "$@55", "table_or_tables",
  "table_lock_list", "table_lock", "lock_option", "unlock", "$@56",
  "shutdown_stmt", "restart_server_stmt", "alter_instance_stmt",
  "alter_instance_action", "handler_stmt", "handler_scan_function",
  "handler_rkey_function", "handler_rkey_mode", "revoke", "$@57", "grant",
  "$@58", "opt_acl_type", "opt_privileges", "role_or_privilege_list",
  "role_or_privilege", "opt_with_admin_option", "opt_and", "require_list",
  "require_list_element", "grant_ident", "user_list", "role_list",
  "opt_retain_current_password", "opt_discard_old_password", "create_user",
  "alter_user", "create_user_list", "alter_user_list", "opt_column_list",
  "column_list", "require_clause", "grant_options", "opt_grant_option",
  "opt_with_roles", "opt_grant_as", "begin_stmt", "$@59", "opt_work",
  "opt_chain", "opt_release", "opt_savepoint", "commit", "rollback",
  "savepoint", "release", "union_option", "row_subquery", "table_subquery",
  "subquery", "query_spec_option", "init_lex_create_info",
  "view_or_trigger_or_sp_or_event", "definer_tail", "no_definer_tail",
  "definer_opt", "no_definer", "definer", "view_replace_or_algorithm",
  "view_replace", "view_algorithm", "view_suid", "view_tail", "$@60",
  "view_select", "view_check_option", "trigger_action_order",
  "trigger_follows_precedes_clause", "trigger_tail", "$@61", "udf_tail",
  "sf_tail", "$@62", "$@63", "$@64", "$@65", "sp_tail", "$@66", "$@67",
  "$@68", "$@69", "xa", "opt_convert_xid", "xid", "begin_or_start",
  "opt_join_or_resume", "opt_one_phase", "opt_suspend", "install",
  "uninstall", "TEXT_STRING_sys_list", "import_stmt", "clone_stmt",
  "opt_datadir_ssl", "opt_ssl", "resource_group_types",
  "opt_resource_group_vcpu_list", "vcpu_range_spec_list",
  "vcpu_num_or_range", "signed_num", "opt_resource_group_priority",
  "opt_resource_group_enable_disable", "opt_force", YY_NULLPTR
};
#endif

# ifdef YYPRINT
/* YYTOKNUM[NUM] -- (External) token number corresponding to the
   (internal) symbol number NUM (which must be that of a token).  */
static const yytype_uint16 yytoknum[] =
{
       0,   256,  1151,   258,   259,   260,   261,   262,   263,   264,
     265,   266,   267,   268,   269,   270,   271,   272,   273,   274,
     275,   276,   277,   278,   279,   280,   281,   282,   283,   284,
     285,   286,   287,   288,   289,   290,   291,   292,   293,   294,
     295,   296,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
     315,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,   327,   328,   329,   330,   331,   332,   333,   334,
     335,   336,   337,   338,   339,   340,   341,   342,   343,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,   371,   372,   373,   374,
     375,   376,   377,   378,   379,   380,   381,   382,   383,   384,
     385,   386,   387,   388,   389,   390,   391,   392,   393,   394,
     395,   396,   397,   398,   399,   400,   401,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,   414,
     415,   416,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,   427,   428,   429,   430,   431,   432,   433,   434,
     435,   436,   437,   438,   439,   440,   441,   442,   443,   444,
     445,   446,   447,   448,   449,   450,   451,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
     465,   466,   467,   468,   469,   470,   471,   472,   473,   474,
     475,   476,   477,   478,   479,   480,   481,   482,   483,   484,
     485,   486,   487,   488,   489,   490,   491,   492,   493,   494,
     495,   496,   497,   498,   499,   500,   501,   502,   503,   504,
     505,   506,   507,   508,   509,   510,   511,   512,   513,   514,
     515,   516,   517,   518,   519,   520,   521,   522,   523,   524,
     525,   526,   527,   528,   529,   530,   531,   532,   533,   534,
     535,   536,   537,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,   548,   549,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
     565,   566,   567,   568,   569,   570,   571,   572,   573,   574,
     575,   576,   577,   578,   579,   580,   581,   582,   583,   584,
     585,   586,   587,   588,   589,   590,   591,   592,   593,   594,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   628,   629,   630,   631,   632,   633,   634,
     635,   636,   637,   638,   639,   640,   641,   642,   643,   644,
     645,   646,   647,   648,   649,   650,   651,   652,   653,   654,
     655,   656,   657,   658,   659,   660,   661,   662,   663,   664,
     665,   666,   667,   668,   669,   670,   671,   672,   673,   674,
     675,   676,   677,   678,   679,   680,   681,   682,   683,   684,
     685,   686,   687,   688,   689,   690,   691,   692,   693,   694,
     695,   696,   697,   698,   699,   700,   701,   702,   703,   704,
     705,   706,   707,   708,   709,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   720,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,   744,
     745,   746,   747,   748,   749,   750,   751,   752,   753,   754,
     755,   756,   757,   758,   759,   760,   761,   762,   763,   764,
     765,   766,   767,   768,   769,   770,   771,   772,   773,   774,
     775,   776,   777,   778,   779,   780,   781,   782,   783,   784,
     785,   786,   787,   788,   789,   790,   791,   792,   793,   794,
     795,   796,   797,   798,   799,   800,   801,   802,   803,   804,
     805,   806,   807,   808,   809,   810,   811,   812,   813,   814,
     815,   816,   817,   818,   819,   820,   821,   822,   823,   824,
     825,   826,   827,   828,   829,   830,   831,   832,   833,   834,
     835,   836,   837,   838,   839,   840,   841,   842,   843,   844,
     845,   846,   847,   848,   849,   850,   851,   852,   853,   854,
     855,   856,   857,   858,   859,   860,   861,   862,   863,   864,
     865,   866,   867,   868,   869,   870,   871,   872,   873,   874,
     875,   876,   877,   878,   879,   880,   881,   882,   883,   884,
     885,   886,   887,   888,   889,   890,   891,   892,   893,   894,
     895,   896,   897,   898,   899,   900,   901,   902,   903,   904,
     905,   906,   907,   908,   909,   910,   911,   912,   913,   914,
     915,   916,   917,   918,   919,   920,   921,   922,   923,   924,
     925,   926,   927,   928,   929,   930,   931,   932,   933,   934,
     935,   936,   937,   938,   939,   940,   941,   942,   943,   944,
     945,   946,   947,   948,   949,   950,   951,   952,   953,   954,
     955,   956,   957,   958,   959,   960,   961,   962,   963,   964,
     965,   966,   967,   968,   969,   970,   971,   972,   973,   974,
     975,   976,   977,   978,   979,   980,   981,   982,   983,   984,
     985,   986,   987,   988,   989,   990,   991,   992,   993,   994,
     995,   996,   997,   998,  1150,  1152,  1153,  1154,   124,    38,
      45,    43,    42,    47,    37,    94,   126,  1155,    40,    41,
    1156,    59,    64,    44,    46,    58,    33,   123,   125
};
# endif

#define YYPACT_NINF -4431

#define yypact_value_is_default(Yystate) \
  (!!((Yystate) == (-4431)))

#define YYTABLE_NINF -2778

#define yytable_value_is_error(Yytable_value) \
  0

  /* YYPACT[STATE-NUM] -- Index in YYTABLE of the portion describing
     STATE-NUM.  */
static const int yypact[] =
{
    7863,  3742,   232, -4431,   -30,   984, 67327,   211,  2228,  2228,
     591,  2911, -4431, -4431, -4431, 12244,  4043, -4431, 67327,   232,
     572, 45157, 67327, -4431,   739,  1583,     1,   306,   271,  1131,
     232, 67327, -4431,   843,   -47,   232,  1618,   870, 59937, 45896,
     591, 67327,  2112, 28142, -4431, -4431, 59937,  1006,  1106, 67327,
    1058,    40,  1412, 67327,  1057, 60676,  2691, 21400,  2232,  1240,
    1070,  1945, -4431,  2292,  1907, -4431,  1802, -4431, -4431,  1569,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, 52547, -4431, -4431,  1475,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431,  2063,    36,  1289, -4431, -4431, -4431, -4431,  1461,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
     140, -4431, -4431, -4431, -4431, -4431, 61415, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431,  1964, 67327,  2003, 67327,    64,  2029,
   67327, 58459, 67327, 67327,  1691,  2035,  2135,  2196, -4431, -4431,
    2242, -4431, -4431,  2228,   591, -4431, -4431, 67327, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,  1617, -4431,
    1640, -4431, -4431, -4431, -4431, -4431, -4431,  1849,  2261, -4431,
   -4431, 67327, 67327, -4431,  2452,  2251,  2264,  2294,  2061, 58459,
      56, 67327, -4431,  1973, -4431,  2251,  2251,  2331,  2316,  1990,
   -4431, -4431, -4431,  2242,  2551, -4431,  1811,  1831,  1863, 21400,
   -4431,  1874,  1879,  1901, 16059,  1927,  1934,  1940,  1967,  1974,
    1976,  1982,  2014,  2014,  2020,  2031,  2044,  2056,  -108,  2102,
   -4431,  2127,  1070,  2140, -4431, -4431,  2170,  2178,  2199,  2218,
   -4431,  2234,  2237,  2245, 16822,  2247,  2250, -4431, 38500,  2257,
    2266,  2299,  2300,  2311,  2320,  2327,  2328,  2364, -4431, -4431,
   16059,  2020, -4431, -4431, -4431,  2372,  2380,  2385,  2386,  2394,
    2395,  2400,  2407,  2415,  2417,  2422,  2424,  2425,  2430,  2432,
    2440,  2020, -4431,   689,  2441,  2442,  1078,  2447, -4431,  2474,
   -4431,   312,  2475,  2014,  2020,  2020,  2476,  2482,  2483,  2498,
    2508,  2517,  2520,  2524,  2532,  2533,  2542,  2547,  2557,  2562,
    2563,  2568,  2569,  2571,  2576,  2577, 21400, 21400, -4431, 21400,
    9955, 28882, -4431, 67327, -4431, -4431,  1882, -4431, 48113,  4286,
   -4431,  3196, 21400,  1327, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431,  2296, -4431, -4431, -4431, -4431, -4431,
     375, -4431,  2580,  1947, -4431, -4431,  2035,  2035,  2035, 67327,
    2681,  2035,  2035,  2273, 67327,  2035,  2434,  2035,  2035,  2035,
    2788,  2228, -4431, -4431, -4431, -4431,  2977,  2668,  2725,  2777,
   -4431,  2638, -4431, -4431, -4431,  2826, -4431,  2581, -4431,  2735,
   -4431,  2962,  2581, -4431,   241,  2581,   287, -4431, -4431, -4431,
    2581, -4431, -4431, -4431, -4431,  1753, -4431, -4431, -4431, -4431,
     -31, -4431,  2961,   142, 58459,  3146, -4431, -4431, -4431,  3114,
   67327,   -30, -4431, -4431, 16059, -4431,  3105, -4431,  1204,  3159,
   -4431,  2228,  3164,   367, 67327, 53286, -4431,  2228, -4431, -4431,
    3110, -4431,   204,   127,  2741, -4431, -4431,  2865, -4431,  2668,
    2992,   122,   217, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, 12244,  2112, -4431, -4431,    72,  2874,   818,
   -4431, -4431, 48852,  1221, -4431,  1333, -4431, 71022, -4431,  3166,
   29622, 50330, -4431,  2615, -4431, -4431, -4431, -4431, -4431, -4431,
   69544,  2617,  1053,  6731,  2865, -4431,    54,    20, -4431,    54,
   -4431,  2618, -4431, 67327, 67327,   -30, -4431,  2228, -4431,  2623,
    2622, -4431, 67327,  2624, -4431,  2630, -4431,   434,   434,   434,
    3294,   434, -4431,   434,  3353,  2627,  2634,  3346,  3239,  2711,
    3242, -4431,  3202,  3289,  2642,   172,   785,  1461, -4431, -4431,
    2643, 67327,  2014, -4431,  2645,  1314, -4431, -4431,  2646, -4431,
    2125, -4431,   -59,  3299, -4431,  2794,  1459, 27402,  3160,  2063,
   -4431,  1716,  3363,   453,  3136, -4431, 51069,   453,  3136, -4431,
      36,  1289,  1563,  3124, -4431,  3259,  2211, 54025,  1213, -4431,
   -4431, 53286, -4431, 67327, 58459, -4431, 67327, -4431,  3037,  2640,
    8718, 67327,  3257, -4431, 67327, 67327,  2892, -4431, 67327, -4431,
      28, -4431,  1784, 16059, -4431, 67327, -4431, -4431,    69, -4431,
     363,  1191,  1825,  1326, 67327, 67327, 67327,  2910,  3240, 67327,
    2734,  3427, 67327, 53286, 73978, 67327, 67327,  2251,  1855,  2324,
   -4431, -4431, 16059, 16059,  1800,  3373,  3441,  3441,  3441,   554,
    2821, 16059, 16059, 16059, 16059, 16059, 16059,  1850,  2697, -4431,
   -4431,   -75, -4431,  2701, 16059, 16059, -4431, 16059, 16059, 67327,
   -4431,  5189, 16059, 16059,  1342,  3321, 16059, 16059, 16059,  9955,
    4251, 16059, 16059, 67327,  3453,  2702, -4431,  2704,  1881, 16059,
   16059,  1931, 16059, 16059, 16059, 16059, 16059, -4431, -4431, 16059,
   16059, 21400, 16059, 16059, 16059, 16059, 16059, 16059,  2713, 16059,
    3441,  3441, 16059, 16059,  1953, -4431, -4431, 16059,  2635,  2635,
   -4431, 16059, 10718, 16059, -4431, -4431, -4431,  2714, -4431, -4431,
   -4431, 67327,  3441,  3441, 16059, 16059, 16059,  3441,  3441, 16059,
    2715,  2717, 16059, 16059, 16059, 16059, 16059, 21400,  2726,  2731,
    2732,  3373,  3373,  3373,   -87,   315,   785,   174,  1270, -4431,
    2968, 16059, 16059, -4431, -4431, 62154, -4431, -4431, -4431, 16059,
   -4431, 16059, 16059, -4431, -4431, -4431, -4431, -4431, -4431,  1158,
   -4431, -4431, -4431, 17585, 21400, 21400,  2739, 21400, 21400, -4431,
   -4431, 21400, 21400, 21400,  3209,  2834, 21400, 21400, 22163, 22926,
   21400, 21400, 21400, 21400,   248,  3373, 58459, 21400, -4431, -4431,
    2296,  2296, 16059, 41456, 67327, 67327, 67327,  3115, 67327, 67327,
   58459,  2793,   125, 67327, 67327, 53286, 67327, 73978, 67327,  2035,
    2888,  3738, 31842, -4431, -4431, -4431, -4431, -4431,  2944, -4431,
   -4431, -4431, -4431, -4431, 67327, -4431, -4431, 53286, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, 58459, -4431,   171, 53286, 46635,
     139, -4431, 68066, 67327, -4431,   -30, -4431,  3110,  2997, -4431,
    2751,   554,  3466, -4431, -4431,  3235,  3492, 67327, 67327,  -131,
   -4431, -4431,  3232, -4431, -4431,  2764,  2947, 67327, 67327, -4431,
   67327, 67327, -4431, -4431, -4431,  2769, -4431, -4431,  2296,  4328,
   -4431,  2771, 53286, 53286,   171,  3049,  1825,    47, -4431, -4431,
   72500, 67327, -4431, -4431, -4431, -4431,  3468, 16059, -4431, 53286,
    2807,  2973,  3274,   931, -4431,  2785,  2789, -4431,  2893, -4431,
   -4431,  2791, -4431,  2795, 67327,  1068,  1053, -4431, -4431, -4431,
   -4431, -4431, 67327,  2790,  1333, -4431,  2617,  1053, 30362, -4431,
   11481,  3390, -4431,  1037,  2803,  2340,  1037, 54764,  3136,   297,
     397,   494,   250, -4431,  3370, -4431,  3023,  3012, -4431, -4431,
     319,  2948, -4431,  3413, -4431,   158, -4431,  3040,  3136,  1037,
   -4431,  3293,  3429,  1356,  2124,   512,  1388, -4431, -4431, -4431,
   -4431,  2824, -4431,  1138,  3500, -4431,  2828, -4431,  3400, -4431,
   -4431,  2751, -4431, 18348,  1057,  2624, 67327, 67327,  3574, -4431,
   -4431,  2833, -4431,  3218,  3043, -4431,  2960, -4431, -4431,   178,
   -4431, 67327, 16059,  1584, -4431, -4431, 53286,  3472, -4431, -4431,
     256, -4431,  3454, -4431, -4431,  2859,  2901,  3586, 58459,  2981,
    2908,   212, -4431,   968, 53286,  3006,  3487,  3488,  3493,  3495,
    3497, -4431,  3498, -4431,  2886,  3502, -4431,  3248, -4431, -4431,
    1864,  3095,  3095, 58459,  2907, -4431, -4431, -4431,  3168, -4431,
   -4431,  1716, 16059, -4431, -4431,  1461, -4431, -4431, -4431, -4431,
   -4431, -4431,   793, -4431, -4431,  1461, -4431,  3136,  3136, -4431,
   -4431, -4431, -4431, 62893,  1563,  3114, 58459,  3587, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
    3550, -4431, -4431,  3310,  3366,  3677, -4431,  2931,  3581,  1053,
    1053,  3581,  1053,  1053, -4431,  3109, -4431,    83, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  3536,  3120,  1053,  2001,  3295,
    1053,  1053,  3621,  1053,  3296,  3298,  1053,  1053,  1053,  1053,
    3122,  3571, -4431,  1053,  3448,  1350,  2836,  3455,  1053,  3313,
   -4431,  1415,  3579,  1053,  1053,  1053,  1053,  1053,  3621,  3316,
    3671,  1053,  1053,  3319,   417,  3324,  3326,  1053,  1053,  1053,
    1053,   293,  1053,  1053,  3327,  1053,  3103,  3113,  1053, -4431,
   -4431,  5089, -4431, -4431, -4431,  2611, -4431, -4431,   133, -4431,
   -4431,  2966,  2971, -4431, -4431, -4431, -4431,  3237, -4431,  3026,
   -4431,  3251,  3118, -4431,  2892,    79, 63632, 67327, -4431, -4431,
    2990,  2991,   282, -4431,   554,  2996,  2987, -4431,  6948,  3968,
   -4431, -4431, 67327, -4431, -4431, -4431, -4431,  3141, -4431, -4431,
   -4431, -4431,  2347, -4431,  3700,  3315, -4431, -4431,  3590, -4431,
    3391,  3767,  3058,  3665,  3402,  2251,  3581,  3167,  3780,  3560,
   -4431,   100,  2795,  3200,  1746, 67327,  3593,  2251, 67327, 67327,
   67327, -4431, -4431, -4431, -4431, -4431, -4431, -4431, 67327, -4431,
   -4431, -4431, -4431, -4431, -4431,  2892,   224,  1308, -4431,  3441,
    3041, 16059,  3046,  3047,  3050, 16059,   138,   360,  1398,  1434,
    1219,  1425,   200, 16059,  3051, 13007, -4431,  3052, -4431, -4431,
     366,   373,  1437,  1492,  3054, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  3617, -4431,   381,  3056, -4431,
   -4431, -4431, -4431,  3053, -4431, 16059,  1501,   464,   474,   229,
    3066,   486,  1738,  1786,  3064, 67327, 67327,  3441,  3070,  1535,
    1539,  3441,  3072,   493,  1560,  1795,  1805,  1813,   529,  1839,
    3504,  1565,   540,   599,  1620,   636,   743, -4431,  1667,  3078,
    3081,  1023,   166,  3441,  3082,   254,  3079,  3080,  1701, 13770,
   14533, 15296,  1086,  1185, -4431,  3088, -4431,  2704,  3092,  3094,
     299,   291,  1726,  3093,  3096,  1841,  3169,  3169,  1730,  1202,
    1739,  1202,  1210,   101,  3169,  3169,  3169,   700, -4431, 16059,
    3097,  3106,  3111, 58459, 16059,   164, -4431, -4431, -4431,  2507,
     295, -4431, -4431, -4431, -4431, -4431,  1119, -4431,  3116, -4431,
    1070,  2473,  3125,  9955, -4431,   296,  3125,  3419,  1393,  1393,
   21400, -4431,  3127,  2698,  3449, 16822,   877, 16822,   877,  3125,
    3125,  3125, -4431, 21400,  3128, 21400, 21400, -4431,  3373, -4431,
   -4431, 48113,  3130,  3129, -4431, -4431,  -228, -4431, -4431,  3119,
   67327,   125, -4431, -4431,  2035, -4431, -4431, -4431,   201, -4431,
   -4431,   570, -4431,  3132,   135,  2795,  3681, 67327,  3135, -4431,
    3600,  3604,  3614,  3619, -4431, -4431, -4431, -4431,  3620, -4431,
    3623, -4431, -4431,  3145, -4431, 67327, 26662, 58459, -4431,  3150,
   -4431,  3744, -4431,  3537, -4431, -4431,  1892,  3333, -4431, -4431,
   -4431, -4431, 42195,  1260, -4431, -4431, 67327, -4431,   129,   580,
    4047,  3284, -4431,  2751, 67327,   -30,   -30, 67327, -4431,  3686,
   -4431,   214,  3162, -4431,  3165, 58459, -4431, -4431,   228, 53286,
   53286,  3170, -4431,  3349,   280,  3529, -4431,  3351,  3922,   127,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431,  3174,  3778,  3731,  3565,  3755,  3132, 42195,
   -4431, 67327, -4431, 24434,  3284, -4431,  3759,  3376,  3378,  -107,
   -4431, 55503, -4431,   554,  1002,  3507, -4431,  3507,  1810, -4431,
   -4431,  3711, -4431,  3541, -4431, 73978, -4431, 58459, 73978,  3775,
    3206,  3222,  3225,  3226,  3227, 70283, 16059, -4431, -4431, -4431,
   11481,  3229, -4431, 70283, -4431, -4431, 21400,  2127, -4431,  2415,
   -4431,   554, -4431,  3746,  2296, 16059, -4431, -4431,  3244,  2251,
   67327, 67327, 67327, 67327, 67327, 53286, 67327, -4431,  1276,  1276,
   -4431, -4431, -4431,  1037, 67327, -4431, 67327,  1037, 53286, -4431,
     297, 67327,  1037, -4431,  3745,  3437, -4431, -4431, -4431,  3818,
   -4431, -4431,  3807,  3243, -4431,  3746, -4431,  3400,   297, -4431,
   -4431, -4431, -4431, -4431,   297, -4431, -4431, -4431,   297,   297,
     297,  1037,  1037,    54, -4431, -4431,  3501,    20,  3943, -4431,
    2127,   554,  3253,  3255, -4431, -4431, -4431,  1920, -4431,  1070,
     434,  3611, -4431,  3823, -4431, -4431, -4431, -4431, -4431,  1529,
    1741, -4431,   113,   128,  3618,   973,  3256,  1053, -4431, -4431,
   -4431, -4431,  3626,   -91, -4431, 73239,  3631,  1169, 58459,  3450,
    3452, -4431, -4431,  3464, -4431, -4431,   645,  1984, -4431,  2240,
     165,   -30,  1919,   -30,  1486,   -30,   -30,  2083,   -30,  3400,
    3877,  3913, 67327,  3371, -4431,  1941, -4431, -4431, -4431, -4431,
    2554, -4431, 31102,  3701,   239,  3279, -4431, -4431, -4431, 51069,
   51069, -4431, -4431, -4431, -4431, 67327,   151, -4431,  3281, -4431,
   25179, -4431,  2884,   175, -4431, -4431, -4431, -4431,  2591,  3524,
    3568,  3787,  3456,  3524,  1428,   -30,  2526, -4431,  2431,   -30,
    2526,  2431,  2431, 67327, -4431,  2139,  1053, -4431, 67327,   282,
     232,   282, -4431,   369, 67327, 39239, 64371, 67327, 67327, 67327,
   67327,   232,  1919,  1486, 67327,  1486, 65110,   232,   -30,   -30,
     -30,   -30,  2554,  1053,  1486, -4431, 65110, -4431, 67327, 67327,
    3789, 67327,  3790, 67327, 67327, -4431, 58459, 67327, 65110, -4431,
    1053,   259,  1486, 65849,  1919,  1919, 67327,   232, 67327,  2895,
     -30,   232, -4431, 67327, -4431, -4431, 67327, 67327,   232,   232,
    2540,  2895,  2895,  3177, -4431, -4431, 67327,  1486, 65110,  3300,
   -4431, -4431, 56242, -4431,  1053,  1053,  3658, -4431, -4431,  6132,
    9180,  1999,  1053,  3355,  3685,  1703, 67327, -4431,  3398,  3399,
   -4431, -4431, -4431, -4431, -4431,   282, 65110, 66588,  3827, -4431,
   16059,  3917,  3918,  3919,  3924,  3925,  3926,  3937,  3939,  3949,
    3950,  3951,  3952,  3954,  3955,  3960,  3962,  3963,  3966,  3971,
    3973,  3974,  3975,  3982,  3985,  3986,  3987,  3989,  3992,  3993,
    4000,    32, -4431, -4431,  4001,  4015,  4016,  4019,  4023,  4024,
    4025,    44, -4431, -4431, -4431, -4431, -4431, -4431, -4431,   190,
   67327,  3456,  3478,  3440, 67327,  2952, -4431,  3842,  4162,  3581,
     218,  3539, 53286,  3729,  1053,  1343,  1343,  3817, -4431,  3577,
   67327, 67327,  3438,   -85, -4431,   509, -4431, 19111, -4431,  3439,
    3169,   554,  3169,  3169,  3169,  1580, 16059, 16059,  4061,  4443,
   -4431, 56981, -4431, -4431, -4431, 56981,  4443,  1950,  3169,  3457,
   -4431,  3976,  3977, -4431, -4431, -4431, 16059, 16059, -4431, 16059,
     759, -4431, 16059, 16059, 16059, 16059, 16059, -4431, -4431, 21400,
   -4431,  3463,  3459,  3169, -4431, -4431,  3465,  3169, 16059, -4431,
   -4431, -4431, -4431, 16059, -4431, 16059, -4431, 16059, 16059, -4431,
   16059, 16059, -4431,  3169,  3169, 19874, 16059, 16059,  3467,  3169,
   -4431, 16059, 16059, 16059, -4431, 16059,   433, 16059,  1352, 16059,
    2033, 16059, -4431, 16059, -4431,  3169,  3169, -4431, 16059,  2070,
   -4431,  1486, -4431,  3441,  3169, -4431, 39978, -4431, -4431,   353,
    1445,  3469,   353,  3473, 21400,  3169, -4431, -4431, -4431,  1983,
   -4431, -4431, -4431,  3474,   554, -4431, -4431, -4431, -4431, -4431,
   -4431, 21400,   308, 21400,  3419, 21400,  4251,  4251,  2497,  9955,
   -4431,  1700,  3419, -4431, -4431, 16059, 16059, 42934, 67327,   378,
   -4431,  2952,  1143, -4431,    63, -4431, -4431, 53286, -4431, -4431,
   -4431, -4431, -4431,   135, 58459,  3481, -4431, -4431, -4431, -4431,
   -4431,  3400, -4431,  3471,  3165, -4431,  3647,  3663,  3673, -4431,
   33322, -4431, -4431, -4431, -4431, 33322,    95,   171, -4431, 67327,
   53286,  3483,  3496,  3499,  3679,  3609, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431,  3284,  3508,  3136,
   -4431,  3529, -4431, -4431,  3509, -4431,  1784,  3095,  1082, 67327,
   -4431, 16059,   -30, -4431,  3682, -4431, 67327, 67327, -4431, -4431,
   -4431, -4431,   925, -4431,  3513,  2922, -4431,  2952, -4431, -4431,
    3400, -4431,  4328, 26662,  3882,   171, 53286,  4076, -4431, -4431,
    3516,  1070, 23689,  3544, -4431,  3514,  3254, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  3529,  2418,  4067,  3284, 73978,
   73978, 73978, -4431, -4431, -4431,  3549,  2973,  2973,  3555,  3555,
     189,  3852, -4431, -4431, -4431, -4431,  2795, -4431, -4431,  2884,
   -4431, -4431, -4431, -4431, -4431,  1053,   554, -4431, 30362, -4431,
     -30,  4089, -4431,   554,  3528, 67327, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431,  3674,  1037, -4431, -4431, -4431, -4431, -4431,  3862,
    3136,  2948,  4089, -4431,  1037,  1037, 67327, 67327,  1037, -4431,
   -4431, -4431, -4431, -4431,   -30, -4431, 18348, -4431, 67327, -4431,
    3530, -4431,  3956, 67327,  4138,  3538, 21400,  3542, 21400,  2884,
    3748,  3547,  4285,  1486,  3095, -4431,  3507,  3895, -4431, -4431,
    2795, -4431,  3853,  3906,  3555,  2133, -4431, -4431, -4431, -4431,
    1175,  1486,  1486,  1486,  1486,  2240, -4431,   889,   678,  2194,
    2884, -4431,   165, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,   -30,  4151,  3910,  3556, -4431,
   -4431, 56981,  4245, -4431, -4431, -4431, -4431, -4431, -4431, 16059,
   -4431, -4431,  -105,   273,  1028, 25179, 67327, 43673, -4431,   -71,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
    1053,   -30,  3793,  3794,  3795,  3797,  3799,  3830, -4431, -4431,
    3945, -4431,   -30,  1122,   -30,   -30,   -30,   -30,  1486,   -30,
     -30,  1988, -4431, -4431, -4431,   261, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   58459, -4431, -4431, -4431, 67327,   769, 67327,  3576,  4073,  4074,
     282,   809, 67327,  3585,  3730,  3752, 49591, 82831, -4431, -4431,
   -4431,  3980,  3980,  2165,   206, 65110, -4431, -4431, 67327, -4431,
   -4431,  2347,  3588, -4431,  2884, -4431, -4431, -4431, -4431, 51808,
     -30, -4431,  3784, -4431, -4431, 67327,  3588, -4431, -4431,   289,
   -4431,  3712,  3788,   -30, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, 82831, 65110,  3594, -4431,   467, -4431,
   -4431, -4431, -4431, 65110,  3770,  3777, -4431, 67327, 65110, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, 67327, -4431, -4431, 55503, 56981, -4431,  2631,
    4276,  5089, -4431, -4431, -4431,  2966, -4431, -4431, -4431,   570,
    3988,  1053,   385,   627, -4431,  3907, -4431, -4431,  2630,  3996,
    4003,  3605, -4431,  3607, -4431,  3615, -4431, 63632,   554,  3624,
    1486,   -30,  1486,  1486,   -30,   -30,  1486,  1486,   -30,   -30,
     -30,   -30,   -30,   -30,   -30,   -30,  1486,  1486,   -30,  2222,
     -30,  1486,   -30,   -30,  1486, 57720,    93,  1486,   964,  6948,
   -4431,  3625,  3625,  3627,  3627,  3628,  3628,  3629,  3968, -4431,
   -4431,   208,  3630,  2519,  2952, 58459,  3632, -4431,  4167,  1053,
    1053,  1053,  1053, -4431,   269, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431,   570,  1200, 58459, 73978,
   -4431,  3006,  1373, -4431, -4431, -4431, -4431, -4431, 67327,  2711,
   -4431, 67327, -4431, 37022, -4431, -4431, -4431, -4431,   213,  1594,
   -4431,  1716,  1289, -4431,  1007,  3890, -4431, -4431,  1167,  3634,
   -4431, -4431,   482, 16822,  1743,  3169, -4431, -4431, -4431, -4431,
   -4431, 16059,   554,  1587, -4431,  3637,  3637,  3639, -4431,  3642,
    3991,  3637, -4431,  4327, -4431, -4431,  4154,  3639,  4155,  3637,
   -4431,  3688,  3648,  3649,  3652,  3169, -4431,  3169, 16059, 16059,
    1751,   324,  1771,  4355,  3911,  1220,  1224,   326, -4431,  1777,
    3687,  3169, -4431,  3169, -4431,  1779,  1783,  1787,  1789,  1226,
    1828,  1995, -4431, -4431, 16822,  1835,  1081,   343,  3169, -4431,
    1866,  1233,  1235,  1887, 16059,  1909, 16059,  2051, 16059,  2060,
    2100, -4431, -4431,  2172,  3654,  3654,  3650,  3656, -4431, 67327,
   -4431, -4431, -4431, -4431,  3733,  3735,  3169,  3670,  3670,   353,
    3169,   353,   132, -4431, -4431, 67327, -4431, -4431, -4431, 16059,
    1327,   137, -4431, -4431, 21400,   355, 21400, -4431,  3690, -4431,
   -4431, -4431, -4431,  4159,  4441, -4431, -4431,  3912, -4431, -4431,
   -4431,  3135, -4431, -4431,   182,  4301,  3699, -4431, -4431, -4431,
   -4431, -4431, 42195, -4431,  1263,  3713, 44412, 53286,  4081,  3136,
   18348, -4431,  3428, 67327,   282,  4236,  1042,  3825,  4188, -4431,
   -4431, -4431,   554, -4431, 53286, -4431, -4431, -4431, 67327, 67327,
    1057, -4431, 34802, -4431, -4431, -4431, -4431,  3715, -4431, -4431,
    4311, -4431,  4282, 42195,  3132, 53286, 16059,  2418,  3717,  3722,
    3723,  3724,  3725,  3727, 25179, 25179,  4230,  4232, -4431,  4100,
    1396,  4100, -4431, 37761, 25179, 25179,  2659,  2630,  4445,  4277,
    4067,  2795,  2795,  2795,  3507,  3507, -4431,  4392, -4431, -4431,
   -4431, -4431, -4431, -4431,   303, -4431, 11481, -4431, -4431,  1919,
   -4431,   115, -4431, 53286, -4431,  4124, -4431, -4431, -4431, -4431,
   -4431,   297,   297, -4431, -4431, -4431, -4431,  1486, -4431, -4431,
   67327,  2687, 67327,  2819, -4431,  4450,  3743, 21400,  4346,  3750,
    4284, -4431,  3555,  3507,  2973,   -58, -4431,   150,  1242, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431,   290,  4407,  3489,
    4268, -4431, -4431, -4431, -4431, -4431,   -30,  4356, -4431, -4431,
    1019,  4240, -4431, 25179,  3529, 43673,  -187, -4431, -4431,  3756,
   67327,   -30, -4431, -4431, -4431,  4410, -4431,  4411,  1854,  4363,
   -4431, -4431,   323, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  1428, -4431,  3769,  2884,  4127,
    3771, 16059, 67327, -4431, -4431, -4431,  3800, -4431, -4431,  3785,
   40717,  1343,  1343,  2016, -4431, -4431, -4431, 82831, -4431,  3637,
    3637,  3637, -4431, -4431,   352,  3639, -4431, -4431,  3786, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431,   559,  2459, -4431,
   -4431,   559, -4431, -4431, -4431,   193,  2000, -4431, -4431, -4431,
   -4431, -4431,  3792, -4431,  3637,  3639,  3639, -4431, -4431,   559,
    3637, -4431,  3637,  4094,  3460, -4431,   163,  3637,  3637,  3637,
    3796,  3642, -4431, -4431, -4431, -4431, -4431,  4420,  4422, -4431,
   82831, -4431, 67327, -4431,  3468,  3468, -4431, -4431, -4431, -4431,
    3990, -4431, -4431,  1433, -4431, 67327, -4431, -4431, 67327, 67327,
      22,   925,  3798, -4431, -4431, -4431,  3801,   -36, -4431,   -35,
   -4431, -4431,  3681,  1604,   429,  3965,  2117, -4431, 67327, 67327,
   -4431, -4431, 66588, -4431,  1486, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, 35542, -4431, -4431, 36282, -4431, -4431,  -144, -4431,
   -4431,  2143, -4431, -4431, 40717,  1053,  1053, -4431,   331, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,  4168, 40717,
     932, 67327,   -30,  2431,  2431,  2884,  4214, -4431,  4156, -4431,
    2297,  2795,   165, -4431, -4431,  3026,  3803, -4431, -4431, 67327,
    2040, -4431, -4431,  5154,  1716, -4431,  1167,  4181, 67327, -4431,
   -4431, -4431, -4431,  4048, -4431, -4431, -4431, -4431,  4185,  4251,
   -4431, -4431,   554, 16059,   956, -4431, -4431,   559,  4194, -4431,
     975, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431,  3809, -4431, -4431, -4431, -4431, -4431,
    4251,  4251, -4431, -4431, 16059, -4431, 16059,   434,  3810, 16059,
   16059, -4431, 16059, -4431,   342,  3811,  3934, -4431, -4431, -4431,
   -4431, -4431, -4431, 16059, -4431, -4431,  4251, -4431, 16059, -4431,
   -4431, 16059, -4431, -4431, 16059, 16059, -4431,  2188, -4431,  2192,
   -4431,  2267, -4431, -4431, -4431,  2884,  3813,  3814,  1486,  3169,
   -4431,  3816,  4175, -4431, -4431, -4431, 16059, -4431, -4431,  3169,
   -4431,  3169,  4380, -4431,  2048, -4431, -4431, -4431, 16059,  1327,
   -4431, -4431, -4431, -4431, -4431, -4431,  4146, -4431,  4560, 33322,
    3998,  4372, -4431, -4431, -4431, -4431,  1297, -4431, -4431,  2049,
   67327,  4562,  4209, -4431,   282,  4236,  4322, -4431,  4350, -4431,
   -4431, -4431, -4431,  3833,  3588,  3835, -4431,  1053,  2644,  2054,
   -4431, -4431, -4431,  3839, 18348,  3836, -4431, 26662, 53286,  4408,
    3132,  1275,  2630, 25179, -4431, -4431, -4431, -4431, -4431,  3254,
    3838,  3840,  3843,  3254, -4431, -4431, -4431,  4352, -4431,  4100,
    4100,  4357,  4360, -4431,  3155,  3610,  1355, -4431, 16059, 16059,
    3916,  4277,  3555,  3555,  4200,  2884, -4431, -4431,  3136, -4431,
   -4431,  3132, -4431,  3136,  3284,  1037, -4431,  2093, -4431, -4431,
    2110, -4431,  4351,  4127, -4431,  2872,  2884, 67327,  4575, -4431,
    3555,  3555,  2973, -4431, -4431, -4431,  3555,  4223,   955, -4431,
    2884, -4431,   106, -4431, -4431,  3944, -4431,   -30,  4581,  4583,
    4480,  4586,  1019, -4431,  1733, -4431,  -187,  3284,  1254, -4431,
    3883, -4431,  1145, -4431, -4431, -4431, -4431, -4431, -4431,   988,
   -4431, 40717, -4431, 67327,  2111, -4431, 40717,  2346,  3881, -4431,
   40717, 16059, -4431,  2123, -4431,   191, -4431, -4431, -4431, 49591,
    4094, -4431, -4431, -4431,  4605,   349, -4431,  4607, -4431,   559,
   56981, -4431, -4431, -4431, -4431,   434, -4431,  1252, -4431,   559,
   -4431, -4431,  4018, -4431, -4431, -4431,   434,   559, -4431, -4431,
   -4431, -4431,  1625, 67327,  1433, -4431, -4431, 55503,  1298,   -30,
    3462,  3923, -4431,  4037, -4431,  4522,  1564,  4385,  2952,  4585,
   -4431, -4431,  3601, -4431,  4451,  4394,   808, -4431,  4624, -4431,
     559,  4624,  1625,  4287, -4431,  1625,  1625, -4431,  3783,  1433,
   -4431, -4431, -4431, 67327, 67327, -4431, -4431, -4431, -4431, -4431,
    3905, -4431, -4431,  4291,  3988, -4431,  4292, -4431, -4431,  4252,
   -4431, 16059, 16059,  4289, 67327,  4294, -4431,  4593,  4653,  3588,
    1300, -4431,  2129, -4431, -4431, -4431,  2144, -4431, -4431, -4431,
    2161, -4431, -4431,  3920, -4431,  2163, -4431, -4431, -4431, 67327,
   -4431,  2174,  2186,  2431,  2431,  2684,   932,  3927,  2212,   -30,
     -30,   -30,   -30, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
     150,  1323, -4431,  3355, 40717,  3921,  4053, -4431,  4160,  4187,
    3928,  3914, -4431, 82831,   -30,   350, 67327,  -231,   554,  3930,
    3932,  3933,  3936, -4431,  3940,  2223, -4431,  3941,  3942,  2348,
    3935, -4431, -4431,  3169,  2375,  1301,  2259,  4339,  4417, -4431,
    4255, -4431,  2396,  1161,  2403,  2411,  2436,  2448, -4431, -4431,
   -4431, -4431, -4431, -4431,  3947, -4431, -4431,  4638,  4305,   554,
   -4431, -4431,   313,   353, -4431,  2277,  4521,  4419, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, 53286,  4317,  4495,  4685,  3284,   146, 67327,
    4209,  4561, -4431, -4431, -4431,  4141, -4431, 67327, 18348, -4431,
   -4431,  2644, 67327, 41456,  3953,  3715, -4431,  3132, 53286,  1238,
   -4431,   169, -4431, -4431,  4455,  4457, -4431, -4431, 16059,  3958,
   16059,  3961, -4431, -4431,   282,   282, -4431,  1355, -4431, -4431,
     554,  1280, -4431,   554, 67327, -4431,  3916, -4431, -4431, -4431,
   -4431, -4431,  3400, -4431, -4431, -4431, 67327, -4431,  2008,  2282,
   -4431, -4431,  3959,  3957,   -30, -4431, -4431,  3555, -4431,  3555,
    2973, -4431,  4601, -4431, -4431, -4431,  4602, -4431,   434,   434,
    4675,   434, -4431,  4676,  4677,  1733, -4431, -4431,  4338,  4338,
   -4431,  2293,  4107, -4431,  4127,  2329, -4431, 67327,  2338,  2454,
    1164, 40717,  4358, -4431, -4431, -4431, -4431, -4431, -4431, 56981,
   -4431, -4431,  4624,  2352, -4431, -4431, -4431,  2354, -4431, -4431,
   -4431, -4431, -4431,  1625, -4431,  3970, -4431,   410, -4431, -4431,
   -4431, -4431, -4431,  3647,  3663,  3673,  2222,  2222, 16059, -4431,
   -4431, -4431, -4431,  4362,  4111, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, 55503, -4431,  4718,  4713, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431,  3972, -4431, -4431, 16059, -4431, -4431,  2197,
   -4431,  4127, -4431, -4431, -4431, -4431,   554,  4251,  4655, -4431,
   -4431,  4226,   -30,  4595,  2711,  4366, -4431, -4431,  1486, -4431,
   67327, -4431, 67327, 67327, -4431,   -30,  3981, -4431,  3994,   939,
   -4431, -4431, -4431,  1428,   210, -4431, -4431, -4431,  4512, -4431,
    4342, -4431,   385,  2361, -4431, -4431,   -30,   429, -4431, 67327,
    3468, -4431, -4431, -4431, -4431,  3984,  3995, -4431, 67327,  4554,
   -4431, -4431, -4431, -4431, -4431, -4431,  4376, -4431, -4431, -4431,
   16059, -4431, -4431, 16059, -4431, -4431,  4414,  4577, -4431, -4431,
   -4431, -4431, -4431, -4431,  4004,  1486, 16059,  4705,    -9, -4431,
   -4431,  3169, -4431, -4431, -4431,  1297, -4431,  4375, 53286, -4431,
    3136,  4209,  2630, -4431,  4499, 67327, -4431, -4431, -4431, -4431,
   -4431,  4002, -4431, -4431,  3132,  4192,   176, -4431, -4431, -4431,
     554, 67327,   554, 67327,  4571,  4571, -4431, -4431, 16059, -4431,
    4746,  4006, -4431, -4431, -4431, -4431,  4012,  4285, -4431, -4431,
    1144, -4431, -4431,  3555, -4431, -4431, -4431, -4431,   434, -4431,
     434,   434, -4431,  4496,  4496,   939,  2105,  3347, -4431,   210,
    2368, -4431,  1164,   467,   -30,  1053, -4431,  1164, -4431, -4431,
   -4431, -4431, -4431,  4014, -4431, -4431,   559,   434,   559, -4431,
   67327,  4452, -4431, -4431,  2456, -4431, -4431, -4431, -4431,  4017,
    2460, -4431, -4431,  2376, -4431, -4431, -4431, -4431, -4431,  4139,
   -4431,  4103, -4431, -4431, -4431, -4431, -4431, 67327, 67327,  4381,
     378,   939, -4431, -4431,  2453,   378,   210, -4431, -4431,  4732,
   -4431, -4431,  1164, -4431,  4289,  4308, -4431, -4431, -4431,  1660,
   82831,  4634,  4026, -4431,  2477, -4431, -4431, -4431,  4027,  4028,
   16059, -4431, -4431, -4431, -4431,  2906, -4431,  4685, -4431,  4150,
   -4431, -4431, -4431,  4179,  3529,  4031,  4034,  4039,  4042,  1674,
    4032,  4038, -4431,  4044, 67327, 21400,  4045,  4668,  1195, -4431,
   -4431, -4431, -4431, -4431, -4431, 51069, -4431, -4431, -4431,  4049,
    4231,  1053,  4670,  4672,  1053,  1053,  1053,  1053,  4051,  3347,
   -4431,  4652, -4431,  4094, 67327, -4431, -4431, -4431,  1486, -4431,
     467, -4431, -4431, -4431,  2455, -4431,  1170,  4434, -4431, 16059,
   -4431, -4431,  4278, -4431, 80629,  1904, -4431, -4431,  4056,  4059,
    2232, -4431, -4431, -4431, -4431, -4431,  2952,   378,  2117, -4431,
   82831, -4431, -4431,  3468,  4335, -4431, -4431, -4431,  3279,  2481,
    4340, 16059,  4131,  4147, -4431, -4431,  4133,  4135, -4431,  4174,
   -4431, 67327,  2554, 68805,  2883, -4431, -4431,  4781, -4431,  4784,
   66588, 66588, -4431, -4431,  3341, 67327,  1053,  4298, -4431, -4431,
    4077, -4431, -4431,   -23,   -30,  1053,  1053,  2952,  2952,  2884,
   67327,  4279, -4431, -4431,  1053, -4431, -4431, -4431, -4431, -4431,
   67327, -4431, -4431, -4431,   479, -4431,  2485, 16059,  4681,  4203,
   67327,  1499, -4431, 82107, 82107, 67327, -4431, -4431, -4431, -4431,
    6495, -4431, -4431,  1074, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  4806, -4431,  4075, -4431, -4431,
   -4431, -4431,  4775,  4456,  4778, -4431, 67327, -4431, -4431, -4431,
    4593,  3468,  3644, -4431,   235, 16059,  1566, -4431,  4824,  1715,
    1772, -4431,  4251, -4431,   227, -4431, -4431, -4431, 71761,  3835,
    4364,  4142,  2480, -4431, 82817, -4431, -4431, -4431,  4088,  2500,
    4295,  2513,  3095, -4431, -4431,  2525, -4431, 20637, -4431, -4431,
   -4431, -4431,   -30,   -30, -4431, -4431, -4431, -4431, 58459,  2534,
   -4431, 58459, -4431,  1273,  1273,   -63,   554, 16059, -4431, 16059,
    4216, -4431, -4431,  4654, 67327, -4431, -4431, -4431, -4431, 16059,
   -4431, 80629, 80629, -4431, -4431, -4431, -4431,  4820,  4468, -4431,
    4469,  4096,  4714, -4431, -4431, -4431, -4431,  4722, 80629, -4431,
   -4431, 58459, -4431,  4251, -4431,  2481, -4431, -4431,  4166,  4377,
   -4431,  4170, -4431,  2893, -4431, -4431,  2795,  4632,  4245,  1238,
   -4431, 68805,  4161,  3468, -4431, -4431,  2884, -4431,  4295,  4397,
   -4431,  4077, -4431,  2553, -4431,  3419, -4431, -4431,  3347, -4431,
    4279, -4431, -4431,  4858, -4431,  1309,  4487,  4490, -4431, -4431,
    3601,   554,   554, -4431,   149, -4431, -4431,  4623,  4716, 16059,
     554, 76934,  4110, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, 81368, 16059, -4431,  1074,
    4806, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, 80629,
    1796, -4431, -4431, -4431, -4431, -4431,  4825,  4240,   176, -4431,
   -4431,  4701, -4431, -4431, -4431, -4431, -4431, 20637, -4431, -4431,
   -4431, -4431, -4431,  4265,  4745, -4431,  4242, 16059, 80629, -4431,
    4723, -4431,  4650,   554,  4589,  4123, -4431,  4121,   554,  4763,
   82107, 82107, -4431,  3644, -4431, -4431,   434,  4657, -4431, -4431,
    4186, -4431,  1273,  1273, -4431,   334, -4431,   554, 77673,  4836,
   67327, -4431,  4316, -4431, -4431, 16059,  4749, 59198, 78412,  4132,
   -4431, -4431, -4431, 80629, -4431,  4524,  4137,  1238, -4431, -4431,
   16059, -4431,  4748,  4329, -4431,  4140, -4431, 80629,   554, 80629,
   -4431, -4431,  4690,  7841,  1867, -4431,  4145, -4431, -4431,   177,
   32582,  4406,  1215,   554,  4855, 80629, 67327, 74717,  4756, 79151,
    4719, 67327,  3468,  4720,  4721, -4431, -4431, -4431, -4431, -4431,
   58459,  2559, -4431, -4431, 67327, -4431,  1238, -4431, -4431, -4431,
    1296,  1296,  4534,  4341, -4431, 75456, -4431,  2758,  4462,  4283,
   -4431, -4431,  4795,  2215, -4431, -4431, -4431, 34062,  4158, -4431,
    1053,  2296, -4431,  4544, -4431,  4545,   154, 80629, 80629, -4431,
   -4431, -4431, -4431, 47374, 16059, -4431, -4431, -4431, -4431,  2292,
   -4431, 67327, 18348,  4762,  4227, -4431, -4431, 76195, 79890, -4431,
   -4431, -4431, 25923, -4431, -4431, -4431,  4731, -4431,   554, -4431,
   -4431, -4431, 47374, -4431, -4431, -4431
};

  /* YYDEFACT[STATE-NUM] -- Default reduction number in state STATE-NUM.
     Performed when YYTABLE does not specify something else to do.  Zero
     means the default is an error.  */
static const yytype_uint16 yydefact[] =
{
    1864,  2886,  1174,  2838,     0,     0,     0,     0,     0,     0,
    2840,  2886,   107,  1982,  1983,     0,  1807,     7,     0,  1174,
     360,     0,     0,   119,     0,  1821,     0,  2036,     0,     0,
    1174,     0,  2030,     0,     0,  1174,  1869,  2015,   337,     0,
    2840,     0,  1239,     0,  1899,  2700,     0,     0,     0,     0,
    1882,     0,  2697,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2701,     0,     0,     2,     8,    13,    42,     0,
      79,    62,    69,    31,    41,    39,    38,    36,    40,    37,
      30,    95,    86,    65,    25,    15,    20,    17,    27,    16,
      19,    23,    24,    22,    26,    21,     0,    66,    98,  1136,
      99,    33,    83,    28,    29,    32,    76,    82,    77,    78,
      91,  1205,  1202,  1729,  1204,  1217,  1225,  1226,  1227,  1865,
      45,    58,    49,    46,    48,    52,    51,    60,    61,    47,
      59,    56,    57,    50,    54,    55,    53,    71,    84,   103,
       0,    43,   100,    96,    44,    63,  1984,    64,    85,    80,
      73,   104,    74,    92,    94,    93,    75,   102,    97,    87,
      18,    68,    88,    67,    14,    35,    89,    90,    81,   105,
      72,   101,    70,    34,     0,  1007,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1805,     0,   948,  2884,  2885,
    2886,  1176,  1175,     0,  2840,  2133,  1161,     0,  2217,  2216,
    2219,  2221,  2222,  2223,  2224,  2225,  2226,  2169,  2228,  2229,
    2230,  2231,  2232,  2233,  2170,  2234,  2235,  2236,  2237,  2238,
    2239,  2171,  2172,  2241,  2242,  2243,  2244,  2245,  2173,  2174,
    2246,  2247,  2248,  2249,  2250,  2251,  2252,  2253,  2254,  2255,
    2176,  2256,  2177,  2257,  2258,  2260,  2261,  2291,  2262,  2263,
    2264,  2265,  2266,  2267,  2178,  2268,  2269,  2270,  2271,  2272,
    2273,  2274,  2275,  2276,  2179,  2277,  2278,  2280,  2282,  2283,
    2284,  2285,  2286,  2180,  2287,  2288,  2289,  2290,  2181,  2292,
    2294,  2295,  2296,  2298,  2297,  2299,  2300,  2207,  2301,  2302,
    2166,  2304,  2305,  2306,  2307,  2308,  2310,  2311,  2208,  2312,
    2313,  2314,  2315,  2182,  2183,  2317,  2318,  2319,  2320,  2326,
    2321,  2322,  2323,  2599,  2325,  2184,  2327,  2185,  2331,  2330,
    2332,  2129,  2333,  2130,  2334,  2186,  2336,  2337,  2338,  2339,
    2187,  2341,  2342,  2343,  2344,  2345,  2346,  2347,  2188,  2348,
    2349,  2350,  2351,  2352,  2353,  2600,  2355,  2356,  2357,  2358,
    2360,  2361,  2363,  2365,  2366,  2367,  2368,  2370,  2371,  2372,
    2382,  2373,  2374,  2375,  2377,  2376,  2378,  2379,  2380,  2383,
    2362,  2385,  2386,  2387,  2388,  2389,  2390,  2391,  2393,  2394,
    2395,  2396,  2397,  2398,  2399,  2400,  2401,  2402,  2403,  2404,
    2405,  2406,  2407,  2408,  2409,  2410,  2411,  2412,  2414,  2415,
    2416,  2417,  2209,  2189,  2419,  2421,  2422,  2424,  2427,  2428,
    2429,  2431,  2435,  2436,  2437,  2438,  2439,  2441,  2440,  2442,
    2445,  2447,  2448,  2446,  2449,  2450,  2451,  2190,  2191,  2453,
    2454,  2455,  2210,  2457,  2459,  2458,  2211,  2460,  2461,  2462,
    2464,  2465,  2466,  2467,  2468,  2470,  2471,  2472,  2473,  2474,
    2212,  2475,  2476,  2192,  2477,  2213,  2478,  2480,  2479,  2481,
    2483,  2484,  2482,  2193,  2487,  2489,  2490,  2492,  2493,  2495,
    2194,  2497,  2498,  2499,  2501,  2500,  2502,  2195,  2503,  2504,
    2509,  2510,  2511,  2512,  2603,  2513,  2514,  2168,  2196,  2515,
    2197,  2517,  2518,  2519,  2520,  2521,  2522,  2523,  2524,  2525,
    2526,  2527,  2528,  2530,  2531,  2198,  2532,  2533,  2534,  2535,
    2199,  2536,  2538,  2539,  2540,  2541,  2542,  2543,  2215,  2544,
    2545,  2546,  2547,  2548,  2549,  2550,  2551,  2552,  2553,  2554,
    2559,  2557,  2558,  2560,  2561,  2562,  2200,  2563,  2564,  2566,
    2567,  2568,  2569,  2201,  2202,  2570,  2571,  2572,  2573,  2574,
    2575,  2576,  2577,  2579,  2581,  2582,  2583,  2584,  2585,  2586,
    2587,  2588,  2203,  2589,  2590,  2591,  2601,  2496,  2220,  2340,
    2580,  2259,  2516,  2354,  2418,  2602,  2328,  2240,  2175,  2303,
    2316,  2420,  2434,  2452,  2488,  2556,  2565,  2413,  2432,  2444,
    2329,  2494,  2529,  2555,  2214,  2578,  2369,  2324,  2167,  2279,
    2281,  2433,  2469,  2218,  2335,  2227,  2392,  2430,  2507,  2505,
    2506,  2508,  2491,  2426,  2293,  2425,  2364,  2463,  2359,  2384,
    2456,  2381,  2485,  2443,  2309,  2486,  2537,  2423,   291,  2140,
     273,  2141,  2162,  2163,  2164,  2161,  2165,     0,     0,  2689,
    2688,     0,     0,  2841,  2842,   618,     0,     0,     0,     0,
       0,     0,  1808,     0,   891,   618,   618,     0,     0,     0,
     211,  2869,  2869,  2886,  2888,  2890,  2219,  2169,  2232,     0,
    2102,     0,     0,     0,  1581,     0,  2173,     0,  2250,  2252,
       0,     0,  1267,  1267,   778,     0,     0,     0,  2275,  2276,
    2108,     0,     0,     0,  2099,  2109,  2317,  2321,  2323,     0,
    2101,  2332,     0,     0,     0,     0,  2352,  2106,     0,     0,
    2396,  2398,     0,     0,  2402,  2403,  2404,  2405,  2085,  1326,
       0,   778,  2098,  2105,  2091,  2449,  2450,     0,  2460,     0,
       0,  2495,     0,     0,  2500,  2509,     0,     0,  2540,     0,
       0,   778,  2084,  2559,  2557,  2558,  2560,     0,  2100,  2200,
    2107,     0,  2573,  1267,   778,   778,     0,     0,     0,  2583,
    2584,  2591,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1259,     0,
       0,     0,  1325,     0,  1406,  2860,  1783,  1258,  1262,  1279,
    1284,  1301,     0,  1318,  1337,  1338,  1340,  1442,  1339,  1345,
    1463,  1346,  1464,  1344,  2095,  1343,  1342,  2096,  2097,  1260,
    1336,  2120,  2140,  2119,  1352,  2858,  1805,  1805,  1805,     0,
       0,  1805,  1805,     0,     0,  1805,     0,  1805,  1805,  1805,
       0,     0,   112,  1990,   361,   362,     0,  2737,  2750,  2751,
    2747,  2752,  2770,  2753,  2757,     0,  2749,  2818,  2153,     0,
    2756,     0,  2818,  2754,     0,  2818,     0,  2755,  2760,  2771,
    2818,  2748,  2142,  2152,  2151,  2818,  2593,  2592,  2143,  2594,
       0,  2739,     0,  2125,     0,     0,  1823,  1824,  1822,  1094,
       0,     0,  2037,  2038,     0,  2041,     0,  2042,  2045,     0,
    2685,     0,     0,     0,     0,     0,  1177,     0,  1826,  1870,
    1827,  1825,  1805,     0,   327,   336,   338,   339,   335,  2737,
       0,     0,  2842,  2853,  2868,  2863,  2862,  2865,  2866,  2867,
    1244,  2864,  2861,     0,  1240,  1242,  1243,   828,     0,     0,
    2634,  2637,  2408,  2442,  2638,  2561,  2635,  2496,  2636,  2214,
       0,     0,  2146,  2661,  2596,  2597,  2598,  2595,  2147,  2604,
       0,  2628,     0,  1959,   339,  1106,  1130,  1114,  1107,  1130,
    1238,  2125,  1883,     0,     0,     0,  2699,     0,  2039,     0,
    1237,  1846,     0,  1706,  1709,  1711,  2934,     0,     0,     0,
    2929,     0,  2935,     0,     0,  2119,     0,     0,     0,     0,
       0,  2859,     0,     0,     0,     0,     0,     0,     1,    10,
       0,     0,  1267,  2150,  2573,     0,  2149,  2148,  2154,  2156,
    2795,  2816,  2822,     0,  1108,  1122,     0,     0,     0,  1203,
    1246,  1207,     0,  2855,  1738,  1730,     0,  2855,  1738,  1214,
    1729,  1216,  1876,  1869,  1986,  2317,  1864,  1987,     0,   940,
    1008,     0,   944,     0,     0,  2702,     0,   942,     0,  1953,
    1015,     0,     0,   969,     0,     0,  2895,   946,     0,  2839,
       0,  1187,  1198,  1573,   290,     0,   121,   123,  1144,  1801,
    1163,     0,  2845,     0,     0,     0,     0,  2891,     0,     0,
       0,   473,     0,     0,     0,     0,     0,   618,  2895,  2895,
    2869,  2889,     0,     0,  1699,  1359,  1699,  1699,  1699,  1582,
       0,     0,     0,     0,     0,     0,     0,  1699,     0,  1400,
    1373,     0,  1401,     0,     0,     0,  2110,     0,     0,     0,
    1356,     0,     0,  1573,     0,  1550,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1577,  1579,  2119,  1699,     0,
       0,  1699,     0,     0,     0,     0,     0,  1272,   824,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1699,  1699,     0,     0,  1699,  1414,  2112,     0,     0,     0,
    2111,     0,     0,     0,  2104,  2103,  2086,     0,  1417,  1419,
    1418,     0,  1699,  1699,     0,     0,     0,  1699,  1699,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1349,  1348,  1350,     0,     0,  2860,     0,  2643,  1546,
    1548,     0,     0,  1322,  1321,     0,  1320,  1319,  2139,     0,
    1261,     0,     0,  1266,  1265,  1327,  1328,  1329,  1330,     0,
    1331,  1332,  1333,     0,     0,     0,     0,     0,     0,  1324,
    1323,     0,     0,     0,     0,  1303,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1351,     0,     0,  2134,  2087,
       0,     0,  1458,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1809,     0,     0,     0,     0,     0,     0,  1805,
     114,     0,     0,  2738,  2730,  2768,  2767,  2772,     0,  2769,
    2765,  2773,  2774,  2758,     0,  2744,  2762,     0,  2746,  2764,
    2763,  2743,  2759,  2766,  2745,     0,  2741,  2733,     0,     0,
    1695,  2707,     0,     0,   120,     0,  1095,  1827,     0,  2948,
    2945,  2035,     0,  2046,  2047,  2043,     0,     0,     0,     0,
    1952,  1951,     0,  2031,  2854,  1179,     0,     0,     0,  1828,
       0,     0,  2017,  2024,  2022,  2016,  2019,   328,     0,     0,
     358,  2724,     0,     0,  2733,  2848,  2845,  1230,  1241,   827,
       0,     0,   830,  2660,  1847,  1848,   839,     0,   829,     0,
       0,     0,     0,     0,  2606,  2670,  2667,  2666,  2619,  2614,
    2613,  2158,  2791,  2612,     0,  2647,     0,   834,   836,   835,
    2657,   833,     0,     0,  2561,  2607,  2628,     0,     0,  2605,
       0,     0,   828,  1971,     0,     0,  1971,     0,  1738,  1955,
    1960,  1958,     0,  2640,  1931,  2641,  1951,     0,  1907,  1930,
       0,  1884,  1923,     0,  2642,     0,  1954,     0,  1738,  1971,
    1900,     0,     0,     0,     0,     0,     0,   334,  1135,  1134,
    1110,  1131,  1132,     0,     0,  1113,  1115,  1116,   201,  1881,
    2946,  2947,  2698,  1853,     0,  1707,     0,     0,     0,  2090,
    2089,  2931,  2088,  2939,  2941,  2925,     0,  2928,  2927,  2936,
       3,     0,     0,   559,     4,     6,     0,     0,  1206,  1223,
       0,  1222,    11,   106,  2157,     0,     0,     0,     0,     0,
       0,     0,  2813,     0,     0,   990,     0,     0,     0,     0,
       0,  1142,     0,  1138,  1137,     0,  1111,  1124,  1251,  1250,
    1253,  2287,     0,     0,  1782,  1776,  1779,  1778,     0,  1245,
    1209,  1208,     0,  2857,  2856,     0,  1210,  1739,  1747,  1748,
    1746,  1740,  1741,  1745,  1744,     0,  1212,  1738,  1738,  1215,
    1880,  1879,  1878,     0,  1876,  1094,     0,     0,  1976,  1977,
    1978,  1979,  1980,  1975,  1974,  1988,  1989,  2893,  2894,  2892,
     841,  2887,   274,  2704,     0,     0,   274,     0,     0,  1849,
    1849,     0,  1849,  1849,   539,     0,   538,   624,   493,   495,
     496,   497,   498,   499,   500,     0,  1092,  1849,  1092,     0,
    1849,  1849,  1092,  1849,     0,     0,  1849,  1849,  1849,  1849,
       0,     0,   842,  1849,     0,     0,  1092,     0,  1849,     0,
    1076,     0,     0,  1849,  1849,  1849,  1849,  1849,  1092,     0,
       0,  1849,  1849,     0,  1102,     0,     0,  1849,  1849,  1849,
    1849,     0,  1849,  1849,     0,  1849,     0,     0,  1849,  1037,
    1038,  1048,   620,   647,   648,     0,   938,   939,  1009,  1011,
    1080,  1017,  1016,  1045,  1050,  1078,  1079,     0,  1806,  2960,
     950,     0,     0,   949,  2895,  1158,     0,     0,   884,   883,
       0,     0,  1198,  1189,  1575,     0,  1574,   272,     0,     0,
    1146,  1145,     0,  1143,  1171,  1170,  1168,     0,  1169,  1167,
    1162,  1164,  1165,  2844,     0,     0,  2846,  2850,     0,   209,
       0,     0,     0,     0,     0,   618,     0,   475,     0,  2803,
    2814,   224,   207,     0,   915,     0,     0,   618,     0,     0,
       0,  2883,  2871,  2878,  2879,  2882,  2881,  2880,     0,  2877,
    2870,  2873,  2874,  2876,  2875,  2895,     0,     0,  1700,  1699,
       0,     0,     0,     0,     0,     0,  1583,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1268,     0,   779,  1424,
       0,     0,     0,     0,     0,  1671,  1672,  1673,  1674,  1682,
    1675,  1676,  1677,  1684,  1689,  1678,  1679,  1685,  1686,  1687,
    1680,  1688,  1683,  1681,  1690,     0,  1670,     0,     0,  1694,
    1691,  1693,  1692,     0,  1551,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1699,     0,     0,
       0,  1699,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1434,     0,     0,
       0,     0,     0,  1699,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1396,     0,  2122,  2121,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1497,
       0,  1497,     0,     0,     0,     0,     0,     0,  1353,     0,
       0,     0,     0,     0,     0,     0,  1257,  1264,  1263,  1270,
    1269,  1271,  1275,  1280,  1273,  1277,     0,  1334,  2226,  1282,
       0,     0,  1315,     0,  1285,  1295,  1316,  1299,  1306,  1307,
       0,  1302,     0,  1304,  1305,     0,  1309,     0,  1308,  1312,
    1313,  1314,  1317,     0,     0,     0,     0,  1341,  1347,  1367,
    1368,  1262,     0,  1459,  1460,  2115,  2123,  1786,  1793,  1788,
       0,  1809,  1790,  1798,  1805,  1813,  1814,  1795,   624,  1811,
    1794,   501,  2789,  1791,  1096,  1800,  2973,     0,     0,   113,
       0,     0,     0,     0,  2007,  2009,  2012,  2008,     0,  2011,
       0,  2010,  1991,  1994,  2000,  2013,     0,     0,   359,   363,
     365,     0,   368,     0,  2761,  2820,     0,     0,  2742,  2735,
    2736,  2734,     0,  2775,  2740,  1696,     0,  2706,  2314,  2416,
       0,  1701,  2126,  2950,     0,     0,     0,     0,  2044,     0,
    2687,  1695,  2686,  2690,  1173,     0,   109,   110,     0,     0,
       0,  1178,  1182,     0,  1148,  1611,  2021,  2028,  2026,     0,
     326,   351,   346,   354,   348,   350,   349,   355,   356,   357,
     352,   347,   353,   340,     0,     0,     0,     0,  2722,     0,
    2849,     0,  2851,     0,  1701,  1231,  1230,     0,     0,     0,
    2663,     0,  2659,  2658,     0,   966,  2136,   966,     0,  2672,
    2673,     0,  2664,     0,  2665,     0,  2618,     0,     0,  2621,
       0,     0,     0,     0,     0,     0,     0,  2662,  2627,  2626,
       0,  2629,  2630,     0,  2633,  2681,  2682,  2679,  2680,  2683,
    2684,  2678,  2654,  1967,     0,     0,  1973,  1929,     0,   618,
       0,     0,     0,     0,     0,     0,     0,  1901,     0,     0,
    1922,  1965,  1966,  1971,     0,  1964,     0,  1971,     0,  1937,
    1955,     0,  1971,  1896,     0,     0,  1888,  1893,  1889,     0,
    1895,  1894,  1897,  1885,  1886,  1967,  1912,   201,  1955,  1921,
    1928,  1911,  1918,  1926,  1955,   889,   888,   887,     0,     0,
    1955,  1971,  1971,     0,  1119,  1120,     0,     0,     0,  1109,
    1858,  1857,     0,  1854,  1856,  1845,  1708,     0,  1713,     0,
       0,     0,  2926,  2942,  2924,  2930,  2937,  2938,  2923,  2123,
       0,   560,     0,     0,   563,     0,     0,  1849,  1224,    12,
       9,   998,     0,     0,  2155,     0,     0,     0,     0,     0,
       0,  2826,  2824,     0,  2825,  2823,  2780,  2795,  2817,     0,
     970,     0,     0,     0,     0,     0,     0,     0,     0,   201,
       0,  1126,     0,     0,  1256,  1253,  1247,  1254,  2135,  1781,
     831,  1777,     0,     0,  1734,  1731,  1733,  1220,  1218,     0,
       0,  1221,  1219,  1211,  1213,     0,     0,  1803,  1874,  1877,
       0,  1985,     0,   841,   613,   616,   615,   617,     0,   945,
       0,     0,     0,   943,     0,     0,   491,  1850,     0,     0,
     491,     0,     0,     0,   625,  1953,  1849,  1093,   932,   885,
    1174,   885,  1054,     0,   932,     0,     0,     0,     0,     0,
       0,  1174,     0,     0,     0,     0,     0,  1174,     0,     0,
       0,     0,     0,  1849,     0,  1063,     0,  1019,     0,     0,
       0,     0,     0,     0,     0,  1064,     0,     0,     0,  1020,
    1849,     0,     0,     0,     0,     0,     0,  1174,     0,     0,
       0,  1174,  1105,     0,  1104,  1103,     0,     0,  1174,  1174,
       0,     0,     0,     0,   653,   654,     0,     0,     0,     0,
    1041,  1042,     0,   621,  1849,  1849,     0,  1013,  1010,   841,
     841,     0,  1849,  2968,   999,     0,     0,   947,     0,     0,
    1155,  1191,  1185,  1190,  1188,  1198,     0,  1661,     0,   292,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   201,   153,   185,     0,     0,     0,     0,     0,     0,
       0,   201,   125,  1802,  1172,  1166,  2843,  2847,   619,   841,
       0,     0,     0,     0,     0,     0,   474,     0,   477,     0,
       0,     0,     0,  2822,  1849,     0,     0,     0,   916,   841,
       0,     0,     0,   273,  2918,     0,  2872,     0,  1420,     0,
    1508,  1558,  1508,  1508,  1508,     0,     0,     0,     0,     0,
    1421,     0,  1371,  1422,  1423,     0,     0,     0,  1508,     0,
     780,     0,     0,  1374,  1375,  1364,     0,     0,  1443,     0,
    1554,  1376,     0,     0,     0,     0,     0,  1444,  1578,     0,
    1580,  2123,     0,  1508,  1428,  1381,     0,  1508,     0,  1382,
    1445,  1446,  1447,     0,  1449,     0,  1430,     0,     0,  1433,
       0,     0,  1384,  1508,  1508,     0,     0,     0,     0,  1508,
    1386,     0,     0,     0,  1385,     0,     0,     0,     0,     0,
       0,     0,  1388,     0,  1365,  1508,  1508,  1436,     0,     0,
    1438,     0,  1397,  1699,  1508,  1545,     0,  1489,  1488,  1502,
       0,     0,  1502,     0,     0,     0,  1490,  1487,  1486,     0,
    2644,  2645,  2646,   934,  1547,  1357,  1276,  1281,  1274,  1278,
    1283,     0,     0,     0,  1294,     0,     0,     0,     0,     0,
    1286,  1297,  1300,  1462,  1450,     0,  1573,     0,     0,  1081,
    1797,     0,  1953,  1796,   502,   503,   505,     0,  1098,  1097,
    1792,  2974,  1789,  1096,     0,   115,   117,  2005,  2002,  2001,
    2003,   201,  2004,     0,  2014,  1992,  2275,  2559,  2560,   372,
       0,   344,   343,   345,   369,     0,     0,  2733,  2819,     0,
       0,  2784,  2787,     0,     0,     0,  2728,  1698,  2717,  2713,
    2718,  2720,  2716,  2719,  2721,  2714,  2715,  1701,     0,  1738,
    1702,  1611,  2944,  2949,  1193,  1194,  1198,     0,     0,     0,
     111,     0,     0,  2032,     0,  1180,     0,     0,  1153,  1152,
    1154,  1147,  1149,  1150,     0,     0,  1612,     0,  2025,  2027,
     201,  2018,     0,     0,     0,  2733,     0,     0,  2852,  1233,
       0,     0,     0,     0,  1232,  1234,  1235,  1588,  1587,  1618,
    1615,  1614,  1617,  1616,  1619,  1611,  1695,  1720,  1701,     0,
       0,     0,   838,   840,   837,     0,     0,     0,  2793,  2793,
       0,     0,  2677,  2669,  2671,  2668,  2620,  2159,  2792,     0,
    2650,  2651,  2652,  2648,  2649,     0,  2655,  2653,     0,  2632,
       0,  1969,  1972,  1703,     0,     0,  1946,  1940,  1939,  1935,
    1941,  1947,  1936,  1950,  1949,  1948,  1909,  1908,  1904,  1956,
    1945,  1943,  1932,  1971,  1944,  1942,  1890,  1891,  1892,     0,
    1738,     0,  1969,  1938,  1971,  1971,     0,     0,  1971,  1925,
    1927,  1133,  1118,  1117,     0,  1852,     0,  1712,     0,  1710,
    2932,  2940,     0,     0,     0,     0,     0,     0,     0,     0,
     565,     0,   561,     0,     0,   962,   966,     0,   963,   964,
     965,  2796,  2136,     0,  2793,  2809,  2783,  2782,  2781,  2778,
       0,     0,     0,     0,     0,   991,   993,     0,     0,     0,
       0,   959,   971,   972,   197,  2131,  1765,  1766,  1764,  1762,
    1763,   198,   199,  1755,  1756,  1752,  1753,  1751,  1754,   200,
    1141,  1140,  1139,  1123,  1112,     0,     0,  1128,  1252,  1255,
    1248,     0,  2052,  1775,  1249,  1736,  1737,  2117,  1735,     0,
    1743,  1742,     0,  1695,  2125,     0,     0,     0,  2127,     0,
    1773,  1774,  1758,  1759,  1757,  1760,  1981,  1761,  1772,   614,
    1849,     0,     0,     0,     0,     0,     0,     0,   275,   284,
       0,  2703,     0,   517,     0,     0,     0,     0,     0,     0,
       0,     0,   229,   524,   953,   624,  1768,  1770,  1767,  1769,
     529,   541,  1771,   542,   540,   954,   528,   530,   955,   494,
       0,   690,   933,   886,   932,  1021,   932,     0,     0,     0,
     885,   693,   932,     0,   912,   933,   689,     0,  1087,  1086,
    1088,   691,   691,     0,     0,     0,   636,   631,     0,   642,
    1043,  1163,  1044,  1668,     0,   633,   634,   635,   655,     0,
       0,   644,     0,  1061,  1062,     0,  1024,  1059,  1060,  1096,
     626,     0,     0,     0,   669,   670,   668,   649,   656,  1090,
    1089,  1091,   629,   630,     0,     0,  1077,  1727,  1734,   658,
     637,   657,   632,     0,     0,     0,  1071,  1032,     0,   667,
     665,   662,   664,   663,   666,   645,   638,   639,   641,   640,
     652,   643,  1031,  2013,   627,   628,     0,     0,  1014,  1092,
    1092,  1049,  1046,  1047,  1012,  1018,  1051,   525,   526,   501,
       0,  1849,  2970,     0,  1001,  1003,  2896,  2897,  1711,     0,
       0,     0,  1664,     0,  1665,  1662,  1663,     0,  1576,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     122,     0,     0,     0,     0,     0,     0,     0,     0,   124,
     210,   841,     0,   506,     0,     0,     0,   219,     0,  1849,
    1849,  1849,  1849,   214,   624,   479,   481,   482,   483,   484,
     485,   488,   486,   489,   487,   490,   501,     0,     0,     0,
    2815,   990,     0,   921,   923,   922,   918,   917,     0,     0,
    2051,     0,  2050,   689,   204,   544,   546,   549,   547,   624,
     622,  1838,  1840,   551,     0,     0,   238,  2913,     0,     0,
     469,   468,     0,     0,     0,  1508,  1465,  1509,  1467,  1468,
    1471,     0,  1584,     0,  1361,   792,   792,   776,  1566,   772,
     764,   770,  1570,     0,   748,   762,  1562,   776,  1564,   792,
    1571,  1369,     0,     0,     0,  1508,  1473,  1508,     0,     0,
       0,     0,     0,     0,  1552,     0,     0,     0,  1366,     0,
    1454,  1508,  1477,  1508,  1475,     0,     0,     0,     0,     0,
       0,     0,  1481,  1479,     0,     0,     0,     0,  1508,  1483,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1480,  1482,     0,     0,     0,     0,     0,  1469,  1516,
    1510,  1511,  1512,  1513,     0,     0,     0,  1500,  1500,  1502,
       0,  1502,     0,  1491,  1354,     0,  1549,  1292,  1287,     0,
    1296,     0,  1311,  1310,     0,     0,     0,  1461,     0,  2116,
    2124,  1787,  1785,  1083,  1082,  1799,  1812,  1953,  2790,  1784,
     118,     0,  2006,  1999,  1995,     0,   364,   373,   366,   370,
     371,   367,     0,  2821,  2829,     0,     0,     0,     0,  1738,
       0,  2708,     0,     0,  1198,  1200,  2048,     0,  2693,  2694,
    2692,  2691,  2034,  2033,     0,  1183,  1184,  1151,     0,     0,
    1842,  1841,     0,  1818,  1820,  1829,  1832,     0,  2029,  2023,
       0,   341,     0,     0,  2727,     0,     0,  1695,     0,  1588,
    1618,  1615,  1614,  1617,     0,     0,     0,     0,  1601,  1609,
    1607,  1609,  1604,     0,     0,     0,  1695,  1711,     0,  1704,
    1720,  2617,  2616,  2615,   966,   966,   967,     0,  2609,  2608,
    2675,  2674,  2676,  2623,   624,  2622,     0,  2631,  1968,     0,
    1913,     0,  1934,     0,  1906,     0,  1924,  1887,  1915,  1905,
    1903,  1955,  1955,  1902,   202,  1855,  1714,     0,  2943,     5,
       0,     0,     0,     0,   564,     0,   574,     0,     0,     0,
       0,  2951,  2793,   966,     0,  2793,  2806,     0,     0,  2779,
     996,   994,   995,   997,   992,   975,   974,   976,     0,     0,
       0,   989,   988,   987,   973,  1125,     0,     0,  1121,   832,
       0,  2060,  1732,     0,  1611,     0,  1701,  1804,  1875,  1874,
       0,     0,   278,   281,   279,     0,   280,     0,     0,     0,
     527,   952,   624,   519,   521,   522,   523,   233,   232,   234,
     235,   237,   236,   231,   958,     0,   536,     0,     0,     0,
       0,     0,   932,   881,   882,   692,     0,   687,   694,     0,
       0,     0,     0,     0,   675,   677,   678,     0,   761,   715,
     706,   792,   709,   708,   849,   776,   720,   767,     0,   769,
     766,   741,   740,   757,   739,   744,   728,   849,   849,   727,
     760,   849,   745,   743,   747,     0,   748,   768,   753,   742,
     746,   738,     0,   759,   792,   776,   776,   724,   758,   849,
       0,   751,   792,   680,   796,   726,   856,     0,     0,   792,
     794,   772,  1069,  1070,   920,   919,  1068,     0,     0,  1027,
       0,  1028,     0,  1030,   839,   839,   650,  1035,  1058,  1057,
       0,  1036,   651,  1099,  1026,     0,  1728,  1025,     0,     0,
       0,  1148,     0,   660,   659,   957,  2964,  2961,  2962,     0,
    2972,  2971,  2973,     0,     0,     0,   243,  2898,     0,     0,
    1197,  1199,     0,  1186,   186,   181,   157,   161,   163,   155,
     159,   160,   162,   166,   167,   165,   169,   170,   173,   174,
     171,   164,   172,   158,   177,   175,   176,   156,   179,   180,
     191,   182,   190,   196,   168,   195,   183,   193,   192,   194,
     184,   154,     0,   127,   128,     0,   129,   130,     0,   131,
     132,     0,   133,   126,     0,  1849,  1849,   213,   624,   508,
     510,   511,   512,   513,   516,   514,   515,   219,     0,     0,
     218,     0,     0,     0,     0,     0,  1953,   215,     0,  2797,
    2799,   225,   970,  2958,  2959,  2960,     0,   550,   205,     0,
       0,   545,   543,   841,  1839,   548,     0,     0,   293,   673,
     674,   672,   671,     0,  2919,   472,   470,   471,     0,     0,
    1398,  1466,  1585,     0,     0,   793,  1559,   849,     0,  1568,
       0,  1569,   774,   773,   765,   763,  1572,   771,   749,  1563,
    1567,  1565,  1561,  1370,     0,  1372,  1363,  1362,  1474,  1472,
       0,     0,  1404,  1426,     0,  1405,     0,     0,     0,     0,
       0,  1378,     0,  1380,     0,     0,  1456,  1478,  1476,  1429,
    1448,  1407,  1431,     0,  1383,  1355,     0,  1408,     0,  1413,
    1411,     0,  1484,  1387,     0,     0,  1394,     0,  1392,     0,
    1393,     0,  1395,  1435,  1437,     0,     0,     0,     0,  1508,
    1517,     0,  1518,  1504,  1503,  1494,     0,  1499,  1498,     0,
    1495,     0,  1505,   935,     0,  1291,  1293,  1289,     0,  1298,
    1451,  1085,  1084,   504,   116,  1997,     0,  1993,     0,     0,
       0,     0,  2732,  2786,  2785,  2788,  2827,  2776,  2709,     0,
       0,  1859,  1861,  1195,  1198,  1200,     0,  1196,     0,  2049,
    2695,  2696,  1181,     0,  1667,  1819,  1867,     0,     0,     0,
    1836,  2114,  2113,  2121,  1853,  1837,  1844,     0,     0,     0,
    2723,     0,  1711,     0,  1626,  1620,  1622,  1623,  1625,     0,
       0,  1588,  1587,  1236,  1603,  1602,  1610,     0,  1608,  1609,
    1609,     0,     0,  1597,  1596,     0,  1658,  1627,     0,     0,
    1715,  1704,  2793,  2793,     0,     0,  2656,  1970,  1738,  1920,
    1919,  1933,  1898,  1738,  1701,  1971,  2933,     0,   570,   557,
       0,   555,   559,     0,   552,     0,     0,   568,     0,   961,
    2793,  2793,     0,  2807,  2138,  2137,  2793,     0,  2793,   979,
       0,   978,   984,   981,   980,     0,  1127,     0,     0,     0,
       0,     0,  2053,  2055,     0,  1780,  1701,  1701,  2126,  1872,
       0,  2128,  1701,   661,   283,   282,   288,   289,  2705,  1953,
     230,     0,  1023,     0,     0,   576,     0,     0,     0,   695,
       0,     0,   930,     0,   929,  1734,   913,   914,  1053,   689,
     680,   714,   707,   725,   843,   854,   852,   846,   750,   849,
       0,   850,   851,   711,   723,     0,   734,     0,   729,   849,
     737,   733,   749,   752,   754,   756,     0,   849,   722,   721,
     731,   718,   781,     0,  1099,   681,   806,     0,     0,     0,
       0,  1323,   800,     0,   861,     0,     0,   809,     0,     0,
     817,   696,   797,   799,   698,     0,     0,   857,   856,   713,
     849,   856,   781,     0,   795,   781,   781,  1067,     0,  1099,
    1669,  1075,  1074,     0,     0,  1101,  1056,  1726,  1073,  1072,
       0,  1029,   646,     0,     0,  2966,     0,  2969,   968,     0,
     253,     0,     0,  1000,     0,   246,   244,   255,     0,  1160,
    1156,  1666,     0,   187,   189,   134,     0,   136,   138,   143,
       0,   145,  2160,     0,   148,     0,   150,  2132,   152,     0,
     139,     0,     0,     0,     0,  1953,   217,     0,     0,     0,
       0,     0,     0,   476,   535,   531,   537,   534,   480,  2798,
       0,     0,   212,  2968,     0,     0,   841,   623,     0,     0,
       0,   294,   296,     0,     0,   303,     0,     0,  1586,     0,
       0,     0,     0,  1560,     0,     0,  1360,     0,     0,     0,
    1555,  1557,  1553,  1508,     0,     0,     0,     0,     0,  1358,
       0,  1452,     0,     0,     0,     0,     0,     0,  1391,  1389,
    1390,   858,  1440,  1439,     0,  1470,  1514,     0,  1520,  1501,
    1493,  1492,     0,  1502,  1288,     0,     0,     0,   381,   376,
     384,   378,   380,   379,   385,   386,   387,   388,   382,   377,
     383,   375,   374,     0,     0,     0,  2836,  1701,  1859,     0,
    1861,     0,  1817,  1192,  1201,     0,  1613,     0,     0,  1830,
    1833,     0,     0,     0,     0,     0,   342,  2726,     0,     0,
    1628,  1236,  1589,  1605,     0,     0,  1598,  1606,     0,     0,
       0,     0,  1652,  1653,     0,     0,  1656,  1659,  1660,  1624,
    2118,  1724,  1723,  1705,     0,  1229,  1715,  2611,  2610,  2794,
    2624,  1914,   201,  1917,  1910,   558,     0,   556,     0,     0,
     554,   562,     0,   569,     0,   960,  2804,  2793,  2810,  2793,
       0,  2811,     0,   985,   986,   983,     0,  1129,     0,     0,
       0,     0,  2054,     0,     0,  2061,  2063,  1873,  1729,  1729,
     520,     0,   579,  1022,     0,     0,   688,     0,     0,     0,
     903,     0,     0,   926,   676,   679,   845,   844,   848,     0,
     847,   710,   856,     0,   936,   730,   755,     0,   732,   785,
     786,   787,   719,   782,   784,   863,  1052,   812,   818,   820,
     819,   813,   811,     0,     0,     0,     0,     0,     0,   825,
     803,   826,  2092,     0,     0,   821,   822,   823,   814,   810,
     815,   816,     0,   798,     0,     0,   808,   801,   802,   712,
     716,   717,   703,     0,   704,   705,     0,  1065,  1055,  1039,
    1100,     0,  2965,  2963,  2967,   254,   242,     0,     0,  1002,
    1004,     0,     0,  1005,     0,     0,  1159,   178,     0,   135,
       0,   144,     0,     0,   149,     0,     0,   140,     0,   892,
     533,   532,   509,     0,   898,   220,   221,   223,     0,  2800,
       0,  2801,  2970,     0,   206,   203,     0,     0,  2914,     0,
     839,  2912,   306,   304,   305,     0,   299,   301,     0,     0,
    1399,   790,   788,   791,   789,   777,     0,  1402,  1403,  1427,
       0,  1485,  1425,     0,  1379,  1453,     0,     0,  1432,  1409,
    1412,  1410,  1415,  1416,     0,     0,     0,     0,  1522,  1506,
    1507,     0,  1290,  1998,  1996,  2827,  2830,     0,     0,  2729,
    1738,  1861,  1711,  1815,     0,     0,  1866,  1868,  1831,  1834,
    1835,  2123,  1851,  1843,  2725,     0,     0,  1621,  1600,  1599,
    1592,     0,  1594,     0,  1648,  1648,  1657,  1725,     0,  1721,
       0,  1716,  1717,  1228,  1916,   571,     0,   561,   575,   553,
    2955,  2808,  2812,  2793,   977,   982,  2058,  2059,     0,  2056,
       0,     0,  2062,  1749,  1749,   892,     0,   599,   577,   898,
       0,   925,   903,  1734,     0,  1849,   682,   904,   905,   907,
     908,   911,   928,     0,   855,   853,   849,     0,   849,   783,
       0,   867,  2094,  2093,     0,   805,   807,   812,   699,     0,
       0,  1034,  1040,     0,   240,   245,   256,   257,   951,  2901,
    2899,     0,   188,   137,   146,   147,   151,     0,     0,     0,
    1081,   893,   894,   896,     0,  1081,   899,   900,   902,     0,
    2802,   208,   903,  2911,   251,     0,   295,   297,  2920,   303,
       0,     0,     0,  1556,     0,  1455,  1457,   859,     0,  1519,
       0,  1543,  1542,  1544,  1515,     0,  1496,  2836,  2828,  2831,
    2710,  1816,  1860,     0,  1611,     0,     0,     0,     0,     0,
       0,     0,  1722,     0,     0,     0,     0,     0,     0,  2952,
    2953,  2805,  2057,  2065,  2064,     0,  1871,  1863,   683,     0,
       0,  1849,     0,     0,  1849,  1849,  1849,  1849,   594,   600,
     602,     0,   684,     0,     0,   685,   931,   910,     0,   906,
    1734,   735,   937,   736,     0,   866,     0,   871,   804,     0,
    1066,  1033,   247,  1006,   408,     0,  2900,  1157,     0,     0,
       0,   227,   895,   216,   228,   901,     0,  1081,   243,   252,
       0,   276,   300,   839,     0,   775,  1377,  1441,  1521,     0,
       0,     0,     0,  1537,  1524,  1525,     0,     0,  2731,     0,
    2837,     0,   831,     0,  1695,  1593,  1595,     0,  1649,     0,
    1661,     0,  1719,  1718,     0,     0,  1849,     0,  2956,  1750,
     588,   581,   584,     0,     0,  1849,  1849,     0,     0,     0,
       0,     0,   578,   601,  1849,   686,   924,   909,   927,   864,
       0,   868,   869,   870,     0,   862,     0,     0,   249,   434,
    2249,   420,   406,     0,     0,  2429,   410,   258,   261,   259,
    1864,   260,   266,     0,   267,   268,   269,   270,   271,   262,
     432,   433,   265,   263,   264,     0,  2144,     0,  2145,  2205,
    2204,  2206,     0,     0,     0,   141,     0,   897,   222,   226,
     255,   839,  2921,   302,  2907,     0,     0,  1532,     0,     0,
       0,  1530,     0,  1526,     0,  1523,  1528,  1527,     0,  1862,
    2066,  2413,     0,  1631,     0,  1629,  1651,  1650,     0,     0,
     572,     0,     0,  2957,   588,     0,   586,     0,   582,   580,
     583,   610,     0,     0,   606,   607,   605,   603,     0,     0,
     596,     0,   865,     0,     0,   700,   248,     0,   241,     0,
       0,   419,   422,     0,     0,   425,   415,   414,   416,     0,
     409,   408,   408,   462,   413,   459,   458,   451,     0,  2902,
       0,     0,     0,  2915,   286,   285,   277,     0,   408,  2905,
    2906,     0,  2909,     0,  1533,     0,  1535,  1534,     0,     0,
    1539,     0,  1540,  2619,  2835,  2834,  2832,     0,  2052,     0,
    1630,     0,     0,   839,  1655,  1654,     0,   566,   572,  2955,
     585,     0,   592,     0,   590,   593,   608,   609,   599,   595,
       0,   604,   877,     0,   876,     0,   873,   872,   702,   701,
     796,   250,   435,   446,   449,   441,   421,     0,     0,     0,
     411,   408,     0,   395,   393,   394,   400,   401,   402,   403,
     404,   405,   396,   399,   397,   398,   408,     0,   311,     0,
       0,  2903,  2904,   142,   257,   276,   287,  2922,  2908,   408,
       0,  1531,  1529,  1538,  1541,  2833,     0,  2060,     0,  1632,
    1633,  1636,   573,   567,  2954,   587,   589,     0,   598,   597,
     879,   880,   878,     0,     0,   697,     0,     0,   408,   442,
       0,   417,     0,   426,     0,     0,   309,   465,   463,   307,
     453,   453,   239,  2916,  2910,  1536,     0,  2068,  1635,  1637,
       0,   591,     0,     0,   443,   449,   439,   447,   408,     0,
       0,   407,     0,   461,   310,     0,     0,     0,   408,     0,
     452,   454,   456,   408,  2067,     0,  2072,     0,   875,   874,
       0,   440,     0,     0,   438,   418,   423,   408,   466,   408,
     320,   319,     0,     0,   389,   460,     0,   312,  2917,     0,
       0,  2079,  1638,   444,     0,   408,     0,   408,     0,   408,
       0,     0,   839,     0,     0,   308,  2070,  2071,  2069,  2074,
       0,     0,  2076,  2077,     0,  2040,     0,  1645,  1646,  1634,
    1639,  1640,     0,     0,   436,   408,   424,   429,     0,     0,
     315,   390,   391,     0,   317,  2078,  2073,     0,  2080,  2082,
       0,  1647,  1641,     0,  1642,     0,     0,   408,   408,   425,
     428,   467,   464,     0,     0,   313,   314,   325,   324,     0,
    2075,     0,     0,     0,     0,  1644,  1643,   408,   408,   430,
     333,   331,   408,   321,   329,   323,     0,   330,   392,   318,
    2081,  2083,     0,   316,   332,   322
};

  /* YYPGOTO[NTERM-NUM].  */
static const yytype_int16 yypgoto[] =
{
   -4431, -4431, -4431, -4431, -4431, -4431,   118, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  1629, -4431, -4431, -4431, -4431,
   -4431, -4431,  1823,  1830, -4431, -3882, -4431, -4431,  1829, -4431,
     513,  1833, -4431,   511, -4431,  1842, -4431,   516, -4431, -4431,
   -4431,  -861, -2053, -4431, -4431, -4431, -4431, -4431, -4431,  1253,
   -4431, -4431,   510,  1447,  3855, -4431,   506, -4431,   226, -4431,
   -4431, -4431, -3828,   116,   -57, -4431, -4431,    35,  3389,   -54,
   -4430, -4431, -4431, -4431, -4431, -4431, -4431,   515, -4431, -4431,
     329, -4431, -4431, -2193, -4431, -4431, -4431, -4431, -4431, -4431,
    -247,  -194,  2370, -4431, -4431, -4431,  4924, -4431,  4021, -4431,
   -2554,  2286, -4431, -4431, -4431, -4431, -4431,  2344, -2501, -4431,
   -4431, -4431,  1141, -4431, -4431, -4431,   437,   272, -4431,   278,
   -4431,   279, -4431,   292, -4431,   300,   301,   305,   307, -4431,
     309, -4431, -4431,  -196, -4431, -4431, -4431, -4431,   310, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431,   -72, -4431, -4431,    21,
   -4431, -4431,   -66,   311, -4431,   -51,   314, -4431,   321, -4431,
      16, -4431,     2, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431,  1317,  2750,  3978,  2761, -1013, -4431,  1736,
   -4431, -4431,   918, -4431, -4431,  1065, -1414, -4431,  2614, -2343,
   -2312, -2303, -4431, -4431, -4431, -2968, -2960, -1238, -4431, -1226,
   -2301, -2185,   900,  1888,  1890,  1889,    34, -4431,  1120,   514,
   -4431, -4431, -4431, -3305,    96, -4431, -3593,   731, -4431, -4431,
   -4431, -4431, -2936, -4431, -4431,    23, -4431, -4431,    89,    94,
   -4431,   372, -4431,  2636, -2092,  -506,  2709, -4431, -1823, -1602,
     612, -1459, -1448, -4431, -4431, -4431,  1347,  1917,  1076, -4431,
    1073, -1478,  1027, -3466, -4431, -4431,  -589, -2527, -4431, -4431,
   -4006, -4431,  -141,  1546, -4431, -4431,  -135, -4431, -4431, -4431,
    1506,  1515, -1824,  1852, -1298, -4431,   736,   936,   358, -4431,
     110, -4431,  1047, -4431, -4431, -2912, -4431,   -41, -2375,   348,
   -4431, -4431, -2913, -3454, -1447, -4431, -4431, -3182, -2294,  1846,
   -4431, -4431,   411, -4431, -4431, -4431, -4431, -3221, -4431, -1550,
   -2116, -4431, -4431,   548, -4431,   495,   546, -4431,   492, -4059,
   -4431,   542, -1816,  2158, -4431,  3401,  2149, -2295, -4431, -3973,
   -1744,   782, -2105, -4431,  1092, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -1921, -4431, -4431,  1417, -4431,  2279,  1986, -4431,
    2288, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
    2770, -4431,   725, -1902,  2772, -4431,  2774,   596, -2613,  -999,
   -4431,  -980, -4431, -1472,  3584, -1488, -1829, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431,  2974, -4431, -4431, -4431,
   -4431, -4431,  4176, -4431,  2983, -4431, -4431, -4431, -4431, -4431,
    1536, -4431,  2457, -4431, -4431, -4431, -4431, -4431,  2171,  3451,
   -4431, -4431,    59, -4431, -4431, -4431, -4431,  2464, -4431, -4431,
    3477,  2074, -4431, -4431,  1822,  2487, -1606,  1291, -1031,  5086,
      10,    39,     8,   647, -4431,  3112, -4431, -4431, -2096, -4431,
   -4431, -4431, -4431,  4233,  -941,  -992, -4431, -4431,  2930, -4431,
    4239,  3979,  3238,   682,  4903, -4431, -1178, -4431,   -56, -4431,
   -4431,  -787, -4431, -4431, -4431,  -570, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431,  2561, -4431, -4431,
   -4431,  3302,  1896, -2470, -4431, -2283, -1789, -4431, -2362,   502,
   -4431, -4431, -4431, -4431, -4431, -4431,   522, -4431,   233, -4431,
   -4431, -4431, -1884, -4431, -4431, -4431, -4431, -4431,  -908,  2693,
   -1016, -1041, -4431,  4041, -4431, -4431, -4431, -1638, -4431, -2485,
   -4431, -4431, -4431, -4431, -2731, -2582, -4431,  -962,  2468,  2469,
    2486,  2488, -4431, -4431,   147, -4431,   236, -4431, -4431,    27,
      33, -2083,   659, -4431,   922, -4431, -4431, -4431,   432,  1571,
     440, -1694, -2200, -1112,  1797, -4431, -4431, -1972,  4087, -1961,
   -1938,  1284,     3,  4235,  3747, -2940, -4431,   928, -4431,   534,
    1836,   722, -4431, -4431,  1614, -1010,   -86,   571, -2923, -4431,
   -1005,   -83, -4431, -2195,   656, -2093, -2488, -2128, -2397, -2207,
   -4431, -4431,  2989,   121, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431,  -498,   173,  -493,  5197,  3288, -4431,  2613,  4189,
    4190, -4431, -4431,  3915,  1900,  1902, -4431, -2660, -2571, -4431,
   -4431, -4431,  -919,  2169,   978,  3773,  1354,  1910, -2736,  1001,
   -3835,  4197, -4431, -3342,   997,  4202,  4204, -3166,  3692, -4431,
   -4431, -4431, -4431, -4431,  2458, -4431, -4431, -4431, -4431, -4431,
   -4431,  3133,  4293,  -942, -1982, -4431, -4431, -4431,   886,  3117,
    2462, -1348, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431,  2625,  2216, -4431, -4431, -4431,
   -4431,  3231, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,  1925,   316,
   -4431,  1292,   230, -4431,   938, -4431, -4431, -4431, -4431, -4431,
      91, -4431, -4431,    70, -4090, -1022, -1009,  1192, -1869, -2518,
   -4431,  1020, -3187, -2791,   735,  -684, -1162, -1144,   156,  2381,
    3845, -1929, -4431,  4827,  -798, -1486, -2125,  1126,  4054,    -6,
   -4431, -4384, -4431,  -174,   103,  2173,   -74,  3203, -3502, -4431,
      26,     9, -4431,   472,   268, -4431, -4431,   344, -4431, -4431,
   -4431,   327, -4431, -4431, -4431, -4431,  3884, -4431,  2529,  5230,
   -4431, -4431, -4431,  3195,  5238,  -809,  3888,  3221, -4431,  3224,
   -4431, -4431, -4431, -1958, -4431, -4431,   267, -4431,  2626, -4431,
   -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431, -4431,
   -4431, -4431, -4431, -4431, -1229,  4383,  5247,  4005, -4431, -4431,
    2463, -4431, -1920, -1251, -1063, -2597, -4431,  2852,  3802, -4431,
   -4431,  1776, -4431,  2854,   804, -4431, -4431,   653, -4431, -4431,
     428,  4389,  3946, -4431, -4431, -4431, -4431, -4431,  4288, -4431,
     -10,    -1, -4431,   -39, -4431, -4431, -4431,   402,  5292,  5293,
   -4431, -4431,   205, -4431,  -783, -4431, -4431, -4431, -4431, -4431,
    4221, -4431, -4431,  4222, -4431, -4431, -4431, -4431,  4224, -4431,
   -4431, -4431, -4431, -4431, -4431,  1602, -4431, -4431, -4431, -4431,
   -4431, -4431,   322, -4431, -4431, -4431,   359, -4431,  1615, -4431,
    1237, -4431,  1176,   880,  1711
};

  /* YYDEFGOTO[NTERM-NUM].  */
static const yytype_int16 yydefgoto[] =
{
      -1,    64,    65,  1000,  2190,    66,    67,    68,    69,    70,
    2006,    71,  1280,  1949,  2615,  2616,    72,   874,    73,  1678,
    1679,  2421,  2422,  3663,  4106,  4107,  3672,  4121,  3666,  4110,
    4111,  3669,  4115,  4116,  2411,  2412,  4102,  4103,  3651,  3660,
    3654,  2413,  2159,    74,    75,    76,    77,  2429,    78,  3690,
    2443,    79,  2921,  2922,  1721,  3717,  4093,  4712,  4097,  4798,
    4898,  4728,  3054,  4413,  4713,  4714,  4807,  2452,  2259,  4842,
    2908,  4926,  2909,    80,  1064,  4150,  4151,  4152,  4455,  4456,
    4457,  4458,  5088,  4991,  5059,  5089,  5183,  5189,  5112,  5202,
    5203,  5204,  5187,  1348,  5205,    81,   906,   907,  1350,  2033,
    2629,  2034,    82,    83,   836,  1968,  1969,  1970,  1971,  3311,
    2630,  3306,  3307,  4221,  5113,  5185,  4992,  4993,  4905,  4994,
    4810,  4995,  4909,  4996,  4813,  4997,  4998,  4999,  5000,  5080,
    5001,  4904,  5105,  4988,  4989,  5082,  5157,  5180,  5002,  4820,
    4899,  5046,  4821,  4900,  5075,  4984,  5076,  5100,  5153,  4985,
    5047,  5103,  5050,  5003,  5009,  5090,  5004,  5010,  5005,  4825,
    4916,  5008,  4914,  5007,  5086,  5085,  5128,  3172,  3728,  1707,
    2438,  3123,  3124,  3125,  2924,  2925,  1578,  2603,  2604,  2605,
    3677,  3678,  3679,  3481,  3482,  3483,  2266,  3049,  2913,  1579,
    1580,  1581,  3129,  3681,  3682,  3130,  3131,  1582,  3133,  1583,
    1584,  2930,  3154,  3155,  3156,  3157,  3158,  2184,  2185,  3429,
    2810,  3426,  4292,  3927,  4957,  3934,  3984,  3985,  4557,  4879,
    4771,  4875,  4772,  4877,  4963,  4964,  4782,  4889,  4890,  4688,
    4689,  4690,  3110,  2253,  2254,  1074,  1641,  3159,  2275,  1642,
    3010,  1643,  1644,  2257,  3025,  2997,  3723,  3513,  3514,  3515,
    4034,  3516,  2951,  2283,  3506,  3507,  4050,  3563,  4385,  4980,
    3564,  3565,  3566,  3567,  3568,  3569,  3570,  3745,  3571,  3746,
    3741,  3742,  3739,  1112,  4352,  4353,  4354,  3735,  3736,  4065,
    4051,  4052,  4053,  4361,  4378,   784,  4370,  4010,  1366,  2872,
    1389,  1390,  2723,  2052,  1645,  4011,  4012,  4013,  4059,  3806,
    4484,  4055,  4035,  4581,  4704,  4707,  4795,  4976,  2952,  1671,
    2944,  2148,   658,  4610,  4611,  4612,  4615,  4616,  4617,  4566,
    4567,  4568,  4569,  2953,  2447,  4570,  4571,  3146,  4560,  3992,
    3993,  3994,  2954,  3276,  4343,    84,    85,  1560,    86,  1566,
      87,  1562,    88,  1664,  1056,    89,  2364,    90,    91,    92,
      93,    94,  2728,    95,    96,  2841,  2842,  2843,  2210,  2835,
    2836,  1005,  3055,  3616,  4598,  1039,  1646,  1647,  2358,  1648,
    1649,  4591,  1650,  2971,  1651,  1652,  1653,  1654,  3292,  3293,
    2959,  3294,  3000,  2285,  1317,  2610,  4076,  2337,    97,    98,
      99,  1014,  2219,   100,  1445,  1446,  1447,  1506,  1507,  2221,
    2867,  3458,  1440,  1441,  1442,  1015,  1504,   101,  1683,   102,
    2681,  2682,  2683,   103,  4416,  2370,   104,   105,  1690,  1691,
    1692,   106,   193,   107,  1337,  1335,  2011,  2012,   108,  1060,
    1061,  2372,   109,  2664,  2665,  1672,  1673,  3857,   110,   111,
    3161,   113,   785,   115,   116,  2044,  2045,  2704,  2705,   117,
     118,   923,   924,   925,  1019,  1020,  1510,  2225,  2226,  2227,
     786,   787,  1220,  1109,  1674,   789,   790,  1902,   791,  1221,
    1222,  4056,   792,  1233,  1890,   793,  3754,   794,   795,   796,
     797,   798,  3775,  3776,  4181,  1922,  1923,  1924,   799,   800,
     801,  2561,  3817,  3266,  4203,  3176,  3177,  3260,  4530,  3262,
    3811,  3812,  4198,  4488,  4644,  4743,  4847,  4745,  4848,  4855,
    4645,   802,   803,  1209,  1795,  3768,  3214,  4170,  1740,  3201,
    1675,  1676,  1134,  1135,  1100,  2468,  1746,  2706,  3890,  2707,
    3373,  3374,  3375,  3901,  3897,  2685,  2686,  2708,  2709,  2710,
    2711,  2712,  2713,  2714,  4656,  4862,  4863,  5070,  5149,  5150,
    5151,  5152,  4660,  4265,  4266,  4267,  4268,  4269,  3063,  3064,
    3065,  3863,  2972,  1785,  1786,  1793,  1986,  1987,  1741,  2659,
    2096,  3910,   997,   973,   974,  1458,  2167,  4275,  4531,  4532,
    3379,  4271,  4529,  3006,  3007,  1024,  1025,  2235,  2877,  2878,
    1526,  1527,  1531,  1532,  4676,  3011,  2896,  2851,  2931,  2897,
    2898,  1514,  1515,  1021,  1516,   120,   121,   122,   123,   124,
     125,   126,   127,   128,   129,   130,   131,   132,   133,   134,
     135,   136,  2624,  2246,  1053,   659,  1937,  1938,  1939,   137,
     138,   879,   900,  1340,  3343,  3344,  3869,  3345,  3163,  3347,
    3875,   970,  2267,  2268,  3876,   971,  2162,  2163,  2164,  4230,
    4232,   139,   140,  3865,  3866,   901,   141,  2888,  1543,  1544,
     142,   963,  2132,  2133,  2134,  2780,   143,   953,  1430,  3918,
    3923,  2766,  1332,  1585,  2113,  1433,  1434,  1435,  2114,  2751,
    3400,  2097,   144,   145,  1553,   146,  1036,  1554,   147,  1281,
    1962,  3304,  3837,  4206,  1963,  1964,  2625,   148,   903,  1345,
    1342,  1346,  2018,  2017,  2690,  2688,   149,   893,  1333,  2673,
     150,   884,   151,   152,   888,  1999,  1325,  3858,  3164,  3461,
    3962,  3963,  3965,  4315,  4316,  4948,  5096,  5138,  5121,  5141,
    5142,  5145,  5168,  5169,   804,  1461,   805,  4371,   806,   807,
     808,  3870,   809,  2236,  4272,   810,  3867,   811,  2715,  2247,
     629,  4117,  4118,  1006,  1462,  2229,  2057,  3946,  1223,   985,
     864,  4827,   943,  1008,  1381,  1009,  1942,  1382,  2643,   631,
     632,   633,  4828,   634,   635,   868,   948,   636,   153,   949,
     154,  2066,   155,  3394,  3395,  1395,  1399,  2081,  2082,  2083,
    1436,  1873,  2075,  1396,  2084,   952,  1374,  1375,  2064,  1376,
    2062,  1377,  2733,  2092,   156,  1327,   641,  2002,  2003,  3330,
     157,   967,   158,   159,   160,  1045,   161,  1991,  2657,  2658,
     162,  2036,   163,  1973,  1982,  1284,   870,   871,  2646,  2830,
    2205,  2206,  2644,  1943,  1383,  3388,  1492,  1710,  1011,  1711,
    1012,  1295,  1976,  1495,  4226,  3842,  4750,  4499,   164,   194,
     644,  1072,  1697,  2041,   165,   166,   167,   168,  1525,   814,
    2716,   815,   926,  1088,   660,  1730,  1722,   187,   188,   189,
     663,   664,   190,  1662,  1663,  4098,  4600,  4716,  4931,  4932,
    1724,  5019,  1725,  1726,  3718,  4625,  5015,  5093,  1727,  3169,
    4155,  4731,  4928,   169,  1467,  1463,   983,  2178,  2172,  2174,
     170,   171,  1320,   172,   173,  4669,  4670,  3705,  2363,  3607,
    3608,  4087,  3052,  3612,  2612
};

  /* YYTABLE[YYPACT[STATE-NUM]] -- What to do in state STATE-NUM.  If
     positive, shift that token.  If negative, reduce the rule whose
     number is the opposite.  If YYTABLE_NINF, syntax error.  */
static const yytype_int16 yytable[] =
{
     630,   984,   941,   119,  1254,  1548,  1259,  1048,   114,   813,
     112,  1432,   832,  1367,  1371,  1555,   873,  1533,  1800,  1845,
    1537,  1712,  1010,  1536,  1136,   892,  2230,  1519,  1028,  2668,
     866,  1029,   908,  1400,  1935,   913,  2284,  1846,  3117,  2353,
     908,   628,  3268,   961,  2880,  2881,  1936,   968,   866,   975,
     990,  1655,   945,  2660,  1480,  1889,  2313,  1983,  2107,   991,
    3415,  2932,  1749,  1750,  2932,  2932,  2378,  2557,  2558,   944,
    1656,   996,  2824,   995,  2336,  2566,  2567,  2568,   833,  3322,
    1521,  2140,  2631,  2717,  2783,  3596,  2936,  2937,  3462,   891,
    1007,  1802,  3270,   988,   897,  3126,  3202,  2632,  4049,  1095,
    3203,  2255,  2038,  1815,  1816,  1817,  2660,  1788,  2282,  1819,
    4054,  2986,  2256,  2258,  3346,  2602,  2290,  3930,  3617,  2697,
    2294,  2859,  2747,  3603,   865,  2039,  3127,  1031,  3972,  3305,
    4071,  4072,  3389,  3376,  2314,  3128,  2729,  3135,  2773,  3351,
     961,  1397,   865,  1068,  1070,  3683,  2326,  4450,  1855,  1083,
    1084,  3147,  1503,  3684,  2889,  3871,  2784,  2270,  1030,  4516,
    1985,  2899,  2785,  4113,  2966,  2946,  2864,  4229,  2788,  1040,
    2837,   630,  1256,  2941,   630,  1007,  1049,   961,   872,  3178,
    3179,  3180,  1213,  1214,  1213,  1214,  2805,  2608,  1742,  1743,
    1744,   961,  1213,  1214,  3261,  3206,  3002,  3003,  4057,  1754,
    2967,  2807,  2969,  1256,  3295,   960,  1201,  1202,  1256,  1203,
    1311,  2981,  1042,  2875,  1945,  1047,   665,  3359,  1213,  1214,
    3222,  -624,  1255,  2368,  3224,  2441,  2158,  3436,  2932,  2998,
    1808,  4303, -2173,  1812,  3149,  1985,  1071,  4426,  2158,  -956,
    3232,  3233,  1213,  1214,  2043,  1680,  3239,  1213,  1214,  4655,
    3029,  3393,  1829,  1830,  3031,  4022,  1834,  1213,  1214,  2671,
    2197,  2875,  3251,  3252,  1867,  4409,  3137,  3390,  4080,  3366,
    1032,  3258,  1213,  1214,  1848,  1849,   642,  1666,  3919,  1853,
    1854,  1913,  2844, -1953,  2852, -2711,  1698,  4564,  2466,   867,
    3348,  1079,  2436,  1017,  1985, -1697,   890,  2049,  1757,  5048,
    1602,   896,  1037,  3971,  4878,  1723,  1731,   867,  1299,  1213,
    1214,   947,  2549,  1213,  1214,  1602,  5195,  1213,  1214,  1353,
    2116,  3424,  2876,  1264,  1265,  1266,  1213,  1214,  1269,  1270,
    4939,  -941,  1273,  1602,  1275,  1276,  1277,  -624,  4085,  1050,
    4289,  2608,  1213,  1214,  1213,  1214,  -611,  1307,  2885,  1174,
    3577,  3452,  3453,  1062,  4561,  4016,  4020, -1810,  3100,  4021,
   -2020,  1213,  1214,  2526,  -612,   869,  1016,  1256,  3109,  3944,
    2876,  1979,  4337,  1213,  1214,  4004,  3835,  4030,  1213,  1214,
    2136,  2469,   885,   869,  1213,  1214,  4177,  4005,  3168,  2121,
    1587,  1213,  1214,   882,  2932,  4503,  1302,   969,  3942,  1213,
    1214,  4006,  1330,  2110,  2982, -2711,  1493,  3367,   880,  1341,
    1402,   928,  4925,  1402,   928,  3949,  2992,  -492,  1017,  4906,
    4907,  4641,  1684,  2139,  1022,  -478,  4929,  3368,   195, -1697,
    3470,  -840,  2344,  2947,  1052,  1764,  2176,  3907,  2332,  4940,
    3369,   195,  1886,  1343,  3150,  2994,  3032,   964,  2095,  1136,
    1016,  1213,  1214,  1443,  4091,  5136,  2678,  1018,  3256, -2625,
    1058,  2583,  1919,  1920,  1116,  3653,  1523,  2076,   912,  3309,
   -1963,  1459,  4565,  4642,  3061,  1078,  2721,  3593,  2080,  -518,
    2932,  2816,  1213,  1214,  5048,  4978,  3583,  -507,  1519,  2875,
    1257,  2333,  1213,  1214,  2111,  1574,  3459,  1914,  1681,  4489,
    1354,  1438,  1017,  4695,  1213,  1214,   886, -1697,  4228,  1016,
    3463,  1213,  1214,  1043,   191,   946,   639,  1668,  3170,   640,
    2495,  1257,  3610,  1915,  3370,  2995,  1257,   637,  4460,  1519,
    2596,  1175,  2243,  2244,   987,  3950,  2597,  3611,  4603,  1685,
    3171,  1018,   195,  1686,  1044,  1669,  2112,  1213,  1214, -1697,
    2020,  1216,  1308,  1216,  1217,  4163,  1217,  1687,  1213,  1214,
    1665,  1216,  2948,  4727,  1217,   895,  4979, -1962,  3302,  2838,
    3484,  3644,  1213,  1214, -2173,  1312,  3365,  2334,  3707,  4490,
    3310,  1715,  4004,  2356,  3264,  2149,  4049,  1216,  1439,  4452,
    1217,  1980,  1057,  1524,  4005,  2115,  4941,  4092,  2876,  4453,
    1018,  3385,  3386,   192,  3585,  2609,  3358,  1210,  4006,  4893,
    -624,  1216,  3725,  -840,  1217,  4114,  1216,  1213,  1214,  1217,
    1402,   928,  1059,  1089,  4733,  2345,  1216,  1863,  2996,  1217,
    3244,  2005,  4293,  4925,  1260,   961,   961,  3349,  1344,  1023,
    3902,  1216,  2817,  1007,  1217,  1081,  3371, -1697,  4930,  2177,
    1117,  3951,  1668,  1460,  1213,  1214,  2068,  1444,  2886,  5137,
     881, -1697,  3604,  1615,  2829,   195,  4651,  1895,   638,  3152,
    3387,  1181,  1426,  4643, -1697,   834,  5091,  5091,  1216,  1065,
    1669,  1217,  1120,  1331,  1758,  1257,  1216,  1918,  2369,  1217,
    1916,   991,  3365,  1935,  1688,  1216,  3319,  4178,  1217,   965,
    1314,  2137,  1137,  2606,  1494,  1936,    42,  3578,  3613,  2679,
   -2777,  1216,  2477,  1216,  1217,  4086,  1217,  3687,  3372,  2660,
    3430,  4786,   195,  3726,  4841,  4718,  4719,  2274, -1953,  2943,
    1216,  2943,  1309,  1217,   883,  4874, -2712,  1981,  3440,  3441,
    3442,  3443,  1216,  4454,  3377,  1217,  3920,  1216,  1258,  1033,
    1217,  3346,  1300,  1216,  2490,  1576,  1217,  3380,  1368,  2609,
    1216,  1213,  1214,  1217, -2711,  2768,  1386,  1391,  1216,  2771,
    3680,  1217,  2467,  1080,  2775,  1007,  3273,  1211,  1944,    49,
    2660,  3297,  1224,  4983,  3391,  3582,  1947,  2949,  1206,  3466,
    1205,  1667,  1689,  2117,  2255,  3099,  4729,  1069,  1069,  3819,
    1355,  3821,  3971,  2789,  2790,  2256,  2258,  3108,  4593,  2631,
    1212,  2672,  1219,  1267,  1219,  2475,  4023,  3600,  1272,  3836,
    1216,  1336,  1219,  1217,  2632,  3491,  2274,  4341,  2569,  4304,
    2004,  2459,  1682,    54,  3504,  3939, -2173,  4345,  3943,  3497,
    2014,  3500,  1682,  1517,  -956,  4348,  2274,  3160,  1219,  2198,
      55,  1216,  3447,  5196,  1217,  3138, -2712, -1697,  4953,  5028,
    2565,  1216,  2122,  2442,  1217,  3414,  3574,  3575,  1007,  1091,
    1564,  2806,  1219,  1216,  1318,  1519,  1217,  1219,  4390,  3891,
    1216,  2367,  3967,  1217,  1176,  1309,  2808,  1219,  1334,  1007,
   -2711,  3822,  3731,  2680,  1016,  3432,  3825,  3810,  1682,  2502,
   -1697, -2777,  1219,  2506,  2839,  2840,  1313,  2932, -1697,  4237,
    1028,  3464,  1429,  1029,  2886,  1303,  1216,   813,   887,  1217,
    4113,  3734,  3758,  4942,  3759,  2528,  1007,  1216,  4517,  2527,
    1217,  1479,  2575,  1868,  1007,  1007,  -941,  1869,  3777,  1219,
    3778,  1216,  4250,  1219,  1217,  1538,   866,  1219,  1539,  4332,
    4338,  -611,  2456,  4007,  4921,  3792,  1219,   961,  1450,   945,
   -1963,  3954, -1810,  2476,  2274, -2020,   975,  1561,  5074,  -612,
    2255,   989,  1219,  2950,  1219,  4171,   944,  3625,  4008,  3627,
    3628,  2256,  2258,  3631,  3632,  1018,  1216,  2457,  1868,  1217,
    4000,  1219,  2494,  3641,  3642,  1483,  4627,   996,  3646,  1205,
    2335,  3649,  2736,  1219,  3656,  1031,  1258,  5122,  1219,  1709,
    3982,  1007,  3699,  2530,  1219,  2188,  4564,  2531,  1235,  2899,
    1534,  1219,  -492,  1216,  2274,  3136,  1217,  1261,  3149,  1219,
    -478,  1556,  2274,  2199, -1697,  1007,  1030,  1563,  1007,   119,
    1565,  1213,  1214,  1682,   114,  1657,   112,  3265,  1659,   630,
    2550,  1735,   961,  4069,  2551,  3871,  5171, -1962,  2547,  1677,
    3325,  1026,  2548,  3579, -2625,  1090,  2274,  3278,  1699,  1700,
    1701,  3279,  4333,  1704,  1479,  2150,  1708,  1007,  4159,  1713,
    1714,  1219,  1917,  3763,  -518,  3771,  2274,  3764,  4894,  3772,
    1660,  3727,  -507,   866,  2274,  1820,  1933,  4159,  1279,  1213,
    1214,  2678,  3790,  3594,  1213,  1214,  3791,  5132,   835,  -298,
    3734,  3597,  1219,  1137,  3827,  3614,  3601,  1426,  3828,  1449,
    1028,  2500,  1219,  1029,  4357,  3299,  1682,  1137,  4369,  2481,
    1216,  1978,  2820,  1217,  1219,  2726,  2482,  1206,  3864,  1205,
    1520,  1219,  3626,  3448,  2487,  3629,  3630,  3213,  2800,  3633,
    3634,  3635,  3636,  3637,  3638,  3639,  3640,  3683,  1328,  3643,
    4007,  3645,  1364,  3647,  1338,  3684,  3008,  3655,  4254,  4255,
    2239,  3498,  3958,  1022,  3445,  1847,  3505,  1219,  1891,  1892,
    4387,  3326,  1896,  3959,  1846,  1897,  1898,  1899,  1219,  2811,
    1903,  1904,  1906,  1908,  1909,  1910,  1911,  1912, -2777,  2435,
    3132,  4565,  1219,  1213,  1214,   867,   813,  4137,  4239,  1878,
     955,  2451,  3134,  1364,  1069, -2712,  3996,  3997,   947,   197,
    1213,  1214,  1238,  1977,  2200,  1572,  1894,  2492,  1213,  1214,
    1533,  1533,   643,  2109,  1452,   991,  2812,  2493,  1213,  1214,
    2199,  4564,  1213,  1214,  1213,  1214,  4160,  1219,  1693,  2496,
    1007,  1213,  1214,  1213,  1214,  4667,  2508,  1926,  1927,   630,
    1929,  1166,  1931,   630,  1007,  4160,  2745,   630,  1941,  1007,
     961,  3917,  1946,  3150,  1397,  3788,  1972,  2070,  2037,  4843,
   -1953,   869,  2633,  2541,  1219,  4129,   866,  1451,  1975,  1323,
    3719,  1007,  2513,  1213,  1214,  2054,  2752,  4240,  2576,  1007,
    1928,  3696,  1007,  2517,  1932,   875,  1990,  1992,  1940,  3941,
     958,  2059,  2094,  3948,  2194,  4277,  4278,  4191,   866,  1213,
    1214,   961,   961,  4246,  3926,  4972,  1213,  1214,  3431,  4161,
     894,   961,   961,  2201,   961,  2016,  3713,  1882,  3305,  2231,
    5146, -2712,  3657,  4295,  4296,  2591,  1007,  1007,  4165,  4298,
    2071,  4301,   867,  3126,  2679,  2050,  2862,   941,  1574,  1572,
    1655,  1655,  2518,  1007,  1935,  1110,  4911,  3966,  4791,   866,
    1213,  1214,  2251,  3750,   889,  3327,  1936,  5147,  2069,  1656,
    1656,  1364,  3449,  3450,  3127,  3882,  2077,  4923,  1027,  3314,
    3143,  1219,  3840,  3128,  4701,  3135,  4703,  3988,  1256,  2520,
    2943,  1007,  2186,  3277,  3906,  3960,  2284,   945,  3312,  4859,
    1216,  4300,   865,  1217,  3720,  1369,  1213,  1214,  4099,  4100,
    2207,  5146,   946,  4358,   944,  3404,  4565,  4280,   869,  3924,
    3925,  2200,  1069,  3879,  5041,  1178,  3409,  3410,  3916,  2353,
    3413,  2601,  4074,  1213,  1214,  3354,  4359,  1167,  4291,  2613,
     975,  2168,  1486,  2569,  1789,  1213,  1214,  1790,  5147,  2188,
    4871,  4585,  4302,  3912,  3913,  2179,  3353,  4306,  1216,  4587,
    1007,  1217,  1360,  1216,  3282,  3283,  1217,  3815,  2046,  1870,
    3231,  3820,  1007,  2001,  1069,  4360,  2932,  2932,  1007,  2284,
    2313,  2577,  1574,  2013,  1069,  3446,  2015,  1324,  3152,  5031,
      42,  3589,  4507,  2202,  1365,  3969,  2521,  1007,  4135,  4136,
    1213,  1214,  3940,  1574,  4049,  3328,  1095,   956,  2154,  1213,
    1214,  2203,  2380,   902,  1239,  1240,  4195,  3499,  2660,  4912,
    1883,  4104,  4388,  2237,  1235,  1426,  2914,  2248,  2680,  -691,
    1007,   969,  1487,  2241,  1481,   867,  1557,  4262,  1965,  3246,
    4162,  3267,  1871,  1213,  1214,  1365,  2240,  1213,  1214,  3144,
    1694,  2282,  4652,  2763,  4767,  1026,  2072,   690,  2314,  4162,
    4792,  3915,  1216,    49,  2060,  1217,  4609,   867,  1213,  1214,
    3288,  4508,  1361,  1213,  1214,  2725,  4263,  5148,  1372,  1216,
    3961,   957,  1217,  2755,   718,  3574,  3575,  1216,  1213,  1214,
    1217,  1520,  3721,  2284,  2355,  1213,  1214,  1216,  2853,  4668,
    1217,  1216,  2204,  1216,  1217,  3149,  1217,   959,  1576,  4075,
    1216,   869,  1216,  1217,   962,  1217,  2764,    54,   867,  1250,
    1251,  1252,  1253,   695,  3898,  4342,  3484,  1993,  1213,  1214,
    4696,   987,  4973, -1874,    55,  3257,  4130,  4131,  4132,  2915,
    1170,  4380,  2255,   869,  3321,   966,  3381,  3382,  3383,  3979,
    2373,   961,  1216,  2256,  2258,  1217,   947,  3899,  5148,  1426,
    4509,  1219,  2095,  4977,  2854,  3485,   961,  1022,  5162,  4633,
    4793,  5042,  2357,  3387,  1484,  1213,  1214,  3486,  1216,  4375,
    1426,  1217,  1239,  1240,   639,  1216,  4902,   640,  1217,  2573,
    4541,  4014,  4542,  4376,   869,  2855,  3658,  3659,  2578,   961,
    4913,   876,  2453,   630,   630,  4194,  1257,  3722,  3855,  1213,
    1214,  2073,   630,  1365,  2579,  3329,  3889,  3893,  2203,  1219,
    4768,  4028,  4029,  4491,  1219,   707,  3904,  3905,  1238,  1216,
    2074,  2822,  1217,  4974,  1213,  1214,   898,  1884,  1213,  1214,
    -547,  2306,  1576,  1359,  2454,  2455,  2445,  1213,  1214,  1213,
    1214,  1213,  1214,  1885,  4389,   989,  1373,  4391,  1872,  1213,
    1214,  1256,  2056,  1576,  4975,  3406,  2856,  4788,  2143,  2446,
    2095,  2155,  3680,  1558,  4084,  1216,  2525,  1258,  1217,  1213,
    1214, -1874,  3465,  2634,  1540,  1213,  1214,  1213,  1214,  1137,
    2501,  1213,  1214,   877,  1370,  1213,  1214,  1213,  1214,  1559,
     742,  2606,  1216,  1738,  2056,  1217,  2318,  4297,   723,  2765,
    3574,  3575,  2916,  2375,  1216,  3150,  3396,  1217,   989,  3145,
    3056,  2670,  2917,  1219,  4876,  4515,  1171,  4880,  2423,  2918,
    3789,  2932,   724,  4599,  2584,  2542,  1213,  1214,  4582,  4583,
    1219,  5098,  5099,  1213,  1214,  4125,  1541,  2588,  1219,  2857,
    2592,  2181,  4903,  1738,  2182,  3286,  1716,  1007,  1219, -1874,
     946,  2449,  1219,  3900,  1219,  3685,   878,  2724,  4008,  1216,
    2580,  1219,  1217,  1219,  1213,  1214,  4757,  3686,  1216,   991,
    4471,  1217,  1027,  2737,  1738,  2056,  4377,  2645,  2606,  4452,
    3841,  1206,  2823,  1205,  2590,  1213,  1214,   998,  4237,  4453,
    1016,   899,  2495,   991,  2307,  1224,  2932,  2932,  1791,  4527,
    4479,  1792,  1216,  1219,   961,  1217,  1216,  1213,  1214,  1217,
    4122,  2151,  4758,  3698,  4225,  2674,  2675,  4415,  4430,  4431,
    1739,   961,  2144,  2919,  1738,  4128,  4671,  1216,  2543,  1219,
    1217,  3057,  1216,  5133,    42,  1217,  1219,  4832,   999,   961,
    1137,  1007,  1508,  4283,  4574,  2560,  1738,  1216,  4833,  4264,
    1217,  4089,  5134,  2564,  1216,  3947,  2642,  1217,  2473,  2319,
    2647,  3976,  2380,  3769,  1001,  3703,  2660,  3770,   961,  3783,
    1753,   961,  1542,  2631,  3272,   987,  3794,  4721,  3795,  1007,
    1219,  1018,  4724,  1007,  1007,  4317,  4318,  1216,  2632,  2633,
    1217,  4319,  2152,  3280,  2183,  3281,  4441, -1874,  3970,  1668,
    4090,  1807,  1717,  2607,  2825,  5035,  2607,    49,  2660,  2660,
    4200,  2761,  4201,  2642,  2660,  2698,  3605,   961,  4249,   750,
    2920,  2846,   991,  4528,  2772,  1007,  1219,  1669,  4575,  2471,
    3152,  1213,  1214,  4454,  1216,  1718,  4440,  1217,  1517,  2606,
    2607,  1007,  4759,  3582,  4473,  2287,  3846,  2458,  1509,  1213,
    1214,  1811,  4752,  1219,   866,  2277,  3701,   866,  1213,  1214,
    2858,    54,  3704,  1013,   945,  1219,  2599,    42,  1216,  1257,
    2288,  1217,   945,  1833,   630,   630,   630,   961,   630,  1007,
     961,   944,  3977,  1069,  3880,  3254,  3826,  2847,  2769,   944,
     630,  4147,  1007,  1216,  4839,   630,  1217,  1216,  1213,  1214,
    1217,  1069,  1490,  3697,  1038,   914,  1216,  4747,  1216,  1217,
    1216,  1217,  3255,  1217,  4349,  2756,  2757,  2758,  1216,  2760,
    1219,  1217,  2990,  1248,  1249,  1250,  1251,  1252,  1253,  1219,
    2661,  2770,  3921,  2666,  3437,  3181,  2774,  2470,  1216,  2799,
      49,  1217,  3733,  1041,  1216,  1569,  1216,  1217,   991,  1217,
    1216,  4372,  2238,  1217,  1216,  4543,  1216,  1217,  3035,  1217,
    3872,  3438,  2242,  1219,  2474,  1670,  4834,  1219,   992,  2871,
    1213,  1214,  1007,  2472,  1695,  1846,  2483,  2380,  1846,  4372,
    4435,  4436,  4437,  4438,   866,  4356,  1213,  1214,  1219,  2848,
    1213,  1214,  1491,  1219,    54,  1216,  2248,  2355,  1217,   989,
    3714,  4850,  1216,  1570,  4536,  1217,  1007,   993,  1219,  4534,
    3248,    55,  4350,  1534,  1534,  1219,  2289,  4321,  3824,  2884,
    4398,  1046,  4325,  2730,   961,  4251,  4328,  4934,  3325,   991,
    1489,  2484,   915,  1216,  4095,  1051,  1217,  1016,  4853,  2759,
    2491,  2979,  2762,  1490,  2731,  1052,  4500,  2938,  1219,  4096,
    4313,  4537,  2942,  1696,  1216,  1719,  4351,  1217,  2955,  2957,
    2960,  2961,  2962,  2963,  2964,  1213,  1214,  2596,  2968,  2660,
    2973,  4886,  2849,  2803,  2504,  3832,  1216,  1368,  2505,  1217,
    2973,  1368,  2983,  2984,  4314,  2973,  2732,  2988,  2989,  1017,
    1007,  2991,  2973,  3831,  3848,  1219,  2890,  3001,  4140,  2509,
    3004,  3864,  1847,  3864,  2516,  4104,  1846,  3014,  3199,  4838,
    3015,   961,   916,   867,  3200,  3199,   867,  2853,  2445,  2945,
    3030,  3200,  2973,   947,   690,  4141,  1007,  1054,  1018,  1219,
    2965,   947,   989,  1491,  4679,  -547,  2974,  2274,  2145,  2146,
     961,  2446,  3508,  1055,  1213,  1214,  1213,  1214,  1709,   176,
    2973,  3066,  3572,  3573,  1219,  1063,  1572,  4680,  1219,  2519,
    4884,  4885,  2891,  1496,  1497,  2147,  3005,  1219,  1661,  1219,
    3013,  1219,  4638,  1213,  1214,  2868,  4936,  3017,  3018,  1219,
    4443,  2883,  3892,  2854,  1065,  1547,  1684,  4856,   905,   869,
     695,  3903,   869,  2892,  1213,  1214,   905,  4850,  2882,  1219,
    1216,  1213,  1214,  1217,   961,  1219,  2522,  1219,   961,  1213,
    1214,  1219,  1066,  3008,  2855,  1219,  1007,  1219,  1216,  1985,
    3300,  1217,  1720,  3220,  3165,   630,  1067,  1216,  2099,  2284,
    1217,  1846,    25,  4937,  1213,  1214,  5211,  3162,  3132,   321,
    2534,   323,  1573,   867,  4857,  1007,  1213,  1214,  5032,  1007,
    3134,  1071,  1213,  1214,  1213,  1214,  1219,  5065,  1213,  1214,
    4769,  1073,  4004,  1219,  2893,  2552,  3166,  1216,  5022,  2559,
    1217,  1717,  2581,  3016,  4005,  1213,  1214,  2497,  2562,  1075,
    2804,  2380,  3730,  1213,  1214,  2856,  1076,  2100,  4006,  1574,
    3762,  1294,   707,  2850,  1219,  1305,  3284,  1077, -1697,  2932,
    1402,  4017,  3058,  1685,  1728,  1213,  1214,  1686,  1498,  1499,
    3765,  2222,  2223,  3298,  2224,  1219,  3773,  1082,  3779,   869,
    2101,  1687,  3780,  1085,  3160,  2498,  3781,   946,  3782,  1805,
    3263,  1086,  1569,  2890,  2510,   946,  1087,  1219,  2380,  1216,
    2831,  2832,  1217,   174,  2511,  2833,  2834,  2894,  2380,  1092,
    2932,  2932,  2512,  1148, -1697,  1216,  2380,  4284,  1217,  1216,
    1464,  1465,  1217,  1468,  4740,  1469,  3112,  3784,  2857,  1093,
    3116,  3290,  3291,  1165,  3787,   723,  3119,  1206,  2514,  1205,
    2555,  1007,  2380,   690,  2380,  4787,  1179,  1180,  1007,  2223,
    1570,  2224, -1697,  4613,  1235,  1402,   928,  4157,  4618,  2891,
    3019,  1094,  3020,  4024,  1972,  3793,  4025,  4247,  1298,  1972,
   -1697,  1301,  1096,  3313,  1007, -1697,  1304,  1097,  1235,   917,
     918,  1306,   919,   920,   921,  1212,  3796,  1568,  4167,  4168,
    2926,  2638,  1402,   928,  1216,  2639, -1697,  1217,   321,  1098,
     323,   922,  2354,   961, -1697,  3021,  1569,    36,  3798,   695,
     961,   961,  1402,   928,  4183,  2900, -1697, -1953,  1688,  2797,
    1985,  1219,  2354,  2798, -1953,  1101,  1426,  1137,  3022, -1697,
    1007,  3357,  1102,  3162, -1697,  -689,   961,  1368,  1103,  1219,
     991,   991,  4646, -1697,    42,  2277,  1846,   941,  1219,  3205,
    1206,  1263,  1205,  2380,  4524,  4525,  3829,  3047,  3048,  5006,
    2278,  2927,  1519,   976,  1570,  1104,  4845,  3023,   866,   866,
     866,  4176,  1105,  1216,  1106,  1216,  1217,   904,  1217,  4613,
    1107,  3485,  3274,  4618,  1719,  4172,  2380,  3494,  1219,  3402,
    3421,  3495,  3423,  3486,  3785,  1769,  1572,   945,  2380, -1697,
    2102,  3119,  1216,  1572,  4392,  1217,  3496,  4394,  4395,  1576,
     977,   707,  1108, -1697,   944,  3998,  1689,    49,  1111,  3999,
     961,   961,  4865,  1216,  1571,    42,  1217,  4205,  2895,  1113,
    1216,   639,  3416,  1217,   640,  4613, -1697,  3290,  1216,  4146,
    4618,  1217,  1114,  3999,  2928,  1368, -1697,  4204,  4227,  2858,
    3800,  2380,  2796,  4241,  1115, -1697,   750,  4242,  1238,  3802,
    1219,  3574,  3575,  1216,  -689,  2001,  1217,  4657,  1235,  4658,
    2279,    54,  2013,  3336,  1636,  1216,  1219,  1637,  1217,  1235,
    1219,  1216,  1238,  1216,  1217,   978,  1217,  1216,    55,  1573,
    1217, -1697,  4285, -1697,   723,  5078,  4286,  1661,    49,  3803,
    1118,  1773,  2724,  1368,  1216,  1007,  1668,  1217,  1258,  4287,
    4323, -1697,  1216,  4286,  4324,  1217, -1697,  1572,   724,   961,
    2248,  3469,  4330,  3122,   991,  1119,  4331,  3685,  4417,  1574,
   -1697,  3451,  4418,  1268,  1669, -1697,  1574, -1697,  1121,  3686,
    2308,  4119,  4120,  4419,  1985, -1697,  2103,  4420,  5178,  5179,
    2277,  1720,    54,  4281,  5127,  1219,  5129, -1697,  4282, -1697,
    4421,  1572,  4424,   174,  4422,  2309,  4425,  2104,  1122,    55,
   -1697,  3804,  5155,  4427,  1007, -1697,  1123,  4428,  2942,  4739,
    2942,  3688,  3411,  3412, -1697,  4429,  2955,  4188,  4238,  4331,
    3517,  4189,  2105,  3026,  3027,  3043,  3046,  1124,  3675,  2973,
    1235,  2123,  3580,  1573,  3700,  1836,  1837, -1697,  2106,    63,
    1774,  4434,  4495,  1007,  1777,  4331,  1125,  1242,  1243,  3588,
    3024,  1778,  4463, -1697,  5197,  5198,  4466,   867,   867,   867,
    1271,  2124,  1126,  4344,  1219,  1127,  1219,  4514,  1274,  2973,
    1278,  1242,  1243,  1128,  4344,  1131,  2890,  2973,  1132,  4740,
    1574,  2973,  2973,  1235, -1697,  1138,   947,  2853,  4474,   645,
    3009, -1697,  2380,  1219,  1139,  2929,  4190,   961,   690,  2310,
    1007,  1007,  1238, -1697,  2786,  2787,  4492, -1697,   176, -1697,
    2380,  4538,  2125,  1238,  1219,  4324,  2126, -1697,  3122,  -689,
      63,  1219,  4555, -1697,  1574, -1697,  4331,  1140,  1141,  1219,
    4007,  2373,  1779,   869,   869,   869,  1426,  5173,  5175,  1142,
    5188,  1668,  2891,  1426,  2890,   750,  1028, -1697,  1143,  1029,
    3872,  4018,  3561,  2854,  1219,  1144,  1145,  1283,  4559,  1007,
    5188,  1575,  4331,  1846,   695, -1697,  1219,  4562,  1846,  1669,
   -1697,  4331,  1219,  2892,  1219,  4326,   979,  4469,  1219,  1007,
     646,  4576,  1282,  4578,  2855,  4577, -1697,  4577,  3676,  5188,
    4622, -1697,  1146,  3675,  4331,  1219,  1781,  4693,   980, -1697,
    1149,  4694,  1007,  1219,  4472,  4711, -1697,    42,  1150,  4324,
    2891, -1697,   961,  1151,  1152,   961,  -890,  3517,   866,  1576,
    2281,  4741,  1153,  1154, -1697,  4478,  1576,  3162,  1155, -1697,
   -1697,   996,  4480,  1205,  1238,  1156,  3162,  3162, -1697,   981,
    4481,  2926,  3162,  1157,  2893,  1158, -1697, -1697,  4846, -1697,
    1159, -1697,  1160,  1161,  -689,  2856, -1697,  1426,  1162,  1069,
    1163,  1242,  1243,  2633,  2277,  4482,   707,   647,  1164,  1168,
    1169,  2127,  1242,  1243,    42,  1172,  1285,  4483, -1697,  2278,
      49,  1293,  4723,  4563,  4789,  4708,  3495,  1238,  4790,  4710,
     946,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  1234,
     982,  1426,  1173,  1177,  1181,  -689,  4736,  2311, -1697,  4950,
    1182,  1183,  2927,  4951,  4895,  1246,  1247,  1248,  1249,  1250,
    1251,  1252,  1253,  3263,  2312,  3366,  1184,  2894,  1286,  4955,
    3862, -1697, -1697,  3622,  3340,  3341,  1185,  1782,  2857,  3823,
    1576, -1697,  4958, -1697, -1697,  1186,  4286,    49,  1187,   723,
    2128,    55,  1188,  3676,  4960,  1784,  4546,  4547,  4961,  4549,
    1189,  1190,  1292,  4969, -1697,  4594, -1697,  4970,  1296,  2853,
    1191,   648,  3028,   724,  3706,  1192,  2642,  3708,  4553,  4554,
    3845,  1007,  5036,  -689,  1576,  1193,  5037,   961,  5166,  2279,
    1194,  1195,  5167,  1242,  1243,  2928,  1196,  1197,  1007,  1198,
    3162,    54,  2973,  1847,  1199,  1200,  3873,  1235,  1262,  1294,
    1297,  1287,  1310,  1315,  2129,  1316,  1288,  2642,    55,  1007,
     996,  1322,  1205,  1326,  3366,  1668,  1339, -1697,   961,   961,
   -1697,  1329,  1347,   991,   991,  2854,  1349,   961,   961,   961,
    1352,  3935,   991,   991,   991,  1359,  1242,  1243,  1384,  1392,
    1398,  1453,  1313,  1669, -1697,  1454,  4959,  1456,  1457,  1289,
    1466,  1471,  1472,  3367,  1473,  1474,  2855,  1007,  1475,  1476,
    1477,  1478,   989,  1485,  1482,  1290,  1505,   867,  1488,  1518,
     649,  1522,  1026,  3368,  3928,    42,  3928,   899, -1697,  1546,
   -1697,  1567, -1697,  3339,  4681,  1661,  3369, -1697,  1658,  1702,
     650,  1291, -1697,  1703,  1706,  1246,  1247,  1248,  1249,  1250,
    1251,  1252,  1253,  1705,  1256,  1236,  3929,  1247,  1248,  1249,
    1250,  1251,  1252,  1253,  1738,  1745,  1756,   961,  4682,  3968,
    1759,  1794,   991,  1804,  1847,  1805,  2130,  2856,  1806,   989,
    1874,  1237,  1827,  1844,  1856,   651,  1857, -1807,  2895,  3854,
     652,  -839,  1235,   869,  1900,  1864, -1697,  4036,    49,  2858,
    1865,  1866,  3367,  1930,  1235,  4650,  2942,  1893, -1697,   670,
     750,  1901,  1934,  1948,  3995, -1953,  1950,  1974,  2131,  1470,
    3370,   653,  3368,  1995,  1996,   654,  1997,  1998, -1697,  2008,
   -1697,  2280,  2000,   655,  -689,  3369,  4672,  2009,  4673,  4674,
    2010,  4037,  2019,  4258,  2035,  4038,  2040,  4039,  -689,  2051,
    2055,  1238,  3340,  3341,  3737,  2056,  2929,  2058,  2061,  2278,
    2857,  2065,  2063,  2067,  1361,  4702,  2093,  3752,  2068,    55,
    1235,  2098,  1239,  1240,  2118,   656,  2119,  1246,  1247,  1248,
    1249,  1250,  1251,  1252,  1253,  2120,  4070,  4363,  3931,  2135,
    2141, -1697,  4683,  2138,   690,  4040,  2142,  2153,  2156,  1847,
    1235,  2157,  4078,  4079,  2158,  2169,  2170,  2171,  3149,  1496,
    1497,  2901,  2173,  4742,  1590,  1591,  2175,  1846,  2187,  3370,
    2189,  2890,  2973,  2973,  3953,  4691,  3066,  2902,  2191,   657,
    1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  4036,  1951,
    2192,  4290,  3371,  1952,  2193,  2195,  4746,  2196,  1241,  2281,
    1593,   694, -1697,  2209, -1697,  1235, -1697,  2211,  2212,  2217,
     695, -1697,  2220,  2213,  1596,  2214,  4108,  2215,  2216,  4112,
    1597,  1598,  2218,  -839,  1599,  -689,  1533,  2228,  3995,  4684,
    2232,  2233,  4382,  1953,  2252,  1602,  4038,  2891,  4039,  2260,
    3342,   700,  2261,  3995,  2262,  4133,  1238,  4685,  1601,  2264,
    2278,  2265,  2273,  1954,  2276,  2277,  2291,  2296,  1238,  2297,
    1242,  1243,  1602,   961,  3372,  2302,  1603,  2303,  2892,  2305,
    3366,  4686,  4153,  1244,  2317,  2320,  2315,  2327,  1259,  2328,
    2331,  2901,  2350,  -860,  -689,  2338,  4040,  2339,  2348,  2359,
    4849,  3371,  2351,  -547,  2360,  1608,  2362,  2902,  2361,  2269,
    4938,  2271,  2272,  2365,  1498,  1499,  2366,  4691,  2376,  2377,
    2380,  2424,   707,  2515,   174,  2379,  2286,  2426,  1955,  2292,
    2293,  2428,  2295,  2427,  1238,  2298,  2299,  2300,  2301,  2430,
    4259,  2858,  2304,  1950,  2431,  2432,  2433,  2316,  4924,  2893,
    2434,  2437,  2321,  2322,  2323,  2324,  2325,  2439,  2440,  2903,
    2329,  2330,  2444,  2450,  1238,  4946,  2340,  2341,  2342,  2343,
    2460,  2346,  2347,  3372,  2349,  2462,  2463,  2352,  3150,  2464,
    2478,  2480,  1612,  2485,  2486,  2488,  2489,  2495,   718,  1613,
     670,  5020,  2499,  1500,  1501,  1502,  1239,  4041,  1235,  2503,
     721,  2507,  4042,  1972,   722,   723,  1368,  2523,  4043,  1614,
    2524,  2529,  2532,  2533,  1847,  1242,  1243,  2544,  3367,  1238,
     175,  2545,  3151,  2546,  1956,  2554,  2553,  1242,  1243,  2556,
     812,  2570,  2894,  2724,  -860,  4145,   862,  2904,  3368,   176,
    2571,  1137,  1007,  2611, -1335,  2572,  3162,   961,  4044,  4003,
    1253,  3369,   991,  2598,   862,  2585,  2589,  2617,   942,  2594,
    1957,  2618,  2595,  2905,  1426,  2607,  1951,  2614,  4363,  1616,
    1952,  2619,   812,   986,  2636,   690,  2620,  2621,  2623,  2903,
    2622,  4687,  4027,  2635,  1958,  2637,  2640,  1617,  1245,  2095,
    4032,    42,  2667,  1242,  1243,  2669,  4849,  4062,  1682,  3850,
    2684,  3928,  2677,  2676,  2687,  2689,  3774,  2692,  2693,  1959,
    1953,  2694,   177,  2695,  1246,  1247,  1248,  1249,  1250,  1251,
    1252,  1253,  2696,  1242,  1243,  2906,  2043,  4045,  5143,  2719,
    1954,  2720,   694,  2727,  4339,  3370,  1372,  1239,  4041,  2739,
    2740,   695,  1621,  4042,  1373,  3995,  1846,  4322,   987,  4043,
    3995,  1622,  5170,  1960,  3995,   178,  2741,  2904,  4260,  2742,
    2743,  2744,  2748,  3517,    49,  2750,  2754,  2776,  2777,  2778,
    1846,  2779,   700,  2794,  1007,  5143,  2781,  4046,  1242,  1243,
    1239,  1240,  2795,  2905,  1961,  2792,  2801,  2802,  2796,  4044,
    2809,  2813,  2826,  1846,  2827,  1955,  4691,   961,   179,  5170,
    2815,  1007,  1238,  3152,   742,  2821,  2828,  2865,  4364,  2866,
    2869,  4365,  2879,  2874,  5094,  2887,  2910,  1846,  3340,  3341,
    2911,   748,  2985,  2987,  2912,  4927,   750,  2907,  3033,   751,
    1627,  3038,  3051,  3053,  4047,    55,  2890,   961,  4400,  4305,
      42,  3059,  3060,   707,  3149,  2906,  3067,  3069,  3070,  3071,
    1590,  1591,  3115,  2895,  3072,  3073,  3074,  3371,   630,  1246,
    1247,  1248,  1249,  1250,  1251,  1252,  1253,  3075,  4045,  3076,
    4870,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  3077,
    3078,  3079,  3080,  4108,  3081,  3082,  1593,  1628,  1629,  1630,
    3083,  1956,  3084,  3085,  1631,  3743,  3086,  3747,  3118,  4410,
    1596,  3087,  2891,  3088,  3089,  3090,  1597,  1598,  3995,   718,
    1599,  1632,  3091,    49,  1633,  3092,  3093,  3094,  4046,  3095,
     961,   816,  3096,  3097,  3162,   722,   723,  1957,  5209,  3372,
    3098,  3101,   180,  2892,  1601,  1368,  4048,  1246,  1247,  1248,
    1249,  1250,  1251,  1252,  1253,  3102,  3103,  2907,  1602,  3104,
    1635,  1958,  1603,  3105,  3106,  3107,  3342,  3114,  1569,  4355,
    -691,  1242,  1243,  3139,  1493,  3148,  3167,    54,  3175,  1248,
    1249,  1250,  1251,  1252,  1253,  4047,  1959,  2648,  2724,  -547,
     817,  1608,  4366,  4367,    55,  3184,  3207,  1007,  3221,  1116,
    4368,  3208,  3209,  4502,  3223,  4261,  3238,  2803,  3269,  4399,
    1259,  1847,  3271,  2649,  2893,  1166,  3873,  4511,  3275,  3119,
    1569,   181,  1007,   818,  3301,  1170,  1570,  3315,  2650,  3162,
    1960,  5192,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,
   -2160,  2651,  3317,  3316,  3318,  3334,  3320,  3352,  3263,  1213,
    1214,  3338,  3323,  3355,  3356,  3364,  4927,  3365,   819,  3378,
    4535,  1961,  3384,  3387,  3150,  3392,  3399,  3401,  1612,  3403,
    3405,  3119,  3418,  3417,  3419,  1613,  3420,  3428,  1570,  3433,
    3422,   639,  1638,  3425,   640,  3427,   182,  4048,   183,  3434,
    3435,  3456,  4459,  2652,  2653,  1614,  3457,  2894,  3460,  2886,
   -1953,  3995,  3478,  3479,  1259,  3995,  3473,  3474,  3475,   820,
    3476,  -691,  3477,  1007,  3501,  3153,  3502,  3503,  -547,  3120,
    2308,  2654,   184,  3510,  3512,  3511,  3121,  3505,  3587,  3590,
    2277,  3582,  3591,  3598,   185,   742,  2814,  3595,  3615,  4364,
    3599,  3606,  4365,  3716,  3620,  2309,  3621,  1765,  1766,  1767,
    1768,  1769,   748,  1259,  3618,  1616,  1007,   750,  3622,  3691,
     751,  3619,  3624,  3662,  2021,  3665,  3668,  3671,  3674,  3748,
    3689,  3120,  3724,  1617,  2022,  3734,  5206,  3738,  3121,  1572,
    3740,  3749,  3751,  3766,  2023,  3744,  3767,  3755,  3756,  3753,
    2655,  3757,  3805,  3808,  4108,  3809,  4112,  4605,  2024,  2025,
    2026,  3813,  3162,  3814,  4649,  5206,  2414,  2415,  2416,  2417,
    2418,  2419,  2420,  3816,  2027,  1246,  1247,  1248,  1249,  1250,
    1251,  1252,  1253,  4153,  1615,  2940,  1225,  1226,  1621,  3830,
     186,  1572,  4630,  1587,   987,  4001,  4002,  1622,  -108,  1426,
    4009,  3838,  3839,   821,  2656,  3843,  3847,  3856,  3860,  2310,
    3861,  3877,  2980,  3874,  1770,  1771,  1772,  1773,  3185,  3878,
    3883,  3884,  3885,  3886,  3887,  1573,  3888,  1227,  3894,  2993,
    3895,  3896,  1007,  3908,  3909,  3914,  4031,  3922,  3932,   961,
    1228,  3933,  4058,  4060,  4061,  3186,  3936,  3743,  3937,  3152,
    3952,  1668,  3938,  3955,   812,  2973,  3957,  2973,  3964,   812,
    3970,  3974,  3975,  3036,  3037,  3978,  3122,  3981,  3983,  3986,
    3989,  3050,  1574,  4366,  4367,  4033,  1627,  1573,  2895,  1669,
    1229,  4396,   822,  3990,  4015,  4067,    42,  4068,  4094,   812,
    4026,  4083,  4127,  1230,  4063,  3187,  4073,  4082,  3188,  4149,
    4139,  4144,   823,  4156,  4154,   812,  3189,  4164,  4166,  4173,
    4179,  4180,  4192,  4193,  4705,  4196,  4197,  4202,  3122,  4207,
    1231,  4223,  4224,  4229,  1574,  3190,  1774,  4231,  1775,  1776,
    1777,  4234,  4236,  1628,  1629,  1630,  4235,  1778,  4237,  4245,
    1631,  4108,  4108,  4243,  4279,  4248,  4252,   824, -1591,  4764,
    4253, -1590,   652,  3142,  4274,  4256,  4208,  1632,  4257,    49,
    1633,   812,   812,  4294,   812,   812,  4209,  4299,  2181,  4308,
     825,  4309,  3191,  4310,  4311,  3468,  4210,   812,  1216,  4327,
    4336,  1217,  4340,   826,  4346,  1232,  4373,  4374,  4379,  2947,
    4211,  4212,  4213,  -692,  4384,   827,  1635,  4386,  3263,  4057,
    4393,  4654,  2028,  4401,  4402,  4404,  4214,  4408,  4405,  1534,
    4412,   828,  4411,    54,  4414,  4447,  4446,  4449,  1779,  2029,
    4444,  4475,  4476,  4477,  4423,  4433,  4486,  4448,  3995,  4461,
      55,  4462,  4463,  4487,  2312,  4464,  4493,   829,  4470,  4465,
    4467,  4468,  4496,  3192,  4494,  4497,  4498,  4505,  4504,  1426,
    4485,  2871,  4512,  4518,  4968,  4519,  4521,  4971,  4539,  4523,
    4286,  4544,  4545,  4548,  4550,  4551,  1022,  4556,  4580,   812,
     721,  4573,  4586,  4588,  4589,  4466,  3613,  4595,  4597,  4601,
    4619,  1780,  1781,  4628,  4607,  1847,  4620,  4864,  4631,  4632,
    4636,   830,  4608,  4640,  3066,  3066,  4635,  5018,  4629,  3928,
    4648,  1426,  4653,  4637,  1176,  4659,  2597,  4663,   812,  4664,
    4665,  4706,  4675,  4700,  4887,  4709,  4715,  4717,  1638,  4720,
    4726,  4730,   862,  4734,  4892,  4735,  4737,  4749,  4751,  4753,
    4760,  4528,  1576,  4754,  4901,   942,  4761,  3193,  4755,  4908,
    3194,  4756,  3259,  4765,  4766,  4773,  4775,  4770,  4776,  4781,
    4784,   989,  4794,   119,  -547,  4835,  4797,  2030,   114,  4844,
     112,  4965,  4836,  4853,  4851,  4856,  4854,  4857,  4858,  4866,
    4108,   196,  4867,  4873,  4888,  4874,  4897,  -437,  4915,  4918,
    4917,  4919,  4920,  4935,  1576,  4949,  4947,  4954,   863,  4956,
    4983,  4986,  -455,  5011,  5012,  5013,  5016,  5014,  5022,  5024,
    5026,  5023,  4668,  5030,  5040,  5043,   863,   866,  5044,  5051,
    5052,  5056,  5069,  5066,  5072,  5073,  5074,  5079,  3195,  2031,
    5081,  5083,  1007,  1782,  5084,  1007, -2571,  5087,  5095,  5097,
    5104,  5107,  5109,  5117,  4215,  5120,  2032,  5119,  4987,  1219,
    1783,  1784,  5124,  5126,  5125,  5130,  5135,  5144,   812,  5154,
    5158,  4216,  5176,  5160,  5163,  5164,  5177,  5181,   788,  5182,
    5184,  5191,  5193,  5194,  5195,  1007,  5196,  5214,  4910,   862,
    3834,  3673,  3664,  3667,  4602,  4604,  4606,   812,   812,  3670,
    4126,  3661,  3980,  4614,  1729,  4864,   812,   812,   812,   812,
     812,   812,  3196,  4624,  4840,  2263,  4922,  5062,  4732,   812,
     812,  5063,   812,   812,  4626,  5215,  5165,   812,   812,  5186,
     954,   812,   812,   812,   812,  1437,   812,   812,  3350,  3308,
    4222,  4965,  4830,  5199,   812,   812,  4808,   812,   812,   812,
     812,   812,  4809,  4811,   812,   812,   812,   812,   812,   812,
     812,   812,   812,  5101,   812,  5049,  4812,   812,   812,  5102,
    5092,  5060,   812,  4138,  4814,  4815,   812,   812,   812,  4816,
    2935,  4817,  3197,  4818,  4819,  4822,  5061,  1577,  4823,   812,
     812,   812,  4217,  3833,   812,  4824,  2939,   812,   812,   812,
     812,   812,   812,  4432,  4320,  3113,  4445,  3712,  3711,  4218,
    3198,  4666,  4288,  3715,  5033,  4558,   812,   812,  4831,  5039,
    5071,  4783,  5038,  4148,   812,  3111,   812,   812,  3041,  3471,
    3710,  4830,  4830,  4335,  5106,  4334,  4381,  4066,   812,   812,
     812,  5114,   812,   812,  4019,  4064,   812,   812,   812,  4579,
    5045,   812,   812,   812,   812,   812,   812,   812,   812,  4383,
    4860,  3807,   812,  4678,  4785,  4692,  4722,   812,  4725,  4699,
    3509,  4219,  3576,  4572,  1847,  2448,  1590,  1591,  4347,  4142,
    5156,  3454,   862,  3444,  4592,  5161,   867,  3702,  4220,  2250,
    3044,  2793,  3045,  3042,  1007,  1448,  2791,  4081,  1847,  3337,
    3335,  3623,  3581,  2425,  2374,  3853,  4233,  4831,  4831,   994,
    -841,  -841,  1593,  3324,   862,  2870,  3287,  1358,  2718,  2593,
    -841,  1847,  1357,  2563,  3818,  4762,  1596,  4744,  5021,  3204,
    3360,  3361,  1597,  1598,  1803,  5068,  1599,  5207,  5174,  4830,
    4830,  1590,  1591,  5172,  4661,  1847,  4829,  5029,  3362,  4526,
    3363,  1876,  4868,  4101,  1755,  4276,  4830,   114,  4763,   112,
    1601,  4869,   869,  2166,  4533,   862,  5207,  1455,  4639,  4077,
    4677,  4738,   812,   831,  1602,  3296,  3911,  1593,  1603,  2600,
    3609,  2873,  3851,  4513,  3852,  1549,  1550,  2165,  4244,  4501,
    3849,  1596,  1994,  1551,  4506,  1545,  2249,  1597,  1598,  3407,
    1552,  1599,  2767,   942,  3408,   812,  1431,  1608,  3303,  3602,
    2691,  3859,  2782,  4552,  4312,  4831,  4831,  5067,  5190,  4830,
    4397,  5210,  4510,  4662,  5027,  1601,  4439,  3467,  3652,  1877,
    5025,  2738,  4831,   950,  4830,  4829,  4829,  3397,  2749,  1602,
    2079,   951,  2078,  1603,  2735,  2734,   911,  4830,  3692,  3693,
    3694,  3695,  1351,  3439,  3140,  3331,  2208,  3141,   812,  4647,
    4748,  1356,  2042,   661,   662,  1765,  1766,  1767,  1768,  1769,
    1732,  1733,  1608,  1734,  1984,  1535,  4830,   812,  5034,  4442,
    4143,  4403,  4621,  4088,  1612,     0,     0,     0,  4830,  4830,
       0,  1613,     0,     0,     0,  4831,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4830,     0,     0,     0,
    4831,  1614,     0,     0,     0,     0,  4830,     0,     0,     0,
       0,  4830,     0,  4831,     0,  5017,     0,   812,     0,     0,
       0,     0,     0,     0,     0,  4830,     0,  4830,     0,     0,
       0,     0,     0,  4829,  4829,     0,     0,     0,     0,  1612,
       0,     0,  4831,  4830,     0,  4830,  1613,  4830,     0,     0,
    4829,     0,     0,     0,  4831,  4831,     0,     0,     0,     0,
       0,  1616,  1770,  1771,  1772,  1773,  1614,     0,     0,     0,
       0,     0,  4831,  4830,     0,     0,     0,     0,  5055,  1617,
       0,     0,  4831,     0,     0,     0,     0,  4831,     0,     0,
       0,     0,     0,  5055,     0,  4830,  4830,     0,     0,     0,
       0,  4831,     0,  4831,     0,     0,  5064,     0,     0,     0,
       0,     0,     0,  4829,     0,  4830,  4830,     0,     0,  4831,
    4830,  4831,     0,  4831,     0,     0,  1616,     0,  4829,     0,
       0,     0,     0,     0,  1621,     0,     0,     0,     0,     0,
       0,  4829,     0,  1622,  1617,     0,     0,     0,     0,  4831,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  5055,     0,     0,     0,     0,
    4829,  4831,  4831,     0,  1774,  5116,  1775,  1776,  1777,     0,
    5118,     0,  4829,  4829,     0,  1778,     0,     0,     0,     0,
       0,  4831,  4831,     0,     0,     0,  4831,     0,     0,  1621,
    4829,     0,     0,     0,     0,     0,     0,     0,  1622,     0,
    4829,     0,     0,     0,  5055,  4829,  5055,     0,     0,     0,
       0,     0,  1627,     0,     0,     0,     0,  1099,     0,  4829,
       0,  4829,     0,     0,     0,     0,   812,     0,     0,     0,
     812,     0,  5055,     0,     0,     0,     0,  4829,   812,  4829,
     812,  4829,     0,     0,     0,     0,     0,  1130,     0,     0,
       0,     0,     0,     0,     0,     0,  1779,     0,     0,     0,
       0,     0,     0,  1147,     0,     0,     0,  4829,     0,  1628,
    1629,  1630,     0,     0,  5055,  5055,  1631,  1627,     0,  5213,
     812,     0,     0,     0,     0,     0,     0,     0,     0,  4829,
    4829,     0,     0,  1632,     0,     0,  1633,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4829,
    4829,     0,     0,     0,  4829,     0,     0,     0,     0,  1780,
    1781,     0,     0,  1207,   812,   812,   812,     0,     0,     0,
       0,     0,  1635,     0,  1628,  1629,  1630,     0,     0,     0,
       0,  1631,     0,     0,     0,     0,     0,     0,  1319,     0,
       0,     0,     0,     0,   812,     0,     0,     0,  1632,   812,
       0,  1633,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   812,     0,
       0,     0,     0,     0,     0,   812,     0,     0,     0,     0,
     812,     0,   812,     0,     0,     0,     0,  1635,   812,     0,
     812,   812,     0,     0,   863,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1321,     0,     0,
       0,     0,  1319,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1638,     0,     0,     0,     0,     0,
       0,  1782,     0,     0,     0,     0,   788,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1783,  1784,
       0,     0,     0,     0,  4123,  4124,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1638,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     862,   863,     0,   862,     0,     0,     0,     0,     0,     0,
     942,   812,     0,     0,     0,   812,     0,     0,   942,     0,
       0,   812,     0,     0,     0,     0,     0,     0,     0,     0,
     812,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1736,  1737,     0,     0,     0,
       0,     0,     0,     0,  1747,  1748,     0,     0,  1751,  1752,
       0,     0,     0,     0,     0,     0,     0,  1760,  1761,     0,
    1762,  1763,     0,     0,     0,  1787,     0,     0,     0,  1796,
    1797,  1798,  1799,     0,  1801,     0,     0,     0,     0,     0,
     862,     0,  1809,  1810,     0,  1813,  1814,     0,     0,     0,
       0,     0,  1818,     0,     0,  1821,  1822,  1823,  1824,  1825,
    1826,     0,  1828,     0,     0,  1831,  1832,     0,     0,     0,
    1835,     0,     0,     0,  1838,  1842,  1843,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1850,  1851,  1852,
       0,     0,     0,     0,     0,  1858,  1859,  1860,  1861,  1862,
       0,     0,     0,     0,   863,     0,     0,     0,     0,     0,
       0,     0,     0,  2933,  1875,   788,  2933,  2933,     0,     0,
       0,     0,  1879,     0,  1880,  1881,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   863,     0,     0,  3039,
       0,     0,  1319,     0,  1587,     0,  1588,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  2007,     0,     0,  1590,
    1591,     0,     0,     0,     0,  1921,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   863,     0,     0,
    1592,     0,     0,     0,     0,  1593,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1596,
       0,     0,     0,     0,     0,  1597,  1598,     0,     0,  1599,
       0,     0,     0,     0,     0,   812,     0,     0,  1600,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1601,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1602,     0,     0,
       0,  1603,     0,     0,     0,     0,     0,     0,     0,  1604,
    2053,     0,     0,     0,     0,     0,  3040,     0,     0,     0,
       0,     0,     0,     0,  1607,     0,     0,     0,     0,     0,
    1608,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   812,  2091,     0,     0,     0,     0,     0,     0,
       0,   812,   812,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1610,     0,     0,     0,     0,     0,
       0,   812,   812,     0,   812,     0,     0,   812,   812,   812,
     812,   812,     0,     0,   812,     0,     0,     0,     0,     0,
       0,     0,     0,   812,     0,     0,  2161,     0,   812,     0,
     812,     0,   812,   812,     0,   812,   812,  1612,     0,     0,
     812,   812,   812,     0,  1613,  2180,   812,   812,   812,     0,
     812,     0,   812,     0,   812,     0,   812,     0,   812,     0,
       0,     0,     0,   812,  1614,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   812,
       0,     0,     0,     0,     0,     0,     0,  1615,     0,     0,
       0,     0,     0,     0,     0,  2234,   812,     0,   812,     0,
     812,     0,     0,     0,   812,     0,     0,     0,     0,     0,
     812,   812,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1616,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1617,     0,     0,     0,  1618,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     1,
       0,     0,     2,     0,     0,     0,   812,     0,     0,     0,
    1620,     0,     0,     0,     0,     0,     0,  1621,     0,     0,
       0,     4,     0,     0,     0,     0,  1622,     0,     0,     0,
       0,     0,     0,     0,     0,     5,     6,     0,     0,     0,
       0,     0,     0,     7,     0,     0,     0,     0,     8,     9,
       0,     0,     0,     0,   862,   862,   862,     0,     0,     0,
       0,     0,     0,     0,    10,     0,     0,     0,     0,     0,
       0,     0,     0,  1624,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   942,    11,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1627,    12,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    13,    14,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,    15,    16,
       0,   812,     0,     0,  2461,     0,     0,     0,  2465,     0,
       0,   812,     0,   812,     0,     0,     0,     0,  2461,     0,
       0,     0,     0,     0,     0,    18,     0,     0,     0,     0,
       0,     0,  1628,  1629,  1630,     0,     0,     0,     0,  1631,
       0,     0,     0,     0,     0,    19,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  1632,     0,     0,  1633,
       0,     0,     0,    20,     0,    21,     0,     0,     0,     0,
      22,     0,     0,    23,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   812,     0,     0,     0,    24,     0,
       0,     0,     0,     0,  4698,  1635,    25,     0,     0,    26,
       0,     0,  2536,  2538,  2540,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    27,
       0,     0,     0,     0,     0,     0,  1330,  1401,     0,  1636,
       0,     0,  1637,     0,     0,     0,    28,  2574,     0,     0,
      29,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1402,   928,     0,     0,  2582,     0,     0,     0,
       0,     0,     0,  1403, -1961,     0,     0,     0,  2586,     0,
    2587,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2662,  2663,     0,     0,     0,     0,  1404,     0,
    1405,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1406,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4774,     0,     0,  4777,  4778,  4779,  4780,  1638,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,    30,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0, -1953,  1407,
       0,     0,   863,     0,  1408,   863,     0,  1409,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1410,     0,     0,
      31,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    32,     0,     0,     0,     0,     0,     0,     0,  1411,
       0,  1412,     0,     0,     0,  4872,     0,     0,     0,     0,
    1413,     0,  1414,    33,  4882,  4883,    34,     0,    35,     0,
       0,    36,     0,  4891,     0,     0,     0,     0,     0,     0,
       0,    37,    38,     0,     0,     0,     0,     0,     0,     0,
       0,    39,     0,    40,     0,     0,     0,     0,     0,  2746,
       0,     0,    41,  2091,   862,     0,     0,     0,    42,     0,
       0,     0,     0,     0,     0,     0,    43,     0,  2753,     0,
       0,    44,    45,    46,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1415,     0,     0,     0,     0,   812,     0,
       0,     0,   863,     0,     0,     0,   812,     0,     0,     0,
       0,     0,     0,     0,    47,     0,     0,     0,  2845,     0,
    2845,    48,  2860,  2861,     0,  2863,     0,  1416,     0,     0,
       0,     0,     0,   812,   812,     0,     0,     0,     0,     0,
       0,    49,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   812,
       0,     0,     0,     0,     0,    50,     0,     0,     0,   812,
       0,   812,  2923,   812,     0,     0,  2934,    51,     0,     0,
       0,    52,     0,     0,     0,     0,     0,     0,     0,    53,
       0,     0,  1417,     0,     0,    54,     0,     0,     0,     0,
       0,     0,     0,     0,   812,  2975,  2976,  2977,  2978,   812,
       0,   812,    55,     0,     0,     0,     0,     0,     0,  1418,
      56,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1419,  1420,     0, -1957,  1421,  1422,     0,  3012,     0,     0,
       0,     0,     0,     0,     0,   812,     0,     0,     0,     0,
       0,    61,     0,     0,     0,  1423,     0,     0,     0,     0,
    2381,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   812,     0,     0,     0,     0,     0,     0,    62,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1424,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   812,  1425,  2382,  2383,  2384,  2385,  2386,  1496,  1497,
    2387,  2388,  2389,    63,  2390,  2391,  2392,  2393,  2394,  2395,
    2396,  2397,  2398,  2399,     0,  2400,  2401,     0,     0,     0,
       0,     0,   812,     0, -2639,     0,     0,     0,  1426,     0,
       0,     0,     0,  3068,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0, -1961,     0,     0,  1427,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0, -1957,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   812,     0,     0,     0,
       0,     0,     0,     0,     0, -2639,     0,     0,     0,     0,
    3174,     0,  1428,     0,     0,     0,     0,     0,     0,  3182,
    3183,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3210,
    3211,     0,  3212,  1498,  1499,  3215,  3216,  3217,  3218,  3219,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3225,     0,     0,     0,     0,  3226,     0,  3227,     0,
    3228,  3229,     0,  3230,     0,     0,     0,     0,  3235,  3236,
    3237,     0,     0,     0,  3240,  3241,  3242,     0,  3243,     0,
    3245,     0,  3247,     0,  3249,     0,  3250,     0,     0,     0,
       0,  3253,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3285,     0,     0,     0,     0,     0,  1921,  3333,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  2933,  2933,
       0,     0,     0,     0,     0,     0,   863,   863,   863,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3332,     0,     0,  3398,   812,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   812,
       0,   812,     0,     0,   812,   812,     0,   812,     0,     0,
       0,  2845,     0,     0,     0,     0,     0,     0,   812,     0,
       0,     0,     0,   812,     0,     0,   812,     0,     0,   812,
     812,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  2402,
    2403,   812,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   812,     0,     0,     0,     0,     0,     0,
    2404,     0,  2405,  2406,  2407,  2408,  2409,     0,     0,  2410,
       0,     0,  3455,     0,     0,     0,     0,     0,     0,  2161,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   812,
       0,     0,     0,     0,     0,     0,     0,     0,  3472,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3480,
       0,  3487,  3488,  3489,  3490,     0,  3492,  3493,     0,     0,
       0,     0,     0,   812,   812,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  2234,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3586,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3592,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3518,  3519,     1,     0,     0,
       2,  3520,     0,  3521,     0,  3522,  3523,     0,     0,     0,
       0,     0,     0,     0,     0,     3,     0,     0,  2845,     4,
       0,  2845,  2845,  3524,     0,  2845,  2845,  2845,  2845,  2845,
    2845,  2845,  2845,     5,     6,  2845,     0,  2845,     0,  2845,
    3648,     7,     0,  2845,     0,     0,     8,     9,     0,     0,
       0,     0,     0,     0,     0,     0,   812,   812,     0,     0,
       0,     0,    10,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3525,     0,     0,  3526,     0,     0,     0,
       0,     0,    11,     0,  3527,     0,   863,     0,  2933,  2933,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3190,    12,     0,     0,     0,     0,     0,
       0,     0,     0,     0,    13,    14,     0,     0,     0,     0,
    3528,     0,     0,     0,     0,     0,    15,    16,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    17,
       0,     0,     0,     0,     0,     0,     0,     0,  3529,     0,
    3530,     0,     0,    18,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3531,  3532,     0,     0,
       0,     0,     0,    19,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    20,     0,    21,     0,     0,  3729,     0,    22,     0,
       0,    23,     0,   812,  3732,     0,     0,     0,  3533,     0,
       0,     0,     0,     0,     0,     0,    24,     0,     0,     0,
       0,  3534,     0,   812,    25,   812,     0,    26,     0,     0,
       0,  3760,  3761,     0,     0,     0,     0,     0,     0,     0,
    3535,     0,     0,     0,     0,     0,     0,    27,     0,  3536,
    3537,     0,  3538,     0,     0,     0,     0,  3786,     0,     0,
       0,     0,     0,     0,    28,     0,     0,  3797,    29,  3799,
       0,  3801,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3539,
    3540,  3541,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3542,  3543,
    3544,     0,     0,     0,     0,  3545,     0,     0,  3546,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   812,     0,     0,  3547,  3548,     0,     0,
       0,     0,     0,  2161,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   812,     0,     0,     0,    30,     0,     0,     0,     0,
    3549,  3550,     0,     0,     0,     0,     0,     0,     0,  3881,
       0,     0,     0,     0,  3945,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3195,     0,    31,     0,
       0,     0,     0,  3956,     0,     0,     0,     0,     0,    32,
       0,     0,     0,     0,     0,     0,     0,     0,  3973,  2091,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    33,     0,     0,    34,   812,    35,     0,   812,    36,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    37,
      38,   812,     0,     0,     0,     0,     0,     0,  3551,    39,
       0,    40,  3552,     0,     0,     0,     0,     0,     0,     0,
      41,     0,     0,     0,  3553,     0,    42,     0,     0,     0,
       0,     0,     0,     0,    43,     0,     0,     0,     0,    44,
      45,    46,     0,   812,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,    47,     0,  3987,     0,     0,     0,     0,    48,
       0,     0,     0,     0,  3554,     0,     0,  3555,     0,     0,
    3556,  3557,  3558,  3559,     0,     0,     0,     0,     0,    49,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,    50,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3560,  3561,    51,     0,     0,     0,    52,
       0,     0,     0,     0,     0,     0,     0,    53,     0,     0,
       0,     0,     0,    54,     0,   812,     0,     0,     0,     0,
       0,  3562,     0,     0,     0,  2845,     0,     0,     0,     0,
      55,     0,     0,     0,     0,     0,     0,     0,    56,     0,
     812,     0,     0,     0,     0,     0,     0,     0,     0,  4134,
       0,     0,     0,     0,    57,    58,    59,    60,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,    61,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   812,     0,     0,     0,     0,  4826,
       0,     0,     0,     0,     0,  4837,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,    62,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   812,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  5131,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,    63,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4158,     0,     0,     0,
       0,     0,   812,     0,     0,     0,     0,     0,  4826,  4826,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  4169,     0,  2234,
       0,     0,  4174,  4175,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  4182,     0,     0,     0,
     812,  4184,     0,     0,  4185,     0,     0,  4186,  4187,     0,
       0,     0,     0,   862,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4199,
       0,     0,   812,     0,     0,  1586,     0,     0,     0,     0,
    1587,     0,  1588,     0,     0,  1589,     0,     0,     0,     0,
       0,     0,   812,     0,   812,  1590,  1591,     0,     0,     0,
       0,     0,     0,     0,   812,     0,  4826,  4826,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4826,     0,     0,  1592,  2161,     0,  -841,
    -841,  1593,  1594,     0,  4307,     0,     0,  1595,     0,  -841,
       0,     0,     0,     0,     0,  1596,     0,     0,     0,     0,
       0,  1597,  1598,     0,     0,  1599,     0,     0,     0,     0,
       0,  4270,  4273,     0,  1600,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1601,
       0,     0,     0,     0,   812,     0,  4826,     0,     0,     0,
       0,     0,     0,  1602,     0,     0,     0,  1603,     0,     0,
       0,  4826,   812,     0,     0,  1604,  1605,     0,     0,     0,
       0,     0,  1606,     0,  4826,     0,  4362,     0,     0,     0,
    1607,     0,     0,     0,     0,     0,  1608,     0,     0,     0,
       0,     0,   812,     0,     0,     0,     0,  1609,     0,     0,
       0,     0,   812,  4826,  4329,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  4826,  4826,     0,     0,     0,
    1610,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  4826,     0,     0,     0,     0,     0,     0,
     812,     0,     0,  4826,     0,     0,     0,     0,  4826,     0,
       0,     0,     0,     0,     0,   812,     0,     0,     0,     0,
       0,  1611,  4826,  1612,  4826,     0,  2845,  2845,  2845,  2845,
    1613,     0,     0,     0,     0,     0,     0,  3945,     0,     0,
    4826,     0,  4826,     0,  4826,     0,     0,     0,     0,     0,
    1614,  4451,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4406,  4407,     0,     0,     0,     0,
    4826,     0,     0,  1615,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4826,  4826,     0,     0,     0,     0,     0,   812,
       0,     0,     0,     0,     0,     0,     0,   812,     0,     0,
    1616,     0,  4826,  4826,     0,     0,     0,  4826,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1617,     0,
       0,     0,  1618,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1619,     0,     0,     0,     0,     0,  1620,     0,     0,     0,
       0,     0,     0,  1621,     0,     0,     0,     0,     0,     0,
       0,  4540,  1622,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  2161,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1623,     0,     0,     0,     0,     0,
       0,  4520,     0,  4522,     0,     0,     0,     0,     0,  1624,
    1625,  1626,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  1586,     0,     0,
       0,     0,  1587,     0,  1588,     0,     0,  1589,     0,     0,
       0,  1627,     0,     0,     0,     0,     0,  1590,  1591,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  1592,  4596,
       0,     0,     0,  1593,  1594,     0,     0,     0,     0,  1595,
       0,     0,  2845,     0,     0,     0,     0,  1596,  1628,  1629,
    1630,     0,     0,  1597,  1598,  1631,     0,  1599,     0,     0,
       0,  4584,     0,  4623,     0,     0,  1600,     0,     0,     0,
       0,     0,  1632,     0,     0,  1633,     0,     0,     0,     0,
       0,  1601,     0,     0,     0,     0,     0,     0,     0,  4590,
       0,     0,     0,     0,     0,  1602,     0,     0,  1634,  1603,
       0,     0,     0,     0,     0,     0,     0,  1604,  1605,     0,
       0,  1635,     0,     0,  1606,     0,     0,     0,     0,     0,
       0,     0,  1607,     0,     0,     0,     0,     0,  1608,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  1609,
       0,     0,     0,     0,     0,  1636,     0,     0,  1637,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1610,  2234,     0,     0,  4634,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  4270,
       0,  4697,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1611,     0,  1612,     0,     0,     0,     0,
       0,     0,  1613,     0,     0,     0,     0,     0,     0,     0,
       0,  4270,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1614,  1638,  1639,  1640,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1615,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1616,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1617,     0,     0,     0,  1618,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  2234,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  1619,     0,     0,     0,     0,     0,  1620,     0,
       0,     0,     0,     0,     0,  1621,     0,     0,     0,     0,
       0,     0,     0,     0,  1622,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  4881,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4796,     0,     0,     0,  1623,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  1624,  1625,  1626,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  4852,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1627,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   863,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4896,     0,     0,     0,     0,     0,     0,     0,     0,  4966,
    4967,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1628,  1629,  1630,     0,     0,     0,     0,  1631,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  1632,     0,     0,  1633,  4933,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    1634,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  1635,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    4981,     0,  4982,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  4990,     0,     0,     0,     0,  1636,     0,     0,
    1637,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  5053,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  1638,  1639,  1640,     0,     0,
    5058,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    5077,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     198,   199,     0,   666,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   667,     0,
     208,   209,   210,   211,   668,   213,     0,   214,  5108,     0,
     669,   215,   670,   671,   672,   216,   673,     0,   217,   218,
     219,     0,   220,  5123,   221,   222,     0,     0,   223,   674,
     675,   224,   225,     0,   226,   227,   676,   677,   229,     0,
     230,   231,   232,   233,   678,   235,     0,   679,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,   680,   681,   256,     0,     0,     0,   682,   257,   683,
       0,   258,   684,   685,     0,   259,   260,   261,   686,   687,
     688,     0,     0,     0,     0,   689,   264,   690,     0,     0,
     691,   265,   266,     0,   267,     0,     0,  5208,     0,     0,
     268,   269,   270,   271,   272,  2161,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   692,     0,   291,   292,
     293,   294,   295,   693,   694,   296,   297,     0,   298,   299,
     300,   301,   302,   695,     0,   303,   304,     0,     0,     0,
     696,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     697,   311,   698,     0,   313,     0,   314,     0,   699,     0,
     315,   316,     0,   317,   700,     0,   318,   319,     0,     0,
       0,   701,   321,   322,   323,   702,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,   703,   328,   329,   330,
     704,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,   705,   341,   342,     0,
       0,     0,     0,     0,   706,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   707,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   708,   371,   372,   373,   374,   709,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     710,   382,     0,     0,   711,   384,   712,   385,     0,   386,
     713,   714,   715,   716,   717,   391,   392,   393,   394,   395,
       0,   718,   396,   397,     0,     0,   398,   399,   400,   401,
     402,   719,   720,   721,   403,   404,     0,   722,   723,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,   724,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   725,   726,   426,   727,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   728,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
     729,   730,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     731,     0,   732,   470,   471,   472,   473,     0,   474,   733,
     734,   476,   477,   478,   479,     0,   735,   481,    42,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,   736,
     737,   510,   511,     0,     0,   512,   513,   738,   515,   516,
     517,   739,   740,   518,   519,   520,   521,   741,   522,   523,
       0,    49,   524,   525,   526,   527,     0,   742,   528,   529,
       0,   743,   744,   745,   746,     0,     0,     0,     0,     0,
     534,   535,     0,   747,   748,   749,   537,   538,     0,   750,
     539,   540,   751,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   752,   549,     0,
       0,   753,   754,   755,   550,  1204,   551,     0,     0,   552,
     757,     0,   758,   553,     0,   554,   555,   759,   760,     0,
       0,     0,    55,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   761,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
     762,   763,     0,   572,   573,   574,   764,   575,   576,   577,
       0,   578,   765,   766,   579,   767,   580,     0,   768,   769,
     770,   771,   772,   581,   582,     0,   773,   583,   774,   584,
     775,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,     0,
       0,     0,     0,     0,     0,   776,   777,     0,     0,     0,
       0,   779,     0,   780,     0,     0,     0,   781,     0,     0,
       0,   782,   783,   198,   199,     0,   666,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   667,     0,   208,   209,   210,   211,   668,   213,     0,
     214,     0,     0,   669,   215,   670,   671,   672,   216,   673,
       0,   217,   218,   219,  1839,   220,     0,   221,   222,     0,
       0,   223,   674,   675,   224,   225,     0,   226,   227,   676,
     677,   229,     0,   230,   231,   232,   233,   678,   235,     0,
     679,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   680,   681,   256,     0,     0,     0,
     682,   257,   683,     0,   258,   684,   685,     0,   259,   260,
     261,   686,   687,   688,     0,     0,     0,     0,   689,   264,
     690,     0,     0,   691,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   692,
       0,   291,   292,   293,   294,   295,   693,   694,   296,   297,
       0,   298,   299,   300,   301,   302,   695,     0,   303,   304,
       0,     0,     0,   696,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   697,   311,   698,     0,   313,     0,   314,
       0,   699,     0,   315,   316,     0,   317,   700,     0,   318,
     319,     0,     0,     0,   701,   321,   322,   323,   702,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   703,
     328,   329,   330,   704,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,  1840,   340,     0,   705,
     341,   342,     0,     0,     0,     0,     0,   706,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   707,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   708,   371,   372,
     373,   374,   709,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   710,   382,     0,     0,   711,   384,   712,
     385,     0,   386,   713,   714,   715,   716,   717,   391,   392,
     393,   394,   395,     0,   718,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   719,   720,   721,   403,   404,     0,
     722,   723,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   724,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   725,   726,   426,
     727,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   728,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   729,   730,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   731,     0,   732,   470,   471,   472,   473,
       0,   474,   733,   734,   476,   477,   478,   479,     0,   735,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   736,   737,   510,   511,     0,     0,   512,   513,
     738,   515,   516,   517,   739,   740,   518,   519,   520,   521,
     741,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     742,   528,   529,     0,   743,   744,   745,   746,     0,     0,
       0,     0,  1841,   534,   535,     0,   747,   748,   749,   537,
     538,     0,   750,   539,   540,   751,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     752,   549,     0,     0,   753,   754,   755,   550,   756,   551,
       0,     0,   552,   757,     0,   758,   553,     0,   554,   555,
     759,   760,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   761,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   762,   763,     0,   572,   573,   574,   764,
     575,   576,   577,     0,   578,   765,   766,   579,   767,   580,
       0,   768,   769,   770,   771,   772,   581,   582,     0,   773,
     583,   774,   584,   775,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,     0,     0,     0,     0,     0,   776,   777,
       0,     0,     0,     0,   779,     0,   780,     0,     0,     0,
     781,     0,     0,     0,   782,   783,   198,   199,     0,   666,
     201,   202,   203,   204,  2085,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   667,     0,   208,   209,   210,   211,
     668,   213,     0,   214,     0,     0,  2086,   215,   670,   671,
     672,   216,   673,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,   674,   675,   224,   225,     0,
     226,   227,   676,   677,   229,     0,   230,   231,   232,   233,
     678,   235,     0,   679,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,   680,   681,   256,
       0,     0,     0,   682,   257,   683,     0,   258,   684,   685,
       0,   259,   260,   261,   686,   687,   688,     0,     0,     0,
       0,   689,   264,   690,     0,     0,  2087,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   692,     0,   291,   292,   293,   294,   295,   693,
     694,   296,   297,     0,   298,   299,   300,   301,   302,   695,
       0,   303,   304,     0,     0,     0,   696,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   697,   311,   698,     0,
     313,     0,   314,     0,   699,     0,   315,   316,     0,   317,
     700,     0,   318,   319,     0,     0,     0,   701,   321,   322,
     323,   702,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,   703,   328,   329,   330,   704,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,   705,   341,   342,     0,     0,     0,     0,     0,
     706,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,   707,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     708,   371,   372,   373,   374,   709,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   710,   382,     0,     0,
     711,   384,   712,   385,     0,   386,   713,   714,   715,   716,
     717,   391,   392,   393,   394,   395,     0,   718,   396,   397,
       0,     0,   398,   399,   400,   401,   402,   719,   720,   721,
     403,   404,     0,   722,   723,   405,     0,   406,   407,  2088,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,   724,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     725,   726,   426,   727,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   728,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,   729,   730,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   731,     0,   732,   470,
     471,   472,   473,     0,   474,  2089,   734,   476,   477,   478,
     479,     0,   735,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,   736,   737,   510,   511,     0,
       0,   512,   513,   738,   515,   516,   517,   739,   740,   518,
     519,   520,   521,   741,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   742,   528,   529,     0,   743,   744,   745,
     746,     0,     0,     0,     0,     0,   534,   535,     0,   747,
     748,   749,   537,   538,     0,   750,   539,   540,   751,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   752,   549,     0,     0,   753,   754,   755,
     550,   756,   551,     0,     0,   552,   757,     0,   758,   553,
       0,   554,   555,   759,   760,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   761,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,   762,   763,     0,   572,
     573,   574,   764,   575,   576,   577,     0,   578,   765,   766,
     579,   767,   580,     0,   768,   769,   770,   771,   772,   581,
     582,     0,   773,   583,   774,   584,   775,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
    2090,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,     0,     0,     0,     0,     0,
       0,   776,   777,     0,     0,     0,     0,   779,     0,   780,
       0,     0,     0,   781,     0,     0,     0,   782,   783,   198,
     199,     0,   666,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   667,     0,   208,
     209,   210,   211,   668,   213,     0,   214,     0,     0,   669,
     215,   670,   671,   672,   216,   673,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   674,   675,
     224,   225,     0,   226,   227,   676,   677,   229,     0,   230,
     231,   232,   233,   678,   235,     0,   679,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     680,   681,   256,     0,     0,     0,   682,   257,   683,     0,
     258,   684,   685,     0,   259,   260,   261,   686,   687,   688,
       0,     0,     0,     0,   689,   264,   690,     0,     0,   691,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   692,     0,   291,   292,   293,
     294,   295,   693,   694,   296,   297,     0,   298,   299,   300,
     301,   302,   695,     0,   303,   304,     0,     0,     0,   696,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   697,
     311,   698,     0,   313,     0,   314,     0,   699,     0,   315,
     316,     0,   317,   700,     0,   318,   319,     0,     0,     0,
     701,   321,   322,   323,   702,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   703,   328,   329,   330,   704,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   705,   341,   342,     0,     0,
       0,     0,     0,   706,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   707,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   708,   371,   372,   373,   374,   709,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   710,
     382,     0,     0,   711,   384,   712,   385,     0,   386,   713,
     714,   715,   716,   717,   391,   392,   393,   394,   395,     0,
     718,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     719,   720,   721,   403,   404,     0,   722,   723,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   724,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   725,   726,   426,   727,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   728,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   729,
     730,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   731,
       0,   732,   470,   471,   472,   473,     0,   474,   733,   734,
     476,   477,   478,   479,     0,   735,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   736,   737,
     510,   511,     0,     0,   512,   513,   738,   515,   516,   517,
     739,   740,   518,   519,   520,   521,   741,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   742,   528,   529,     0,
     743,   744,   745,   746,     0,     0,     0,     0,     0,   534,
     535,     0,   747,   748,   749,   537,   538,     0,   750,   539,
     540,   751,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   752,   549,     0,     0,
     753,   754,   755,   550,   756,   551,     0,     0,   552,   757,
       0,   758,   553,     0,   554,   555,   759,   760,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   761,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   762,
     763,     0,   572,   573,   574,   764,   575,   576,   577,     0,
     578,   765,   766,   579,   767,   580,     0,   768,   769,   770,
     771,   772,   581,   582,     0,   773,   583,   774,   584,   775,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,     0,
       0,     0,     0,     0,   776,   777,   778,     0,     0,     0,
     779,     0,   780,     0,     0,     0,   781,     0,     0,     0,
     782,   783,   198,   199,     0,   666,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     667,     0,   208,   209,   210,   211,   668,   213,     0,   214,
       0,     0,   669,   215,   670,   671,   672,   216,   673,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,   674,   675,   224,   225,     0,   226,   227,   676,   677,
     229,     0,   230,   231,   232,   233,   678,   235,     0,   679,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,   680,   681,   256,     0,     0,     0,   682,
     257,   683,     0,   258,   684,   685,     0,   259,   260,   261,
     686,   687,   688,     0,     0,     0,     0,   689,   264,   690,
       0,     0,   691,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   692,     0,
     291,   292,   293,   294,   295,   693,   694,   296,   297,     0,
     298,   299,   300,   301,   302,   695,     0,   303,   304,     0,
       0,     0,   696,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   697,   311,   698,     0,   313,     0,   314,     0,
     699,     0,   315,   316,     0,   317,   700,     0,   318,   319,
       0,     0,     0,   701,   321,   322,   323,   702,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,   703,   328,
     329,   330,   704,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,   705,   341,
     342,     0,     0,     0,     0,     0,   706,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,   707,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   708,   371,   372,   373,
     374,   709,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   710,   382,     0,     0,   711,   384,   712,   385,
       0,   386,   713,   714,   715,   716,   717,   391,   392,   393,
     394,   395,     0,   718,   396,   397,     0,     0,   398,   399,
     400,   401,   402,   719,   720,   721,   403,   404,     0,   722,
     723,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,   724,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   725,   726,   426,   727,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   728,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,   729,   730,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   731,     0,   732,   470,   471,   472,   473,     0,
     474,   733,   734,   476,   477,   478,   479,     0,   735,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,   736,   737,   510,   511,     0,     0,   512,   513,   738,
     515,   516,   517,   739,   740,   518,   519,   520,   521,   741,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   742,
     528,   529,     0,   743,   744,   745,   746,     0,     0,     0,
       0,     0,   534,   535,     0,   747,   748,   749,   537,   538,
       0,   750,   539,   540,   751,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   752,
     549,     0,     0,   753,   754,   755,   550,   756,   551,     0,
       0,   552,   757,     0,   758,   553,     0,   554,   555,   759,
     760,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   761,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,   762,   763,     0,   572,   573,   574,   764,   575,
     576,   577,     0,   578,   765,   766,   579,   767,   580,     0,
     768,   769,   770,   771,   772,   581,   582,     0,   773,   583,
     774,   584,   775,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,     0,     0,     0,     0,     0,     0,   776,   777,  2479,
       0,     0,     0,   779,     0,   780,     0,     0,     0,   781,
       0,     0,     0,   782,   783,   198,   199,     0,   666,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   667,     0,   208,   209,   210,   211,   668,
     213,     0,   214,     0,     0,   669,   215,   670,   671,   672,
     216,   673,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   674,   675,   224,   225,     0,   226,
     227,   676,   677,   229,     0,   230,   231,   232,   233,   678,
     235,     0,   679,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   680,   681,   256,     0,
       0,     0,   682,   257,   683,     0,   258,   684,   685,     0,
     259,   260,   261,   686,   687,   688,     0,     0,     0,     0,
     689,   264,   690,     0,     0,   691,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   692,     0,   291,   292,   293,   294,   295,   693,   694,
     296,   297,     0,   298,   299,   300,   301,   302,   695,     0,
     303,   304,     0,     0,     0,   696,   306,  2535,   307,     0,
       0,     0,   308,     0,   309,   697,   311,   698,     0,   313,
       0,   314,     0,   699,     0,   315,   316,     0,   317,   700,
       0,   318,   319,     0,     0,     0,   701,   321,   322,   323,
     702,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   703,   328,   329,   330,   704,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   705,   341,   342,     0,     0,     0,     0,     0,   706,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     707,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   708,
     371,   372,   373,   374,   709,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   710,   382,     0,     0,   711,
     384,   712,   385,     0,   386,   713,   714,   715,   716,   717,
     391,   392,   393,   394,   395,     0,   718,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   719,   720,   721,   403,
     404,     0,   722,   723,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   724,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   725,
     726,   426,   727,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   728,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   729,   730,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   731,     0,   732,   470,   471,
     472,   473,     0,   474,   733,   734,   476,   477,   478,   479,
       0,   735,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   736,   737,   510,   511,     0,     0,
     512,   513,   738,   515,   516,   517,   739,   740,   518,   519,
     520,   521,   741,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   742,   528,   529,     0,   743,   744,   745,   746,
       0,     0,     0,     0,     0,   534,   535,     0,   747,   748,
     749,   537,   538,     0,   750,   539,   540,   751,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   752,   549,     0,     0,   753,   754,   755,   550,
     756,   551,     0,     0,   552,   757,     0,   758,   553,     0,
     554,   555,   759,   760,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     761,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   762,   763,     0,   572,   573,
     574,   764,   575,   576,   577,     0,   578,   765,   766,   579,
     767,   580,     0,   768,   769,   770,   771,   772,   581,   582,
       0,   773,   583,   774,   584,   775,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,     0,     0,     0,     0,     0,
     776,   777,     0,     0,     0,     0,   779,     0,   780,     0,
       0,     0,   781,     0,     0,     0,   782,   783,   198,   199,
       0,   666,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   667,     0,   208,   209,
     210,   211,   668,   213,     0,   214,     0,     0,   669,   215,
     670,   671,   672,   216,   673,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,   674,   675,   224,
     225,     0,   226,   227,   676,   677,   229,     0,   230,   231,
     232,   233,   678,   235,     0,   679,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,   680,
     681,   256,     0,     0,     0,   682,   257,   683,     0,   258,
     684,   685,     0,   259,   260,   261,   686,   687,   688,     0,
       0,     0,     0,   689,   264,   690,     0,     0,   691,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   692,     0,   291,   292,   293,   294,
     295,   693,   694,   296,   297,     0,   298,   299,   300,   301,
     302,   695,     0,   303,   304,     0,     0,     0,   696,   306,
    2537,   307,     0,     0,     0,   308,     0,   309,   697,   311,
     698,     0,   313,     0,   314,     0,   699,     0,   315,   316,
       0,   317,   700,     0,   318,   319,     0,     0,     0,   701,
     321,   322,   323,   702,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,   703,   328,   329,   330,   704,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,   705,   341,   342,     0,     0,     0,
       0,     0,   706,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,   707,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   708,   371,   372,   373,   374,   709,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   710,   382,
       0,     0,   711,   384,   712,   385,     0,   386,   713,   714,
     715,   716,   717,   391,   392,   393,   394,   395,     0,   718,
     396,   397,     0,     0,   398,   399,   400,   401,   402,   719,
     720,   721,   403,   404,     0,   722,   723,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
     724,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   725,   726,   426,   727,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     728,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,   729,   730,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   731,     0,
     732,   470,   471,   472,   473,     0,   474,   733,   734,   476,
     477,   478,   479,     0,   735,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,   736,   737,   510,
     511,     0,     0,   512,   513,   738,   515,   516,   517,   739,
     740,   518,   519,   520,   521,   741,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   742,   528,   529,     0,   743,
     744,   745,   746,     0,     0,     0,     0,     0,   534,   535,
       0,   747,   748,   749,   537,   538,     0,   750,   539,   540,
     751,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   752,   549,     0,     0,   753,
     754,   755,   550,   756,   551,     0,     0,   552,   757,     0,
     758,   553,     0,   554,   555,   759,   760,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   761,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,   762,   763,
       0,   572,   573,   574,   764,   575,   576,   577,     0,   578,
     765,   766,   579,   767,   580,     0,   768,   769,   770,   771,
     772,   581,   582,     0,   773,   583,   774,   584,   775,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,     0,     0,     0,
       0,     0,     0,   776,   777,     0,     0,     0,     0,   779,
       0,   780,     0,     0,     0,   781,     0,     0,     0,   782,
     783,   198,   199,     0,   666,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   667,
       0,   208,   209,   210,   211,   668,   213,     0,   214,     0,
       0,   669,   215,   670,   671,   672,   216,   673,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     674,   675,   224,   225,     0,   226,   227,   676,   677,   229,
       0,   230,   231,   232,   233,   678,   235,     0,   679,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   680,   681,   256,     0,     0,     0,   682,   257,
     683,     0,   258,   684,   685,     0,   259,   260,   261,   686,
     687,   688,     0,     0,     0,     0,   689,   264,   690,     0,
       0,   691,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   692,     0,   291,
     292,   293,   294,   295,   693,   694,   296,   297,     0,   298,
     299,   300,   301,   302,   695,     0,   303,   304,     0,     0,
       0,   696,   306,  2539,   307,     0,     0,     0,   308,     0,
     309,   697,   311,   698,     0,   313,     0,   314,     0,   699,
       0,   315,   316,     0,   317,   700,     0,   318,   319,     0,
       0,     0,   701,   321,   322,   323,   702,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   703,   328,   329,
     330,   704,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   705,   341,   342,
       0,     0,     0,     0,     0,   706,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   707,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   708,   371,   372,   373,   374,
     709,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   710,   382,     0,     0,   711,   384,   712,   385,     0,
     386,   713,   714,   715,   716,   717,   391,   392,   393,   394,
     395,     0,   718,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   719,   720,   721,   403,   404,     0,   722,   723,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   724,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   725,   726,   426,   727,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   728,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   729,   730,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   731,     0,   732,   470,   471,   472,   473,     0,   474,
     733,   734,   476,   477,   478,   479,     0,   735,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     736,   737,   510,   511,     0,     0,   512,   513,   738,   515,
     516,   517,   739,   740,   518,   519,   520,   521,   741,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   742,   528,
     529,     0,   743,   744,   745,   746,     0,     0,     0,     0,
       0,   534,   535,     0,   747,   748,   749,   537,   538,     0,
     750,   539,   540,   751,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   752,   549,
       0,     0,   753,   754,   755,   550,   756,   551,     0,     0,
     552,   757,     0,   758,   553,     0,   554,   555,   759,   760,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   761,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   762,   763,     0,   572,   573,   574,   764,   575,   576,
     577,     0,   578,   765,   766,   579,   767,   580,     0,   768,
     769,   770,   771,   772,   581,   582,     0,   773,   583,   774,
     584,   775,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,     0,     0,     0,     0,     0,   776,   777,     0,     0,
       0,     0,   779,     0,   780,     0,     0,     0,   781,     0,
       0,     0,   782,   783,   198,   199,     0,   666,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   667,     0,   208,   209,   210,   211,   668,   213,
       0,   214,     0,     0,   669,   215,   670,   671,   672,   216,
     673,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,   674,   675,   224,   225,     0,   226,   227,
     676,   677,   229,     0,   230,   231,   232,   233,   678,   235,
       0,   679,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,   680,   681,   256,     0,     0,
       0,   682,   257,   683,     0,   258,   684,   685,     0,   259,
     260,   261,   686,   687,   688,     0,     0,     0,     0,   689,
     264,   690,     0,     0,   691,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
     692,     0,   291,   292,   293,   294,   295,   693,   694,   296,
     297,     0,   298,   299,   300,   301,   302,   695,     0,   303,
     304,     0,     0,     0,   696,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   697,   311,   698,     0,   313,     0,
     314,     0,   699,     0,   315,   316,     0,   317,   700,     0,
     318,   319,     0,     0,     0,   701,   321,   322,   323,   702,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
     703,   328,   329,   330,   704,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
     705,   341,   342,     0,     0,     0,     0,     0,   706,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,   707,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,   708,   371,
     372,   373,   374,   709,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   710,   382,     0,     0,   711,   384,
     712,   385,     0,   386,   713,   714,   715,   716,   717,   391,
     392,   393,   394,   395,     0,   718,   396,   397,     0,     0,
     398,   399,   400,   401,   402,   719,   720,   721,   403,   404,
       0,   722,   723,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,   724,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   725,   726,
     426,   727,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   728,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,   729,   730,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   731,     0,   732,   470,   471,   472,
     473,     0,   474,   733,   734,   476,   477,   478,   479,     0,
     735,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,   736,   737,   510,   511,     0,     0,   512,
     513,   738,   515,   516,   517,   739,   740,   518,   519,   520,
     521,   741,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   742,   528,   529,     0,   743,   744,   745,   746,     0,
       0,     0,     0,     0,   534,   535,     0,   747,   748,   749,
     537,   538,     0,   750,   539,   540,   751,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   752,   549,     0,     0,   753,   754,   755,   550,   756,
     551,     0,     0,   552,   757,     0,   758,   553,     0,   554,
     555,   759,   760,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   761,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,   762,   763,     0,   572,   573,   574,
     764,   575,   576,   577,     0,   578,   765,   766,   579,   767,
     580,     0,   768,   769,   770,   771,   772,   581,   582,     0,
     773,   583,   774,   584,   775,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,     0,     0,     0,     0,     0,     0,   776,
     777,     0,     0,     0,     0,   779,     0,   780,     0,     0,
       0,   781,     0,     0,     0,   782,   783,   198,   199,     0,
     666,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   667,     0,   208,   209,   210,
     211,   668,   213,     0,   214,     0,     0,   669,   215,   670,
     671,   672,   216,   673,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,   674,   675,   224,   225,
       0,   226,   227,   676,   677,   229,     0,   230,   231,   232,
     233,   678,   235,     0,   679,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,   680,   681,
     256,     0,     0,     0,   682,   257,   683,     0,   258,   684,
     685,     0,   259,   260,   261,   686,   687,   688,     0,     0,
       0,     0,   689,   264,   690,     0,     0,   691,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,   692,     0,   291,   292,   293,   294,   295,
     693,   694,   296,   297,     0,   298,   299,   300,   301,   302,
     695,     0,   303,   304,     0,     0,     0,   696,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   697,   311,   698,
       0,   313,     0,   314,     0,   699,     0,   315,   316,     0,
     317,   700,     0,   318,   319,     0,     0,     0,   701,   321,
     322,   323,   702,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,   703,   328,   329,   330,   704,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,   705,   341,   342,     0,     0,     0,     0,
       0,   706,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   707,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,   708,   371,   372,   373,   374,   709,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   710,   382,     0,
       0,   711,   384,   712,   385,     0,   386,   713,   714,   715,
     716,   717,   391,   392,   393,   394,   395,     0,   718,   396,
     397,     0,     0,   398,   399,   400,   401,   402,   719,   720,
     721,   403,   404,     0,   722,   723,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,   724,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   725,   726,   426,   727,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   728,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,   729,   730,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   731,     0,   732,
     470,   471,   472,   473,     0,   474,   733,   734,   476,   477,
     478,   479,     0,   735,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,   736,   737,   510,   511,
       0,     0,   512,   513,   738,   515,   516,   517,   739,   740,
     518,   519,   520,   521,   741,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   742,   528,   529,     0,   743,   744,
     745,   746,     0,     0,     0,     0,     0,   534,   535,     0,
     747,   748,   749,   537,   538,     0,   750,   539,   540,   751,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   752,   549,     0,     0,   753,   754,
     755,   550,   756,   551,     0,     0,   552,   757,     0,   758,
     553,     0,   554,   555,   759,   760,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   761,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,   762,   763,     0,
     572,   573,   574,   764,   575,   576,   577,     0,   578,   765,
     766,   579,   767,   580,     0,   768,   769,   770,   771,   772,
     581,   582,     0,   773,   583,   774,   584,   775,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,     0,     0,     0,
       0,     0,   776,   777,     0,     0,     0,     0,   779,     0,
    1129,     0,     0,     0,   781,     0,     0,     0,   782,   783,
     198,   199,     0,   666,   201,   202,   203,   204,  1887,     0,
     205,     0,     0,     0,     0,  1888,     0,     0,   667,     0,
     208,   209,   210,   211,   668,   213,     0,   214,     0,     0,
     669,   215,   670,   671,   672,   216,   673,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,   674,
     675,   224,   225,     0,   226,   227,   676,   677,   229,     0,
     230,   231,   232,   233,   678,   235,     0,   679,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,   680,   681,   256,     0,     0,     0,   682,   257,   683,
       0,   258,   684,   685,     0,   259,   260,   261,   686,   687,
     688,     0,     0,     0,     0,   689,   264,   690,     0,     0,
     691,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,   692,     0,   291,   292,
     293,   294,   295,   693,   694,   296,   297,     0,   298,   299,
     300,   301,   302,   695,     0,   303,   304,     0,     0,     0,
     696,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     697,   311,   698,     0,   313,     0,   314,     0,   699,     0,
     315,   316,     0,   317,   700,     0,   318,   319,     0,     0,
       0,   701,   321,   322,   323,   702,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,   703,   328,   329,   330,
     704,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,   705,   341,   342,     0,
       0,     0,     0,     0,   706,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,   707,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,   708,   371,   372,   373,   374,   709,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     710,   382,     0,     0,   711,   384,   712,   385,     0,   386,
     713,   714,   715,   716,   717,   391,   392,   393,   394,   395,
       0,   718,   396,   397,     0,     0,   398,   399,   400,   401,
     402,   719,     0,   721,   403,   404,     0,   722,   723,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,   724,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   725,   726,   426,   727,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   728,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
     729,   730,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     731,     0,   732,   470,   471,   472,   473,     0,   474,   733,
     734,   476,   477,   478,   479,     0,   735,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,   736,
     737,   510,   511,     0,     0,   512,   513,   738,   515,   516,
     517,   739,   740,   518,   519,   520,   521,   741,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   742,   528,   529,
       0,   743,   744,   745,   746,     0,     0,     0,     0,     0,
     534,   535,     0,   747,   748,   749,   537,   538,     0,   750,
     539,   540,   751,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   752,   549,     0,
       0,   753,   754,   755,   550,   756,   551,     0,     0,   552,
     757,     0,   758,   553,     0,   554,   555,   759,   760,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   761,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
     762,   763,     0,   572,   573,   574,   764,   575,   576,   577,
       0,   578,   765,   766,   579,   767,   580,     0,   768,   769,
     770,   771,   772,   581,   582,     0,   773,   583,   774,   584,
     775,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,     0,
       0,     0,     0,     0,     0,   776,   777,     0,     0,     0,
       0,   779,     0,   780,     0,     0,     0,   781,     0,     0,
       0,   782,   783,   198,   199,     0,   666,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   667,     0,   208,   209,   210,   211,   668,   213,     0,
     214,     0,     0,   669,   215,   670,   671,   672,   216,   673,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,   674,   675,   224,   225,     0,   226,   227,   676,
     677,   229,     0,   230,   231,   232,   233,   678,   235,     0,
     679,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,   680,   681,   256,     0,     0,     0,
     682,   257,   683,     0,   258,   684,   685,     0,   259,   260,
     261,   686,   687,   688,     0,     0,     0,     0,   689,   264,
     690,     0,     0,  2160,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,   692,
       0,   291,   292,   293,   294,   295,   693,   694,   296,   297,
       0,   298,   299,   300,   301,   302,   695,     0,   303,   304,
       0,     0,     0,   696,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   697,   311,   698,     0,   313,     0,   314,
       0,   699,     0,   315,   316,     0,   317,   700,     0,   318,
     319,     0,     0,     0,   701,   321,   322,   323,   702,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,   703,
     328,   329,   330,   704,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,   705,
     341,   342,     0,     0,     0,     0,     0,   706,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,   707,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,   708,   371,   372,
     373,   374,   709,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   710,   382,     0,     0,   711,   384,   712,
     385,     0,   386,   713,   714,   715,   716,   717,   391,   392,
     393,   394,   395,     0,   718,   396,   397,     0,     0,   398,
     399,   400,   401,   402,   719,   720,   721,   403,   404,     0,
     722,   723,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,   724,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   725,   726,   426,
     727,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   728,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,   729,   730,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   731,     0,   732,   470,   471,   472,   473,
       0,   474,   733,   734,   476,   477,   478,   479,     0,   735,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,   736,   737,   510,   511,     0,     0,   512,   513,
     738,   515,   516,   517,   739,   740,   518,   519,   520,   521,
     741,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     742,   528,   529,     0,   743,   744,   745,   746,     0,     0,
       0,     0,     0,   534,   535,     0,   747,   748,   749,   537,
     538,     0,   750,   539,   540,   751,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     752,   549,     0,     0,   753,   754,   755,   550,   756,   551,
       0,     0,   552,   757,     0,   758,   553,     0,   554,   555,
     759,   760,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   761,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,   762,   763,     0,   572,   573,   574,   764,
     575,   576,   577,     0,   578,   765,   766,   579,   767,   580,
       0,   768,   769,   770,   771,   772,   581,   582,     0,   773,
     583,   774,   584,   775,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,     0,     0,     0,     0,     0,     0,   776,   777,
       0,     0,     0,     0,   779,     0,   780,     0,     0,     0,
     781,     0,     0,     0,   782,   783,   198,   199,     0,   666,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   667,     0,   208,   209,   210,   211,
     668,   213,     0,   214,     0,     0,   669,   215,   670,   671,
     672,   216,   673,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,   674,   675,   224,   225,     0,
     226,   227,   676,   677,   229,     0,   230,   231,   232,   233,
     678,   235,     0,   679,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,   680,   681,   256,
       0,     0,     0,   682,   257,   683,     0,   258,   684,   685,
       0,   259,   260,   261,   686,   687,   688,     0,     0,     0,
       0,   689,   264,   690,     0,     0,   691,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,   692,     0,   291,   292,   293,   294,   295,   693,
     694,   296,   297,     0,   298,   299,   300,   301,   302,   695,
       0,   303,   304,     0,     0,     0,   696,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   697,   311,   698,     0,
     313,     0,   314,     0,   699,     0,   315,   316,     0,   317,
     700,     0,   318,   319,     0,     0,     0,   701,   321,   322,
     323,   702,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,   703,   328,   329,   330,  3173,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,   705,   341,   342,     0,     0,     0,     0,     0,
     706,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,   707,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
     708,   371,   372,   373,   374,   709,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   710,   382,     0,     0,
     711,   384,   712,   385,     0,   386,   713,   714,   715,   716,
     717,   391,   392,   393,   394,   395,     0,   718,   396,   397,
       0,     0,   398,   399,   400,   401,   402,   719,   720,   721,
     403,   404,     0,   722,   723,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,   724,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     725,   726,   426,   727,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   728,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,   729,   730,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   731,     0,   732,   470,
     471,   472,   473,     0,   474,   733,   734,   476,   477,   478,
     479,     0,   735,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,   736,   737,   510,   511,     0,
       0,   512,   513,   738,   515,   516,   517,   739,   740,   518,
     519,   520,   521,   741,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   742,   528,   529,     0,   743,   744,   745,
     746,     0,     0,     0,     0,     0,   534,   535,     0,   747,
     748,   749,   537,   538,     0,   750,   539,   540,   751,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   752,   549,     0,     0,   753,   754,   755,
     550,   756,   551,     0,     0,   552,   757,     0,   758,   553,
       0,   554,   555,   759,   760,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   761,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,   762,   763,     0,   572,
     573,   574,   764,   575,   576,   577,     0,   578,   765,   766,
     579,   767,   580,     0,   768,   769,   770,   771,   772,   581,
     582,     0,   773,   583,   774,   584,   775,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,     0,     0,     0,     0,     0,
       0,   776,   777,     0,     0,     0,     0,   779,     0,   780,
       0,     0,     0,   781,     0,     0,     0,   782,   783,   198,
     199,     0,   666,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   667,     0,   208,
     209,   210,   211,   668,   213,     0,   214,     0,     0,   669,
     215,   670,   671,   672,   216,   673,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,   674,   675,
     224,   225,     0,   226,   227,   676,   677,   229,     0,   230,
     231,   232,   233,   678,   235,     0,   679,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
     680,   681,   256,     0,     0,     0,   682,   257,   683,     0,
     258,   684,   685,     0,   259,   260,   261,   686,   687,   688,
       0,     0,     0,     0,   689,   264,   690,     0,     0,   691,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,   692,     0,   291,   292,   293,
     294,   295,   693,   694,   296,   297,     0,   298,   299,   300,
     301,   302,   695,     0,   303,   304,     0,     0,     0,   696,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   697,
     311,   698,     0,   313,     0,   314,     0,   699,     0,   315,
     316,     0,   317,   700,     0,   318,   319,     0,     0,     0,
     701,   321,   322,   323,   702,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,   703,   328,   329,   330,  3234,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,   705,   341,   342,     0,     0,
       0,     0,     0,   706,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,   707,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,   708,   371,   372,   373,   374,   709,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   710,
     382,     0,     0,   711,   384,   712,   385,     0,   386,   713,
     714,   715,   716,   717,   391,   392,   393,   394,   395,     0,
     718,   396,   397,     0,     0,   398,   399,   400,   401,   402,
     719,   720,   721,   403,   404,     0,   722,   723,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,   724,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   725,   726,   426,   727,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   728,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,   729,
     730,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   731,
       0,   732,   470,   471,   472,   473,     0,   474,   733,   734,
     476,   477,   478,   479,     0,   735,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,   736,   737,
     510,   511,     0,     0,   512,   513,   738,   515,   516,   517,
     739,   740,   518,   519,   520,   521,   741,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   742,   528,   529,     0,
     743,   744,   745,   746,     0,     0,     0,     0,     0,   534,
     535,     0,   747,   748,   749,   537,   538,     0,   750,   539,
     540,   751,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   752,   549,     0,     0,
     753,   754,   755,   550,   756,   551,     0,     0,   552,   757,
       0,   758,   553,     0,   554,   555,   759,   760,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   761,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,   762,
     763,     0,   572,   573,   574,   764,   575,   576,   577,     0,
     578,   765,   766,   579,   767,   580,     0,   768,   769,   770,
     771,   772,   581,   582,     0,   773,   583,   774,   584,   775,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,     0,
       0,     0,     0,     0,   776,   777,     0,     0,     0,     0,
     779,     0,   780,     0,     0,     0,   781,     0,     0,     0,
     782,   783,   198,   199,     0,   666,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     667,     0,   208,   209,   210,   211,   668,   213,     0,   214,
       0,     0,   669,   215,   670,   671,   672,   216,   673,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,   674,   675,   224,   225,     0,   226,   227,   676,   677,
     229,     0,   230,   231,   232,   233,   678,   235,     0,   679,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,   680,   681,   256,     0,     0,     0,   682,
     257,   683,     0,   258,   684,   685,     0,   259,   260,   261,
     686,   687,   688,     0,     0,     0,     0,   689,   264,   690,
       0,     0,   691,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,   692,     0,
     291,   292,   293,   294,   295,   693,   694,   296,   297,     0,
     298,   299,   300,   301,   302,   695,     0,   303,   304,     0,
       0,     0,   696,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   697,   311,   698,     0,   313,     0,   314,     0,
     699,     0,   315,   316,     0,   317,   700,     0,   318,   319,
       0,     0,     0,   701,   321,   322,   323,   702,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,   703,   328,
     329,   330,   704,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,   705,   341,
     342,     0,     0,     0,     0,     0,   706,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,   707,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,   708,   371,   372,   373,
     374,   709,   375,   376,  4962,     0,     0,     0,   377,   378,
     379,   380,   710,   382,     0,     0,   711,   384,   712,   385,
       0,   386,   713,   714,   715,   716,   717,   391,   392,   393,
     394,   395,     0,   718,   396,   397,     0,     0,   398,   399,
     400,   401,   402,   719,     0,   721,   403,   404,     0,   722,
     723,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,   724,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   725,   726,   426,   727,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   728,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,   729,   730,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   731,     0,   732,   470,   471,   472,   473,     0,
     474,   733,   734,   476,   477,   478,   479,     0,   735,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,   736,   737,   510,   511,     0,     0,   512,   513,   738,
     515,   516,   517,   739,   740,   518,   519,   520,   521,   741,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   742,
     528,   529,     0,   743,   744,   745,   746,     0,     0,     0,
       0,     0,   534,   535,     0,   747,   748,   749,   537,   538,
       0,   750,   539,   540,   751,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   752,
     549,     0,     0,   753,   754,   755,   550,   756,   551,     0,
       0,   552,   757,     0,   758,   553,     0,   554,   555,   759,
     760,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   761,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,   762,   763,     0,   572,   573,   574,   764,   575,
     576,   577,     0,   578,   765,   766,   579,   767,   580,     0,
     768,   769,   770,   771,   772,   581,   582,     0,   773,   583,
     774,   584,   775,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,     0,     0,     0,     0,     0,     0,   776,   777,     0,
       0,     0,     0,   779,     0,   780,     0,     0,     0,   781,
       0,     0,     0,   782,   783,   198,   199,     0,   666,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   667,     0,   208,   209,   210,   211,   668,
     213,     0,   214,     0,     0,   669,   215,   670,   671,   672,
     216,   673,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,   674,   675,   224,   225,     0,   226,
     227,   676,   677,   229,     0,   230,   231,   232,   233,   678,
     235,     0,   679,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,   680,   681,   256,     0,
       0,     0,   682,   257,   683,     0,   258,   684,   685,     0,
     259,   260,   261,   686,   687,   688,     0,     0,     0,     0,
     689,   264,   690,     0,     0,   691,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,   692,     0,   291,   292,   293,   294,   295,   693,   694,
     296,   297,     0,   298,   299,   300,   301,   302,   695,     0,
     303,   304,     0,     0,     0,   696,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   697,   311,   698,     0,   313,
       0,   314,     0,   699,     0,   315,   316,     0,   317,   700,
       0,   318,   319,     0,     0,     0,   701,   321,   322,   323,
     702,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,   703,   328,   329,   330,   704,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,   705,   341,   342,     0,     0,     0,     0,     0,   706,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
     707,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,   708,
     371,   372,   373,   374,   709,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   710,   382,     0,     0,   711,
     384,   712,   385,     0,   386,   713,   714,   715,   716,   717,
     391,   392,   393,   394,   395,     0,   718,   396,   397,     0,
       0,   398,   399,   400,   401,   402,   719,     0,   721,   403,
     404,     0,   722,   723,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,   724,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   725,
     726,   426,   727,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   728,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,   729,   730,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   731,     0,   732,   470,   471,
     472,   473,     0,   474,   733,   734,   476,   477,   478,   479,
       0,   735,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,   736,   737,   510,   511,     0,     0,
     512,   513,   738,   515,   516,   517,   739,   740,   518,   519,
     520,   521,   741,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   742,   528,   529,     0,   743,   744,   745,   746,
       0,     0,     0,     0,     0,   534,   535,     0,   747,   748,
     749,   537,   538,     0,   750,   539,   540,   751,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   752,   549,     0,     0,   753,   754,   755,   550,
     756,   551,     0,     0,   552,   757,     0,   758,   553,     0,
     554,   555,   759,   760,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     761,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,   762,   763,     0,   572,   573,
     574,   764,   575,   576,   577,     0,   578,   765,   766,   579,
     767,   580,     0,   768,   769,   770,   771,   772,   581,   582,
       0,   773,   583,   774,   584,   775,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,     0,     0,     0,     0,     0,     0,
     776,   777,     0,     0,     0,     0,   779,     0,   780,     0,
       0,     0,   781,     0,     0,     0,   782,   783,   198,   199,
       0,   666,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   667,     0,   208,   209,
     210,   211,   668,   213,     0,   214,     0,     0,   669,   215,
     670,   671,   672,   216,   673,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,   674,   675,   224,
     225,     0,   226,   227,   676,   677,   229,     0,   230,   231,
     232,   233,   678,   235,     0,   679,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,   680,
     681,   256,     0,     0,     0,   682,   257,   683,     0,   258,
     684,   685,     0,   259,   260,   261,   686,   687,   688,     0,
       0,     0,     0,   689,   264,   690,     0,     0,   691,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,   692,     0,   291,   292,   293,   294,
     295,   693,   694,   296,   297,     0,   298,   299,   300,   301,
     302,   695,     0,   303,   304,     0,     0,     0,   696,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   697,   311,
     698,     0,   313,     0,   314,     0,   699,     0,   315,   316,
       0,   317,   700,     0,   318,   319,     0,     0,     0,   701,
     321,   322,   323,   702,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,   703,   328,   329,   330,  1905,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,   705,   341,   342,     0,     0,     0,
       0,     0,   706,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,   707,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,   708,   371,   372,   373,   374,   709,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   710,   382,
       0,     0,   711,   384,   712,   385,     0,   386,   713,   714,
     715,   716,   717,   391,   392,   393,   394,   395,     0,   718,
     396,   397,     0,     0,   398,   399,   400,   401,   402,   719,
       0,   721,   403,   404,     0,   722,   723,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
     724,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   725,   726,   426,   727,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     728,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,   729,   730,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   731,     0,
     732,   470,   471,   472,   473,     0,   474,   733,   734,   476,
     477,   478,   479,     0,   735,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,   736,   737,   510,
     511,     0,     0,   512,   513,   738,   515,   516,   517,   739,
     740,   518,   519,   520,   521,   741,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   742,   528,   529,     0,   743,
     744,   745,   746,     0,     0,     0,     0,     0,   534,   535,
       0,   747,   748,   749,   537,   538,     0,   750,   539,   540,
     751,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   752,   549,     0,     0,   753,
     754,   755,   550,   756,   551,     0,     0,   552,   757,     0,
     758,   553,     0,   554,   555,   759,   760,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   761,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,   762,   763,
       0,   572,   573,   574,   764,   575,   576,   577,     0,   578,
     765,   766,   579,   767,   580,     0,   768,   769,   770,   771,
     772,   581,   582,     0,   773,   583,   774,   584,   775,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,     0,     0,     0,
       0,     0,     0,   776,   777,     0,     0,     0,     0,   779,
       0,   780,     0,     0,     0,   781,     0,     0,     0,   782,
     783,   198,   199,     0,   666,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   667,
       0,   208,   209,   210,   211,   668,   213,     0,   214,     0,
       0,   669,   215,   670,   671,   672,   216,   673,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
     674,   675,   224,   225,     0,   226,   227,   676,   677,   229,
       0,   230,   231,   232,   233,   678,   235,     0,   679,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,   680,   681,   256,     0,     0,     0,   682,   257,
     683,     0,   258,   684,   685,     0,   259,   260,   261,   686,
     687,   688,     0,     0,     0,     0,   689,   264,   690,     0,
       0,   691,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,   692,     0,   291,
     292,   293,   294,   295,   693,   694,   296,   297,     0,   298,
     299,   300,   301,   302,   695,     0,   303,   304,     0,     0,
       0,   696,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   697,   311,   698,     0,   313,     0,   314,     0,   699,
       0,   315,   316,     0,   317,   700,     0,   318,   319,     0,
       0,     0,   701,   321,   322,   323,   702,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,   703,   328,   329,
     330,  1907,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,   705,   341,   342,
       0,     0,     0,     0,     0,   706,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,   707,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,   708,   371,   372,   373,   374,
     709,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   710,   382,     0,     0,   711,   384,   712,   385,     0,
     386,   713,   714,   715,   716,   717,   391,   392,   393,   394,
     395,     0,   718,   396,   397,     0,     0,   398,   399,   400,
     401,   402,   719,     0,   721,   403,   404,     0,   722,   723,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,   724,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   725,   726,   426,   727,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   728,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,   729,   730,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   731,     0,   732,   470,   471,   472,   473,     0,   474,
     733,   734,   476,   477,   478,   479,     0,   735,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
     736,   737,   510,   511,     0,     0,   512,   513,   738,   515,
     516,   517,   739,   740,   518,   519,   520,   521,   741,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   742,   528,
     529,     0,   743,   744,   745,   746,     0,     0,     0,     0,
       0,   534,   535,     0,   747,   748,   749,   537,   538,     0,
     750,   539,   540,   751,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   752,   549,
       0,     0,   753,   754,   755,   550,   756,   551,     0,     0,
     552,   757,     0,   758,   553,     0,   554,   555,   759,   760,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   761,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,   762,   763,     0,   572,   573,   574,   764,   575,   576,
     577,     0,   578,   765,   766,   579,   767,   580,     0,   768,
     769,   770,   771,   772,   581,   582,     0,   773,   583,   774,
     584,   775,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
       0,     0,     0,     0,     0,     0,   776,   777,     0,     0,
       0,     0,   779,     0,   780,     0,     0,     0,   781,     0,
       0,     0,   782,   783,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,    42,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,    49,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,    54,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,    55,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,  2700,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,  2701,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,     0,     0,     0,     0,     0,     0,   198,
     199,     0,   200,   201,   202,   203,   204,  2702,     0,   205,
       0,     0,     0,     0,   206,     0,  2703,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,  2699,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,  2700,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,  2701,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,     0,     0,
       0,     0,     0,     0,   198,   199,     0,   200,   201,   202,
     203,   204,  2702,     0,   205,     0,     0,     0,     0,   206,
       0,  2703,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,  2700,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,  2701,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,     0,     0,     0,     0,     0,   198,   199,
       0,   200,   201,   202,   203,   204,     0,  2702,   205,     0,
       0,     0,     0,   206,     0,     0,  2703,     0,   208,   209,
     210,   211,   212,   213,     0,  -457,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,     0,     0,     0,     0,   223,  4799,     0,   224,
     225,     0,   226,   227,     0,     0,     0,     0,   230,   231,
     232,  4800,   234,   235,     0,   236,   237,     0,   238,   239,
       0,   241,     0,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,     0,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,     0,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,     0,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,     0,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,  4801,   298,   299,   300,   301,
     302,     0,     0,     0,     0,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,     0,   316,
       0,     0,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,  4802,     0,   324,     0,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,     0,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
    4803,     0,     0,   336,     0,   337,     0,     0,     0,   339,
       0,     0,   340,  4804,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,  -412,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,     0,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,  4805,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,     0,     0,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,     0,   454,  -412,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,     0,
       0,   464,   465,     0,   466,   467,   468,  4806,   469,     0,
       0,     0,   471,   472,   473,     0,   474,     0,   475,   476,
       0,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
       0,     0,     0,   489,     0,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,     0,   506,   507,   508,   509,     0,     0,     0,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,     0,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,     0,     0,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,  -412,
       0,     0,     0,   558,   559,   560,     0,   561,     0,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,     0,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,     0,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,  5212,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,   670,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,  2626,     0,     0,
       0,     0,   263,   264,   690,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,   694,   296,   297,     0,   298,   299,   300,   301,   302,
     695,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,   700,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,   707,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,   718,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,   722,   723,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   742,   528,   529,     0,  2627,   531,
     532,  2628,     0,     0,     0,     0,     0,   534,   535,     0,
       0,   748,   536,   537,   538,     0,   750,   539,   540,   751,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,   781,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,  1511,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1003,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,  1512,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1513,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   927,   928,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,   929,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   930,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   931,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   932,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   933,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     934,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   935,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   936,   937,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   938,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     939,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,   940,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1003,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1208,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1003,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1385,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   927,   928,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  1393,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   930,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   931,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   932,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     934,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   936,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   938,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,   940,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1003,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1513,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,  1966,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1967,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,  5139,   206,     0,  5140,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  1967,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,  5140,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,    42,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,    49,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,    54,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,    55,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
     989,  3868,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,  4105,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,  4109,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,  2278,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,  2279,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,  1668,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,  1669,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,  3709,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,    42,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,  2281,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,    49,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,    54,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,    55,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
     989,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,  2700,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,  2701,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,  2702,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,  1133,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,  2956,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,  3259,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,  3991,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     198,   199,     0,   200,   201,   202,   203,   204,  1925,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   198,
     199,     0,   200,   201,   202,   203,   204,  2641,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   198,   199,
       0,   200,   201,   202,   203,   204,  3289,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,  3468,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,     0,     0,     0,     0,
       0,     0,   198,   199,  3844,   200,   201,   202,   203,   204,
     837,   838,   205,     0,     0,     0,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,   839,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,   840,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,   841,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   842,   288,   289,   843,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     844,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,   845,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,   846,     0,   327,     0,     0,     0,   847,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,   848,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,   849,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,     0,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   850,   433,
     434,   435,   851,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,   852,     0,
     445,   446,   447,   448,   449,     0,   853,   451,     0,   452,
     453,   454,     0,     0,   854,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
     855,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,   856,   857,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   858,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   195,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,   859,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,   860,   547,   861,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,     0,     0,   595,   596,   597,
       0,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   198,   199,     0,   200,   201,   202,   203,   204,   909,
     838,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,   839,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,   840,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
     841,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   842,   288,   289,   843,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   844,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,   845,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,   846,     0,   327,     0,     0,     0,   847,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
     848,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,   849,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,     0,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   850,   433,   434,
     435,   910,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,   852,     0,   445,
     446,   447,   448,   449,     0,   853,   451,     0,   452,   453,
     454,     0,     0,   854,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,   855,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,   856,   857,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   858,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,   859,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,   860,   547,   861,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,     0,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     198,   199,     0,   200,   201,   202,   203,   204,     0,   838,
     205,     0,     0,     0,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,   839,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,   840,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,   841,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   842,   288,   289,   843,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   844,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,   845,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
     846,     0,   327,     0,     0,     0,   847,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,   848,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
     849,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
       0,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   850,   433,   434,   435,
       0,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,   852,     0,   445,   446,
     447,   448,   449,     0,   853,   451,     0,   452,   453,   454,
       0,     0,   854,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,   855,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,   856,   857,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   858,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,   195,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,   859,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,   860,   547,   861,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,     0,     0,   595,   596,   597,     0,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,  2853,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,  2854,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,  2855,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,  2856,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
    1239,  1240,     0,   403,   404,     0,     0,  2857,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,  5200,   904,  5201,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,  2858,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,  1213,  1214,   206,  1215,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
    1216,     0,     0,  1217,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,  1218,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,  1219,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,  1362,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  1363,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,  1364,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1003,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,  1365,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
    2278,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
    2279,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,  1668,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,  1669,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
    2281,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,  1387,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,  1388,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,  1003,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,  1528,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,  1529,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,   724,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,  1530,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,  1362,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,  3584,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,  1003,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,  1002,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,  1003,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,   195,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,  1004,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
    1002,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
    1003,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,   195,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,  1459,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,  1460,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,  1258,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   198,
     199,     0,   200,   201,   202,   203,   204,  2108,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,  1003,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,   195,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,  2722,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,  1003,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,   195,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,  1003,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,  3034,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,  1362,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,  1003,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   195,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,  1003,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,  3650,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,  1003,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   195,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,  5110,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
    5111,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,   904,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,   301,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,   972,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,  1034,     0,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
    1035,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,  1218,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
    2245,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  2371,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,   290,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,   298,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,   453,   454,     0,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,   487,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,   598,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,  2958,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,   290,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,   298,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,   453,   454,     0,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,   487,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,   598,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   198,   199,     0,   200,   201,
     202,   203,   204,  2970,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
     290,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,   298,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,   453,   454,     0,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,   487,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,   598,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,  2999,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,   290,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,   298,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,   453,   454,     0,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,   487,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,   598,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,   290,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,   298,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,  3062,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,   453,   454,     0,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,   487,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,   598,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
     207,     0,   208,   209,   210,   211,   212,   213,     0,   214,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,   221,   222,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,   228,     0,
     229,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,   240,   241,   242,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
     254,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,   264,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
     273,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,   278,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,   290,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,   303,   304,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,   315,   316,     0,   317,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
     325,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,   330,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,   338,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,   403,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
     427,     0,   428,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
     453,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,   463,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,   470,   471,   472,   473,     0,
     474,     0,   475,   476,   477,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,   487,     0,   488,   489,   490,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,   505,   506,   507,   508,
     509,     0,     0,   510,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,   536,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,   543,   544,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,   562,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,   578,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
     598,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,   207,
       0,   208,   209,   210,   211,   212,   213,     0,   214,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,   221,   222,     0,     0,   223,
       0,     0,   224,   225,     0,   226,   227,   228,     0,   229,
       0,   230,   231,   232,   233,   234,   235,     0,   236,   237,
       0,   238,   239,   240,   241,   242,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,   254,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,   264,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,   273,
       0,     0,   274,   275,   276,     0,     0,     0,   277,     0,
     278,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,   290,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,     0,   298,
     299,   300,  1988,   302,     0,     0,   303,   304,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,   315,   316,     0,   317,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,     0,     0,   324,   325,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
     330,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,     0,     0,     0,   336,     0,   337,     0,
       0,   338,   339,     0,     0,   340,     0,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,     0,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,  1989,
     401,   402,     0,     0,     0,   403,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,   410,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,   427,
       0,   428,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,   453,
     454,     0,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,   463,     0,   464,   465,     0,   466,   467,   468,
       0,   469,     0,     0,   470,   471,   472,   473,     0,   474,
       0,   475,   476,   477,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,   487,     0,   488,   489,   490,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,   505,   506,   507,   508,   509,
       0,     0,   510,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,   536,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,   543,   544,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
       0,     0,     0,     0,     0,     0,   558,   559,   560,     0,
     561,   562,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,   578,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,   598,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,   207,     0,
     208,   209,   210,   211,   212,   213,     0,   214,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,   221,   222,     0,     0,   223,     0,
       0,   224,   225,     0,   226,   227,   228,     0,   229,     0,
     230,   231,   232,   233,   234,   235,     0,   236,   237,     0,
     238,   239,   240,   241,   242,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,   254,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,   264,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,   273,     0,
       0,   274,   275,   276,     0,     0,     0,   277,     0,   278,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,   290,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,     0,   298,   299,
     300,   301,   302,     0,     0,   303,   304,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
     315,   316,     0,   317,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,     0,     0,   324,   325,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,   330,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,     0,     0,     0,   336,     0,   337,     0,     0,
     338,   339,     0,     0,   340,     0,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,     0,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,   403,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,   410,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,   427,     0,
     428,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,   453,   454,
       0,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,   463,     0,   464,   465,     0,   466,   467,   468,     0,
     469,     0,     0,   470,   471,   472,   473,     0,   474,     0,
     475,   476,   477,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,   487,     0,   488,   489,   490,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,   505,   506,   507,   508,   509,     0,
       0,   510,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,   536,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,   543,   544,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,     0,
       0,     0,     0,     0,     0,   558,   559,   560,     0,   561,
     562,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,   578,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,  4861,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,   598,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,   207,     0,   208,
     209,   210,   211,   212,   213,     0,   214,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,   221,   222,     0,     0,   223,     0,     0,
     224,   225,     0,   226,   227,   228,     0,   229,     0,   230,
     231,   232,   233,   234,   235,     0,   236,   237,     0,   238,
     239,   240,   241,   242,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,   254,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,   264,     0,     0,     0,  1393,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,   273,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,   278,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,   290,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,     0,   298,   299,   300,
     301,   302,     0,     0,   303,   304,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,     0,     0,   314,     0,     0,     0,   315,
     316,     0,   317,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,     0,     0,   324,   325,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,   330,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,     0,     0,     0,   336,     0,   337,     0,     0,   338,
     339,     0,     0,   340,     0,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,     0,     0,   346,     0,
     347,   348,     0,     0,     0,     0,     0,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,   403,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,   410,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,   427,     0,   428,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,   453,   454,     0,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
     463,     0,   464,   465,     0,   466,   467,   468,     0,   469,
       0,     0,   470,   471,   472,   473,     0,   474,     0,   475,
     476,   477,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,     0,   485,     0,     0,     0,   486,     0,     0,
       0,   487,     0,   488,   489,   490,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,   505,   506,   507,   508,   509,     0,     0,
     510,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,  1394,
     535,     0,     0,     0,   536,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,   543,   544,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
       0,     0,     0,     0,   558,   559,   560,     0,   561,   562,
     563,   564,     0,     0,   565,     0,     0,     0,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,     0,   576,   577,     0,
     578,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,   598,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,   207,     0,   208,   209,
     210,   211,   212,   213,     0,   214,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,   221,   222,     0,     0,   223,     0,     0,   224,
     225,     0,   226,   227,   228,     0,   229,     0,   230,   231,
     232,   233,   234,   235,     0,   236,   237,     0,   238,   239,
     240,   241,   242,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,   254,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,   264,     0,     0,     0,  1393,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,   273,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,   278,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,   290,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,     0,   298,   299,   300,   301,
     302,     0,     0,   303,   304,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,     0,     0,   314,     0,     0,     0,   315,   316,
       0,   317,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,     0,     0,   324,   325,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,   330,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
       0,     0,     0,   336,     0,   337,     0,     0,   338,   339,
       0,     0,   340,     0,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,     0,     0,   346,     0,   347,
     348,     0,     0,     0,     0,     0,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,   403,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,   410,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,   427,     0,   428,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,   453,   454,     0,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,   463,
       0,   464,   465,     0,   466,   467,   468,     0,   469,     0,
       0,   470,   471,   472,   473,     0,   474,     0,   475,   476,
     477,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,     0,   485,     0,     0,     0,   486,     0,     0,     0,
     487,     0,   488,   489,   490,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,   505,   506,   507,   508,   509,     0,     0,   510,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,   536,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,   543,   544,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,     0,
       0,     0,     0,   558,   559,   560,     0,   561,   562,   563,
     564,     0,     0,   565,     0,     0,     0,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,     0,   576,   577,     0,   578,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,   598,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,  1378,     0,   205,     0,     0,
       0,     0,   206,     0,     0,   207,     0,   208,   209,   210,
     211,   212,   213,     0,   214,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,   221,   222,     0,     0,   223,     0,     0,   224,   225,
       0,   226,   227,   228,     0,   229,     0,   230,   231,   232,
     233,   234,   235,     0,   236,   237,     0,   238,   239,   240,
     241,   242,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,   254,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,   264,     0,     0,     0,  1379,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,   273,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,   278,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,     0,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,     0,     0,   299,   300,   301,   302,
       0,     0,   303,   304,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,   315,   316,     0,
     317,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,     0,     0,   324,   325,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,   330,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,     0,
       0,     0,   336,     0,   337,     0,     0,   338,   339,     0,
       0,   340,     0,     0,   341,   342,   848,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,     0,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,  1380,     0,     0,
       0,   403,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,   410,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,   427,     0,   428,   429,   430,
       0,   431,     0,     0,   433,   434,   435,     0,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,     0,   451,     0,   452,   453,   454,     0,     0,     0,
     456,   457,   458,   459,   460,   461,   462,     0,   463,     0,
     464,   465,     0,   466,   467,   468,     0,   469,     0,     0,
     470,   471,   472,   473,     0,   474,     0,   475,   476,   477,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,   488,   489,   490,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,   505,   506,   507,   508,   509,     0,     0,   510,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
       0,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,   195,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,   536,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,   543,   544,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,     0,     0,
       0,     0,   558,   559,   560,     0,   561,   562,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,   578,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
       0,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   198,   199,     0,   200,
     201,   202,   203,   204,  4943,     0,   205,     0,     0,     0,
       0,   206,     0,     0,   207,     0,   208,   209,   210,   211,
     212,   213,     0,   214,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
     221,   222,     0,     0,   223,     0,     0,   224,   225,     0,
     226,   227,   228,     0,   229,     0,   230,   231,   232,   233,
     234,   235,     0,   236,   237,     0,   238,   239,   240,   241,
     242,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,   254,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,   264,     0,     0,     0,  4944,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,   273,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,   278,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,     0,   288,
     289,     0,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,     0,     0,   299,   300,   301,   302,     0,
       0,   303,   304,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,   315,   316,     0,   317,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,     0,     0,   324,   325,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,   330,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,     0,     0,
       0,   336,     0,   337,     0,     0,   338,   339,     0,     0,
     340,     0,     0,   341,   342,   848,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,     0,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,  4945,     0,     0,     0,
     403,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,   410,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,   427,     0,   428,   429,   430,     0,
     431,     0,     0,   433,   434,   435,     0,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
       0,   451,     0,   452,   453,   454,     0,     0,     0,   456,
     457,   458,   459,   460,   461,   462,     0,   463,     0,   464,
     465,     0,   466,   467,   468,     0,   469,     0,     0,   470,
     471,   472,   473,     0,   474,     0,   475,   476,   477,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,     0,     0,
     488,   489,   490,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
     505,   506,   507,   508,   509,     0,     0,   510,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,     0,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,   195,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,   536,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,   543,   544,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,     0,     0,     0,
       0,   558,   559,   560,     0,   561,   562,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,   578,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,     0,
       0,   595,   596,   597,     0,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   198,   199,     0,   200,   201,
     202,   203,   204,  2047,     0,   205,     0,     0,     0,     0,
     206,     0,     0,   207,     0,   208,   209,   210,   211,   212,
     213,     0,   214,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,   221,
     222,     0,     0,   223,     0,     0,   224,   225,     0,   226,
     227,   228,     0,   229,     0,   230,   231,   232,   233,   234,
     235,     0,   236,   237,     0,   238,   239,   240,   241,   242,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,   254,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,   264,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,   273,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,   278,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,     0,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,     0,     0,   299,   300,   301,   302,     0,     0,
     303,   304,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,   315,   316,     0,   317,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
       0,     0,   324,   325,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,   330,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,     0,     0,     0,
     336,     0,   337,     0,     0,   338,   339,     0,     0,   340,
       0,     0,   341,   342,   848,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,     0,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,  2048,     0,     0,     0,   403,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,   410,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,   427,     0,   428,   429,   430,     0,   431,
       0,     0,   433,   434,   435,     0,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,     0,
     451,     0,   452,   453,   454,     0,     0,     0,   456,   457,
     458,   459,   460,   461,   462,     0,   463,     0,   464,   465,
       0,   466,   467,   468,     0,   469,     0,     0,   470,   471,
     472,   473,     0,   474,     0,   475,   476,   477,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,   488,
     489,   490,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,   505,
     506,   507,   508,   509,     0,     0,   510,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,     0,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,   195,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
     536,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,   543,   544,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,     0,     0,     0,     0,
     558,   559,   560,     0,   561,   562,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,   578,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,     0,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   198,   199,     0,   200,   201,   202,
     203,   204,  2818,     0,   205,     0,     0,     0,     0,   206,
       0,     0,   207,     0,   208,   209,   210,   211,   212,   213,
       0,   214,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,   221,   222,
       0,     0,   223,     0,     0,   224,   225,     0,   226,   227,
     228,     0,   229,     0,   230,   231,   232,   233,   234,   235,
       0,   236,   237,     0,   238,   239,   240,   241,   242,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,   254,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
     264,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,   273,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,   278,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,     0,   288,   289,     0,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,     0,     0,   299,   300,   301,   302,     0,     0,   303,
     304,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,   315,   316,     0,   317,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,     0,
       0,   324,   325,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,   330,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,     0,     0,     0,   336,
       0,   337,     0,     0,   338,   339,     0,     0,   340,     0,
       0,   341,   342,   848,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,     0,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,  2819,     0,     0,     0,   403,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
     410,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,   427,     0,   428,   429,   430,     0,   431,     0,
       0,   433,   434,   435,     0,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,     0,   451,
       0,   452,   453,   454,     0,     0,     0,   456,   457,   458,
     459,   460,   461,   462,     0,   463,     0,   464,   465,     0,
     466,   467,   468,     0,   469,     0,     0,   470,   471,   472,
     473,     0,   474,     0,   475,   476,   477,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,     0,     0,   488,   489,
     490,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,   505,   506,
     507,   508,   509,     0,     0,   510,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,     0,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,   195,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,   536,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
     543,   544,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,     0,     0,     0,     0,   558,
     559,   560,     0,   561,   562,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,   578,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,     0,     0,   595,
     596,   597,     0,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,   207,     0,   208,   209,   210,   211,   212,   213,     0,
     214,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,   221,   222,     0,
       0,   223,     0,     0,   224,   225,     0,   226,   227,   228,
       0,   229,     0,   230,   231,   232,   233,   234,   235,     0,
     236,   237,     0,   238,   239,   240,   241,   242,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,   254,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,   264,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,   273,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,   278,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,     0,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
       0,     0,   299,   300,   301,   302,     0,     0,   303,   304,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,   315,   316,     0,   317,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,     0,     0,
     324,   325,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,   330,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,     0,     0,     0,   336,     0,
     337,     0,     0,   338,   339,     0,     0,   340,     0,     0,
     341,   342,   848,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
       0,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,     0,     0,     0,     0,   403,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,   410,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,   427,     0,   428,   429,   430,     0,   431,     0,     0,
     433,   434,   435,     0,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,     0,   451,     0,
     452,   453,   454,     0,     0,     0,   456,   457,   458,   459,
     460,   461,   462,     0,   463,     0,   464,   465,     0,   466,
     467,   468,     0,   469,     0,     0,   470,   471,   472,   473,
       0,   474,     0,   475,   476,   477,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,   488,   489,   490,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,   505,   506,   507,
     508,   509,     0,     0,   510,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,     0,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
     195,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,   536,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,   543,
     544,     0,     0,   545,     0,     0,   546,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,     0,     0,     0,     0,   558,   559,
     560,     0,   561,   562,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,   578,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,     0,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
       0,     0,   208,   209,   210,   211,   212,   213,     0,  -457,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,     0,     0,     0,     0,
     223,  4799,     0,   224,   225,     0,   226,   227,     0,     0,
       0,     0,   230,   231,   232,  4800,   234,   235,     0,   236,
     237,     0,   238,   239,     0,   241,     0,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
       0,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,     0,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,  -427,  -427,   277,
       0,  -427,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,     0,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,  4801,
     298,   299,   300,   301,   302,     0,     0,     0,     0,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,     0,   316,     0,     0,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,  4802,     0,   324,
       0,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,     0,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,  4803,     0,     0,   336,     0,   337,
       0,     0,     0,   339,     0,     0,   340,  4804,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,  -412,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,     0,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,  4805,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,     0,     0,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
       0,   454,  -412,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,     0,     0,   464,   465,     0,   466,   467,
     468,  4806,   469,     0,     0,     0,   471,   472,   473,     0,
     474,     0,   475,   476,     0,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,     0,     0,     0,   489,     0,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,     0,   506,   507,   508,
     509,     0,     0,     0,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,     0,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,     0,     0,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,  -412,     0,     0,     0,   558,   559,   560,
       0,   561,     0,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,     0,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
       0,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,   198,   199,     0,   200,   201,   202,   203,   204,     0,
       0,   205,     0,     0,     0,     0,   206,     0,     0,     0,
       0,   208,   209,   210,   211,   212,   213,     0,  -457,     0,
       0,     0,   215,     0,     0,     0,   216,     0,     0,   217,
     218,   219,     0,   220,     0,     0,     0,     0,     0,   223,
    4799,     0,   224,   225,     0,   226,   227,     0,     0,     0,
       0,   230,   231,   232,  4800,   234,   235,     0,   236,   237,
       0,   238,   239,     0,   241,     0,   243,   244,   245,   246,
     247,   248,     0,   249,   250,     0,   251,   252,   253,     0,
     255,     0,     0,     0,   256,     0,     0,     0,     0,   257,
       0,     0,   258,     0,     0,     0,   259,   260,   261,     0,
       0,   262,     0,     0,     0,     0,   263,     0,     0,     0,
       0,     0,   265,   266,     0,   267,     0,     0,     0,     0,
       0,   268,   269,   270,   271,   272,     0,     0,     0,     0,
       0,     0,   274,   275,   276,     0,  -448,     0,   277,     0,
    -448,   279,     0,   280,   281,   282,     0,     0,   283,   284,
       0,   285,   286,   287,   288,   289,     0,     0,     0,   291,
     292,   293,   294,   295,     0,     0,   296,   297,  4801,   298,
     299,   300,   301,   302,     0,     0,     0,     0,     0,     0,
       0,   305,   306,     0,   307,     0,     0,     0,   308,     0,
     309,   310,   311,   312,     0,   313,     0,   314,     0,     0,
       0,     0,   316,     0,     0,     0,     0,   318,   319,     0,
       0,     0,   320,   321,   322,   323,  4802,     0,   324,     0,
     326,     0,     0,   327,     0,     0,     0,     0,   328,   329,
       0,     0,     0,     0,   331,     0,     0,     0,   332,   333,
       0,   334,   335,  4803,     0,     0,   336,     0,   337,     0,
       0,     0,   339,     0,     0,   340,  4804,     0,   341,   342,
       0,     0,     0,     0,     0,   343,   344,     0,   345,     0,
     346,     0,   347,   348,     0,     0,     0,     0,  -412,     0,
       0,   349,     0,   350,   351,   352,   353,   354,   355,   356,
     357,   358,   359,   360,   361,   362,   363,   364,   365,   366,
     367,     0,   368,   369,   370,     0,   371,   372,   373,   374,
       0,   375,   376,     0,     0,     0,     0,   377,   378,   379,
     380,   381,   382,     0,     0,   383,   384,     0,   385,     0,
     386,     0,   387,   388,   389,   390,   391,   392,   393,   394,
     395,     0,     0,   396,   397,     0,     0,   398,   399,   400,
     401,   402,     0,     0,     0,     0,   404,     0,     0,     0,
     405,     0,   406,   407,     0,   408,   409,  4805,     0,     0,
     411,     0,     0,     0,     0,     0,     0,     0,     0,     0,
     412,   413,   414,     0,   415,     0,   416,     0,   417,   418,
     419,   420,   421,   422,   423,   424,   425,   426,     0,     0,
       0,     0,   429,   430,     0,   431,     0,   432,   433,   434,
     435,   436,     0,   437,   438,   439,     0,     0,   440,     0,
       0,     0,   441,   442,     0,   443,   444,     0,     0,   445,
     446,   447,   448,   449,     0,   450,   451,     0,   452,     0,
     454,  -412,     0,   455,   456,   457,   458,   459,   460,   461,
     462,     0,     0,     0,   464,   465,     0,   466,   467,   468,
    4806,   469,     0,     0,     0,   471,   472,   473,     0,   474,
       0,   475,   476,     0,   478,   479,     0,   480,   481,     0,
       0,     0,   482,   483,   484,   485,     0,     0,     0,   486,
       0,     0,     0,     0,     0,     0,   489,     0,   491,     0,
     492,   493,   494,   495,   496,     0,     0,     0,     0,     0,
     497,   498,   499,     0,   500,     0,     0,   501,     0,     0,
     502,     0,   503,     0,   504,     0,   506,   507,   508,   509,
       0,     0,     0,   511,     0,     0,   512,   513,   514,   515,
     516,   517,     0,     0,   518,   519,   520,   521,     0,   522,
     523,     0,     0,   524,   525,   526,   527,     0,     0,   528,
     529,     0,   530,   531,   532,   533,     0,     0,     0,     0,
       0,   534,   535,     0,     0,     0,     0,   537,   538,     0,
       0,   539,   540,     0,   541,   542,     0,     0,     0,     0,
       0,   545,     0,     0,   546,     0,   547,     0,   548,   549,
       0,     0,     0,     0,     0,   550,     0,   551,     0,     0,
     552,     0,     0,     0,   553,     0,   554,   555,   556,   557,
    -448,     0,  -412,     0,     0,     0,   558,   559,   560,     0,
     561,     0,   563,   564,     0,     0,   565,     0,     0,   566,
     567,   568,   569,   570,     0,   571,     0,     0,     0,     0,
       0,     0,     0,     0,   572,   573,   574,     0,   575,   576,
     577,     0,     0,     0,     0,   579,     0,   580,     0,     0,
       0,     0,     0,     0,   581,   582,     0,     0,   583,     0,
     584,     0,   585,   586,     0,     0,     0,   587,   588,   589,
     590,   591,   592,   593,   594,     0,   595,   596,   597,     0,
     599,   600,   601,   602,   603,   604,     0,   605,   606,   607,
     608,   609,   610,   611,   612,   613,   614,   615,   616,   617,
     618,   619,   620,   621,   622,   623,   624,   625,   626,   627,
     198,   199,     0,   200,   201,   202,   203,   204,     0,     0,
     205,     0,     0,     0,     0,   206,     0,     0,     0,     0,
     208,   209,   210,   211,   212,   213,     0,  -457,     0,     0,
       0,   215,     0,     0,     0,   216,     0,     0,   217,   218,
     219,     0,   220,     0,     0,     0,     0,     0,   223,  4799,
       0,   224,   225,     0,   226,   227,     0,     0,     0,     0,
     230,   231,   232,  4800,   234,   235,     0,   236,   237,     0,
     238,   239,     0,   241,     0,   243,   244,   245,   246,   247,
     248,     0,   249,   250,     0,   251,   252,   253,     0,   255,
       0,     0,     0,   256,     0,     0,     0,     0,   257,     0,
       0,   258,     0,     0,     0,   259,   260,   261,     0,     0,
     262,     0,     0,     0,     0,   263,     0,     0,     0,     0,
       0,   265,   266,     0,   267,     0,     0,     0,     0,     0,
     268,   269,   270,   271,   272,     0,     0,     0,     0,     0,
       0,   274,   275,   276,     0,  -445,     0,   277,     0,  -445,
     279,     0,   280,   281,   282,     0,     0,   283,   284,     0,
     285,   286,   287,   288,   289,     0,     0,     0,   291,   292,
     293,   294,   295,     0,     0,   296,   297,  4801,   298,   299,
     300,   301,   302,     0,     0,     0,     0,     0,     0,     0,
     305,   306,     0,   307,     0,     0,     0,   308,     0,   309,
     310,   311,   312,     0,   313,     0,   314,     0,     0,     0,
       0,   316,     0,     0,     0,     0,   318,   319,     0,     0,
       0,   320,   321,   322,   323,  4802,     0,   324,     0,   326,
       0,     0,   327,     0,     0,     0,     0,   328,   329,     0,
       0,     0,     0,   331,     0,     0,     0,   332,   333,     0,
     334,   335,  4803,     0,     0,   336,     0,   337,     0,     0,
       0,   339,     0,     0,   340,  4804,     0,   341,   342,     0,
       0,     0,     0,     0,   343,   344,     0,   345,     0,   346,
       0,   347,   348,     0,     0,     0,     0,  -412,     0,     0,
     349,     0,   350,   351,   352,   353,   354,   355,   356,   357,
     358,   359,   360,   361,   362,   363,   364,   365,   366,   367,
       0,   368,   369,   370,     0,   371,   372,   373,   374,     0,
     375,   376,     0,     0,     0,     0,   377,   378,   379,   380,
     381,   382,     0,     0,   383,   384,     0,   385,     0,   386,
       0,   387,   388,   389,   390,   391,   392,   393,   394,   395,
       0,     0,   396,   397,     0,     0,   398,   399,   400,   401,
     402,     0,     0,     0,     0,   404,     0,     0,     0,   405,
       0,   406,   407,     0,   408,   409,  4805,     0,     0,   411,
       0,     0,     0,     0,     0,     0,     0,     0,     0,   412,
     413,   414,     0,   415,     0,   416,     0,   417,   418,   419,
     420,   421,   422,   423,   424,   425,   426,     0,     0,     0,
       0,   429,   430,     0,   431,     0,   432,   433,   434,   435,
     436,     0,   437,   438,   439,     0,     0,   440,     0,     0,
       0,   441,   442,     0,   443,   444,     0,     0,   445,   446,
     447,   448,   449,     0,   450,   451,     0,   452,     0,   454,
    -412,     0,   455,   456,   457,   458,   459,   460,   461,   462,
       0,     0,     0,   464,   465,     0,   466,   467,   468,  4806,
     469,     0,     0,     0,   471,   472,   473,     0,   474,     0,
     475,   476,     0,   478,   479,     0,   480,   481,     0,     0,
       0,   482,   483,   484,   485,     0,     0,     0,   486,     0,
       0,     0,     0,     0,     0,   489,     0,   491,     0,   492,
     493,   494,   495,   496,     0,     0,     0,     0,     0,   497,
     498,   499,     0,   500,     0,     0,   501,     0,     0,   502,
       0,   503,     0,   504,     0,   506,   507,   508,   509,     0,
       0,     0,   511,     0,     0,   512,   513,   514,   515,   516,
     517,     0,     0,   518,   519,   520,   521,     0,   522,   523,
       0,     0,   524,   525,   526,   527,     0,     0,   528,   529,
       0,   530,   531,   532,   533,     0,     0,     0,     0,     0,
     534,   535,     0,     0,     0,     0,   537,   538,     0,     0,
     539,   540,     0,   541,   542,     0,     0,     0,     0,     0,
     545,     0,     0,   546,     0,   547,     0,   548,   549,     0,
       0,     0,     0,     0,   550,     0,   551,     0,     0,   552,
       0,     0,     0,   553,     0,   554,   555,   556,   557,  -445,
       0,  -412,     0,     0,     0,   558,   559,   560,     0,   561,
       0,   563,   564,     0,     0,   565,     0,     0,   566,   567,
     568,   569,   570,     0,   571,     0,     0,     0,     0,     0,
       0,     0,     0,   572,   573,   574,     0,   575,   576,   577,
       0,     0,     0,     0,   579,     0,   580,     0,     0,     0,
       0,     0,     0,   581,   582,     0,     0,   583,     0,   584,
       0,   585,   586,     0,     0,     0,   587,   588,   589,   590,
     591,   592,   593,   594,     0,   595,   596,   597,     0,   599,
     600,   601,   602,   603,   604,     0,   605,   606,   607,   608,
     609,   610,   611,   612,   613,   614,   615,   616,   617,   618,
     619,   620,   621,   622,   623,   624,   625,   626,   627,   198,
     199,     0,   200,   201,   202,   203,   204,     0,     0,   205,
       0,     0,     0,     0,   206,     0,     0,     0,     0,   208,
     209,   210,   211,   212,   213,     0,  -457,     0,     0,     0,
     215,     0,     0,     0,   216,     0,     0,   217,   218,   219,
       0,   220,     0,     0,     0,     0,     0,   223,  4799,     0,
     224,   225,     0,   226,   227,     0,     0,     0,     0,   230,
     231,   232,  4800,   234,   235,     0,   236,   237,     0,   238,
     239,     0,   241,     0,   243,   244,   245,   246,   247,   248,
       0,   249,   250,     0,   251,   252,   253,     0,   255,     0,
       0,     0,   256,     0,     0,     0,     0,   257,     0,     0,
     258,     0,     0,     0,   259,   260,   261,     0,     0,   262,
       0,     0,     0,     0,   263,     0,     0,     0,     0,     0,
     265,   266,     0,   267,     0,     0,     0,     0,     0,   268,
     269,   270,   271,   272,     0,     0,     0,     0,     0,     0,
     274,   275,   276,     0,     0,     0,   277,     0,  5054,   279,
       0,   280,   281,   282,     0,     0,   283,   284,     0,   285,
     286,   287,   288,   289,     0,     0,     0,   291,   292,   293,
     294,   295,     0,     0,   296,   297,  4801,   298,   299,   300,
     301,   302,     0,     0,     0,     0,     0,     0,     0,   305,
     306,     0,   307,     0,     0,     0,   308,     0,   309,   310,
     311,   312,     0,   313,     0,   314,     0,     0,     0,     0,
     316,     0,     0,     0,     0,   318,   319,     0,     0,     0,
     320,   321,   322,   323,  4802,     0,   324,     0,   326,     0,
       0,   327,     0,     0,     0,     0,   328,   329,     0,     0,
       0,     0,   331,     0,     0,     0,   332,   333,     0,   334,
     335,  4803,     0,     0,   336,     0,   337,     0,     0,     0,
     339,     0,     0,   340,  4804,     0,   341,   342,     0,     0,
       0,     0,     0,   343,   344,     0,   345,     0,   346,     0,
     347,   348,     0,     0,     0,     0,  -412,     0,     0,   349,
       0,   350,   351,   352,   353,   354,   355,   356,   357,   358,
     359,   360,   361,   362,   363,   364,   365,   366,   367,     0,
     368,   369,   370,     0,   371,   372,   373,   374,     0,   375,
     376,     0,     0,     0,     0,   377,   378,   379,   380,   381,
     382,     0,     0,   383,   384,     0,   385,     0,   386,     0,
     387,   388,   389,   390,   391,   392,   393,   394,   395,     0,
       0,   396,   397,     0,     0,   398,   399,   400,   401,   402,
       0,     0,     0,     0,   404,     0,     0,     0,   405,     0,
     406,   407,     0,   408,   409,  4805,     0,     0,   411,     0,
       0,     0,     0,     0,     0,     0,     0,     0,   412,   413,
     414,     0,   415,     0,   416,     0,   417,   418,   419,   420,
     421,   422,   423,   424,   425,   426,     0,     0,     0,     0,
     429,   430,     0,   431,     0,   432,   433,   434,   435,   436,
       0,   437,   438,   439,     0,     0,   440,     0,     0,     0,
     441,   442,     0,   443,   444,     0,     0,   445,   446,   447,
     448,   449,     0,   450,   451,     0,   452,     0,   454,  -412,
       0,   455,   456,   457,   458,   459,   460,   461,   462,     0,
       0,     0,   464,   465,     0,   466,   467,   468,  4806,   469,
       0,     0,     0,   471,   472,   473,     0,   474,     0,   475,
     476,     0,   478,   479,     0,   480,   481,     0,     0,     0,
     482,   483,   484,   485,     0,     0,     0,   486,     0,     0,
       0,     0,     0,     0,   489,     0,   491,     0,   492,   493,
     494,   495,   496,     0,     0,     0,     0,     0,   497,   498,
     499,     0,   500,     0,     0,   501,     0,     0,   502,     0,
     503,     0,   504,     0,   506,   507,   508,   509,     0,     0,
       0,   511,     0,     0,   512,   513,   514,   515,   516,   517,
       0,     0,   518,   519,   520,   521,     0,   522,   523,     0,
       0,   524,   525,   526,   527,     0,     0,   528,   529,     0,
     530,   531,   532,   533,     0,     0,     0,     0,     0,   534,
     535,     0,     0,     0,     0,   537,   538,     0,     0,   539,
     540,     0,   541,   542,     0,     0,     0,     0,     0,   545,
       0,     0,   546,     0,   547,     0,   548,   549,     0,     0,
       0,     0,     0,   550,     0,   551,     0,     0,   552,     0,
       0,     0,   553,     0,   554,   555,   556,   557,     0,     0,
    -412,     0,     0,     0,   558,   559,   560,     0,   561,     0,
     563,   564,     0,     0,   565,     0,     0,   566,   567,   568,
     569,   570,     0,   571,     0,     0,     0,     0,     0,     0,
       0,     0,   572,   573,   574,     0,   575,   576,   577,     0,
       0,     0,     0,   579,     0,   580,     0,     0,     0,     0,
       0,     0,   581,   582,     0,     0,   583,     0,   584,     0,
     585,   586,     0,     0,     0,   587,   588,   589,   590,   591,
     592,   593,   594,     0,   595,   596,   597,     0,   599,   600,
     601,   602,   603,   604,     0,   605,   606,   607,   608,   609,
     610,   611,   612,   613,   614,   615,   616,   617,   618,   619,
     620,   621,   622,   623,   624,   625,   626,   627,   198,   199,
       0,   200,   201,   202,   203,   204,     0,     0,   205,     0,
       0,     0,     0,   206,     0,     0,     0,     0,   208,   209,
     210,   211,   212,   213,     0,  -457,     0,     0,     0,   215,
       0,     0,     0,   216,     0,     0,   217,   218,   219,     0,
     220,     0,     0,     0,     0,     0,   223,  4799,     0,   224,
     225,     0,   226,   227,     0,     0,     0,     0,   230,   231,
     232,  4800,   234,   235,     0,   236,   237,     0,   238,   239,
       0,   241,     0,   243,   244,   245,   246,   247,   248,     0,
     249,   250,     0,   251,   252,   253,     0,   255,     0,     0,
       0,   256,     0,     0,     0,     0,   257,     0,     0,   258,
       0,     0,     0,   259,   260,   261,     0,     0,   262,     0,
       0,     0,     0,   263,     0,     0,     0,     0,     0,   265,
     266,     0,   267,     0,     0,     0,     0,     0,   268,   269,
     270,   271,   272,     0,     0,     0,     0,     0,     0,   274,
     275,   276,     0,     0,     0,   277,     0,  -450,   279,     0,
     280,   281,   282,     0,     0,   283,   284,     0,   285,   286,
     287,   288,   289,     0,     0,     0,   291,   292,   293,   294,
     295,     0,     0,   296,   297,  4801,   298,   299,   300,   301,
     302,     0,     0,     0,     0,     0,     0,     0,   305,   306,
       0,   307,     0,     0,     0,   308,     0,   309,   310,   311,
     312,     0,   313,     0,   314,     0,     0,     0,     0,   316,
       0,     0,     0,     0,   318,   319,     0,     0,     0,   320,
     321,   322,   323,  4802,     0,   324,     0,   326,     0,     0,
     327,     0,     0,     0,     0,   328,   329,     0,     0,     0,
       0,   331,     0,     0,     0,   332,   333,     0,   334,   335,
    4803,     0,     0,   336,     0,   337,     0,     0,     0,   339,
       0,     0,   340,  4804,     0,   341,   342,     0,     0,     0,
       0,     0,   343,   344,     0,   345,     0,   346,     0,   347,
     348,     0,     0,     0,     0,  -412,     0,     0,   349,     0,
     350,   351,   352,   353,   354,   355,   356,   357,   358,   359,
     360,   361,   362,   363,   364,   365,   366,   367,     0,   368,
     369,   370,     0,   371,   372,   373,   374,     0,   375,   376,
       0,     0,     0,     0,   377,   378,   379,   380,   381,   382,
       0,     0,   383,   384,     0,   385,     0,   386,     0,   387,
     388,   389,   390,   391,   392,   393,   394,   395,     0,     0,
     396,   397,     0,     0,   398,   399,   400,   401,   402,     0,
       0,     0,     0,   404,     0,     0,     0,   405,     0,   406,
     407,     0,   408,   409,  4805,     0,     0,   411,     0,     0,
       0,     0,     0,     0,     0,     0,     0,   412,   413,   414,
       0,   415,     0,   416,     0,   417,   418,   419,   420,   421,
     422,   423,   424,   425,   426,     0,     0,     0,     0,   429,
     430,     0,   431,     0,   432,   433,   434,   435,   436,     0,
     437,   438,   439,     0,     0,   440,     0,     0,     0,   441,
     442,     0,   443,   444,     0,     0,   445,   446,   447,   448,
     449,     0,   450,   451,     0,   452,     0,   454,  -412,     0,
     455,   456,   457,   458,   459,   460,   461,   462,     0,     0,
       0,   464,   465,     0,   466,   467,   468,  4806,   469,     0,
       0,     0,   471,   472,   473,     0,   474,     0,   475,   476,
       0,   478,   479,     0,   480,   481,     0,     0,     0,   482,
     483,   484,   485,     0,     0,     0,   486,     0,     0,     0,
       0,     0,     0,   489,     0,   491,     0,   492,   493,   494,
     495,   496,     0,     0,     0,     0,     0,   497,   498,   499,
       0,   500,     0,     0,   501,     0,     0,   502,     0,   503,
       0,   504,     0,   506,   507,   508,   509,     0,     0,     0,
     511,     0,     0,   512,   513,   514,   515,   516,   517,     0,
       0,   518,   519,   520,   521,     0,   522,   523,     0,     0,
     524,   525,   526,   527,     0,     0,   528,   529,     0,   530,
     531,   532,   533,     0,     0,     0,     0,     0,   534,   535,
       0,     0,     0,     0,   537,   538,     0,     0,   539,   540,
       0,   541,   542,     0,     0,     0,     0,     0,   545,     0,
       0,   546,     0,   547,     0,   548,   549,     0,     0,     0,
       0,     0,   550,     0,   551,     0,     0,   552,     0,     0,
       0,   553,     0,   554,   555,   556,   557,     0,     0,  -412,
       0,     0,     0,   558,   559,   560,     0,   561,     0,   563,
     564,     0,     0,   565,     0,     0,   566,   567,   568,   569,
     570,     0,   571,     0,     0,     0,     0,     0,     0,     0,
       0,   572,   573,   574,     0,   575,   576,   577,     0,     0,
       0,     0,   579,     0,   580,     0,     0,     0,     0,     0,
       0,   581,   582,     0,     0,   583,     0,   584,     0,   585,
     586,     0,     0,     0,   587,   588,   589,   590,   591,   592,
     593,   594,     0,   595,   596,   597,     0,   599,   600,   601,
     602,   603,   604,     0,   605,   606,   607,   608,   609,   610,
     611,   612,   613,   614,   615,   616,   617,   618,   619,   620,
     621,   622,   623,   624,   625,   626,   627,   198,   199,     0,
     200,   201,   202,   203,   204,     0,     0,   205,     0,     0,
       0,     0,   206,     0,     0,     0,     0,   208,   209,   210,
     211,   212,   213,     0,  -457,     0,     0,     0,   215,     0,
       0,     0,   216,     0,     0,   217,   218,   219,     0,   220,
       0,     0,     0,     0,     0,   223,  4799,     0,   224,   225,
       0,   226,   227,     0,     0,     0,     0,   230,   231,   232,
    4800,   234,   235,     0,   236,   237,     0,   238,   239,     0,
     241,     0,   243,   244,   245,   246,   247,   248,     0,   249,
     250,     0,   251,   252,   253,     0,   255,     0,     0,     0,
     256,     0,     0,     0,     0,   257,     0,     0,   258,     0,
       0,     0,   259,   260,   261,     0,     0,   262,     0,     0,
       0,     0,   263,     0,     0,     0,     0,     0,   265,   266,
       0,   267,     0,     0,     0,     0,     0,   268,   269,   270,
     271,   272,     0,     0,     0,     0,     0,     0,   274,   275,
     276,     0,     0,     0,   277,     0,  5115,   279,     0,   280,
     281,   282,     0,     0,   283,   284,     0,   285,   286,   287,
     288,   289,     0,     0,     0,   291,   292,   293,   294,   295,
       0,     0,   296,   297,  4801,   298,   299,   300,   301,   302,
       0,     0,     0,     0,     0,     0,     0,   305,   306,     0,
     307,     0,     0,     0,   308,     0,   309,   310,   311,   312,
       0,   313,     0,   314,     0,     0,     0,     0,   316,     0,
       0,     0,     0,   318,   319,     0,     0,     0,   320,   321,
     322,   323,  4802,     0,   324,     0,   326,     0,     0,   327,
       0,     0,     0,     0,   328,   329,     0,     0,     0,     0,
     331,     0,     0,     0,   332,   333,     0,   334,   335,  4803,
       0,     0,   336,     0,   337,     0,     0,     0,   339,     0,
       0,   340,  4804,     0,   341,   342,     0,     0,     0,     0,
       0,   343,   344,     0,   345,     0,   346,     0,   347,   348,
       0,     0,     0,     0,  -412,     0,     0,   349,     0,   350,
     351,   352,   353,   354,   355,   356,   357,   358,   359,   360,
     361,   362,   363,   364,   365,   366,   367,     0,   368,   369,
     370,     0,   371,   372,   373,   374,     0,   375,   376,     0,
       0,     0,     0,   377,   378,   379,   380,   381,   382,     0,
       0,   383,   384,     0,   385,     0,   386,     0,   387,   388,
     389,   390,   391,   392,   393,   394,   395,     0,     0,   396,
     397,     0,     0,   398,   399,   400,   401,   402,     0,     0,
       0,     0,   404,     0,     0,     0,   405,     0,   406,   407,
       0,   408,   409,  4805,     0,     0,   411,     0,     0,     0,
       0,     0,     0,     0,     0,     0,   412,   413,   414,     0,
     415,     0,   416,     0,   417,   418,   419,   420,   421,   422,
     423,   424,   425,   426,     0,     0,     0,     0,   429,   430,
       0,   431,     0,   432,   433,   434,   435,   436,     0,   437,
     438,   439,     0,     0,   440,     0,     0,     0,   441,   442,
       0,   443,   444,     0,     0,   445,   446,   447,   448,   449,
       0,   450,   451,     0,   452,     0,   454,  -412,     0,   455,
     456,   457,   458,   459,   460,   461,   462,     0,     0,     0,
     464,   465,     0,   466,   467,   468,  4806,   469,     0,     0,
       0,   471,   472,   473,     0,   474,     0,   475,   476,     0,
     478,   479,     0,   480,   481,     0,     0,     0,   482,   483,
     484,   485,     0,     0,     0,   486,     0,     0,     0,     0,
       0,     0,   489,     0,   491,     0,   492,   493,   494,   495,
     496,     0,     0,     0,     0,     0,   497,   498,   499,     0,
     500,     0,     0,   501,     0,     0,   502,     0,   503,     0,
     504,     0,   506,   507,   508,   509,     0,     0,     0,   511,
       0,     0,   512,   513,   514,   515,   516,   517,     0,     0,
     518,   519,   520,   521,     0,   522,   523,     0,     0,   524,
     525,   526,   527,     0,     0,   528,   529,     0,   530,   531,
     532,   533,     0,     0,     0,     0,     0,   534,   535,     0,
       0,     0,     0,   537,   538,     0,     0,   539,   540,     0,
     541,   542,     0,     0,     0,     0,     0,   545,     0,     0,
     546,     0,   547,     0,   548,   549,     0,     0,     0,     0,
       0,   550,     0,   551,     0,     0,   552,     0,     0,     0,
     553,     0,   554,   555,   556,   557,     0,     0,  -412,     0,
       0,     0,   558,   559,   560,     0,   561,     0,   563,   564,
       0,     0,   565,     0,     0,   566,   567,   568,   569,   570,
       0,   571,     0,     0,     0,     0,     0,     0,     0,     0,
     572,   573,   574,     0,   575,   576,   577,     0,     0,     0,
       0,   579,     0,   580,     0,     0,     0,     0,     0,     0,
     581,   582,     0,     0,   583,     0,   584,     0,   585,   586,
       0,     0,     0,   587,   588,   589,   590,   591,   592,   593,
     594,     0,   595,   596,   597,     0,   599,   600,   601,   602,
     603,   604,     0,   605,   606,   607,   608,   609,   610,   611,
     612,   613,   614,   615,   616,   617,   618,   619,   620,   621,
     622,   623,   624,   625,   626,   627,   198,   199,     0,   200,
     201,   202,   203,   204,     0,     0,   205,     0,     0,     0,
       0,   206,     0,     0,     0,     0,   208,   209,   210,   211,
     212,   213,     0,  -457,     0,     0,     0,   215,     0,     0,
       0,   216,     0,     0,   217,   218,   219,     0,   220,     0,
       0,     0,     0,     0,   223,  4799,     0,   224,   225,     0,
     226,   227,     0,     0,     0,     0,   230,   231,   232,  4800,
     234,   235,     0,   236,   237,     0,   238,   239,     0,   241,
       0,   243,   244,   245,   246,   247,   248,     0,   249,   250,
       0,   251,   252,   253,     0,   255,     0,     0,     0,   256,
       0,     0,     0,     0,   257,     0,     0,   258,     0,     0,
       0,   259,   260,   261,     0,     0,   262,     0,     0,     0,
       0,   263,     0,     0,     0,     0,     0,   265,   266,     0,
     267,     0,     0,     0,     0,     0,   268,   269,   270,   271,
     272,     0,     0,     0,     0,     0,     0,   274,   275,   276,
       0,     0,     0,   277,     0,  5159,   279,     0,   280,   281,
     282,     0,     0,   283,   284,     0,   285,   286,   287,   288,
     289,     0,     0,     0,   291,   292,   293,   294,   295,     0,
       0,   296,   297,  4801,   298,   299,   300,   301,   302,     0,
       0,     0,     0,     0,     0,     0,   305,   306,     0,   307,
       0,     0,     0,   308,     0,   309,   310,   311,   312,     0,
     313,     0,   314,     0,     0,     0,     0,   316,     0,     0,
       0,     0,   318,   319,     0,     0,     0,   320,   321,   322,
     323,  4802,     0,   324,     0,   326,     0,     0,   327,     0,
       0,     0,     0,   328,   329,     0,     0,     0,     0,   331,
       0,     0,     0,   332,   333,     0,   334,   335,  4803,     0,
       0,   336,     0,   337,     0,     0,     0,   339,     0,     0,
     340,  4804,     0,   341,   342,     0,     0,     0,     0,     0,
     343,   344,     0,   345,     0,   346,     0,   347,   348,     0,
       0,     0,     0,  -412,     0,     0,   349,     0,   350,   351,
     352,   353,   354,   355,   356,   357,   358,   359,   360,   361,
     362,   363,   364,   365,   366,   367,     0,   368,   369,   370,
       0,   371,   372,   373,   374,     0,   375,   376,     0,     0,
       0,     0,   377,   378,   379,   380,   381,   382,     0,     0,
     383,   384,     0,   385,     0,   386,     0,   387,   388,   389,
     390,   391,   392,   393,   394,   395,     0,     0,   396,   397,
       0,     0,   398,   399,   400,   401,   402,     0,     0,     0,
       0,   404,     0,     0,     0,   405,     0,   406,   407,     0,
     408,   409,  4805,     0,     0,   411,     0,     0,     0,     0,
       0,     0,     0,     0,     0,   412,   413,   414,     0,   415,
       0,   416,     0,   417,   418,   419,   420,   421,   422,   423,
     424,   425,   426,     0,     0,     0,     0,   429,   430,     0,
     431,     0,   432,   433,   434,   435,   436,     0,   437,   438,
     439,     0,     0,   440,     0,     0,     0,   441,   442,     0,
     443,   444,     0,     0,   445,   446,   447,   448,   449,     0,
     450,   451,     0,   452,     0,   454,  -412,     0,   455,   456,
     457,   458,   459,   460,   461,   462,     0,     0,     0,   464,
     465,     0,   466,   467,   468,  4806,   469,     0,     0,     0,
     471,   472,   473,     0,   474,     0,   475,   476,     0,   478,
     479,     0,   480,   481,     0,     0,     0,   482,   483,   484,
     485,     0,     0,     0,   486,     0,     0,     0,     0,     0,
       0,   489,     0,   491,     0,   492,   493,   494,   495,   496,
       0,     0,     0,     0,     0,   497,   498,   499,     0,   500,
       0,     0,   501,     0,     0,   502,     0,   503,     0,   504,
       0,   506,   507,   508,   509,     0,     0,     0,   511,     0,
       0,   512,   513,   514,   515,   516,   517,     0,     0,   518,
     519,   520,   521,     0,   522,   523,     0,     0,   524,   525,
     526,   527,     0,     0,   528,   529,     0,   530,   531,   532,
     533,     0,     0,     0,     0,     0,   534,   535,     0,     0,
       0,     0,   537,   538,     0,     0,   539,   540,     0,   541,
     542,     0,     0,     0,     0,     0,   545,     0,     0,   546,
       0,   547,     0,   548,   549,     0,     0,     0,     0,     0,
     550,     0,   551,     0,     0,   552,     0,     0,     0,   553,
       0,   554,   555,   556,   557,     0,     0,  -412,     0,     0,
       0,   558,   559,   560,     0,   561,     0,   563,   564,     0,
       0,   565,     0,     0,   566,   567,   568,   569,   570,     0,
     571,     0,     0,     0,     0,     0,     0,     0,     0,   572,
     573,   574,     0,   575,   576,   577,     0,     0,     0,     0,
     579,     0,   580,     0,     0,     0,     0,     0,     0,   581,
     582,     0,     0,   583,     0,   584,     0,   585,   586,     0,
       0,     0,   587,   588,   589,   590,   591,   592,   593,   594,
       0,   595,   596,   597,     0,   599,   600,   601,   602,   603,
     604,     0,   605,   606,   607,   608,   609,   610,   611,   612,
     613,   614,   615,   616,   617,   618,   619,   620,   621,   622,
     623,   624,   625,   626,   627,   198,   199,     0,   200,   201,
     202,   203,   204,     0,     0,   205,     0,     0,     0,     0,
     206,     0,     0,     0,     0,   208,   209,   210,   211,   212,
     213,     0,  -457,     0,     0,     0,   215,     0,     0,     0,
     216,     0,     0,   217,   218,   219,     0,   220,     0,     0,
       0,     0,     0,   223,  4799,     0,   224,   225,     0,   226,
     227,     0,     0,     0,     0,   230,   231,   232,  4800,   234,
     235,     0,   236,   237,     0,   238,   239,     0,   241,     0,
     243,   244,   245,   246,   247,   248,     0,   249,   250,     0,
     251,   252,   253,     0,   255,     0,     0,     0,   256,     0,
       0,     0,     0,   257,     0,     0,   258,     0,     0,     0,
     259,   260,   261,     0,     0,   262,     0,     0,     0,     0,
     263,     0,     0,     0,     0,     0,   265,   266,     0,   267,
       0,     0,     0,     0,     0,   268,   269,   270,   271,   272,
       0,     0,     0,     0,     0,     0,   274,   275,   276,     0,
       0,     0,   277,     0,  -431,   279,     0,   280,   281,   282,
       0,     0,   283,   284,     0,   285,   286,   287,   288,   289,
       0,     0,     0,   291,   292,   293,   294,   295,     0,     0,
     296,   297,  4801,   298,   299,   300,   301,   302,     0,     0,
       0,     0,     0,     0,     0,   305,   306,     0,   307,     0,
       0,     0,   308,     0,   309,   310,   311,   312,     0,   313,
       0,   314,     0,     0,     0,     0,   316,     0,     0,     0,
       0,   318,   319,     0,     0,     0,   320,   321,   322,   323,
    4802,     0,   324,     0,   326,     0,     0,   327,     0,     0,
       0,     0,   328,   329,     0,     0,     0,     0,   331,     0,
       0,     0,   332,   333,     0,   334,   335,  4803,     0,     0,
     336,     0,   337,     0,     0,     0,   339,     0,     0,   340,
    4804,     0,   341,   342,     0,     0,     0,     0,     0,   343,
     344,     0,   345,     0,   346,     0,   347,   348,     0,     0,
       0,     0,  -412,     0,     0,   349,     0,   350,   351,   352,
     353,   354,   355,   356,   357,   358,   359,   360,   361,   362,
     363,   364,   365,   366,   367,     0,   368,   369,   370,     0,
     371,   372,   373,   374,     0,   375,   376,     0,     0,     0,
       0,   377,   378,   379,   380,   381,   382,     0,     0,   383,
     384,     0,   385,     0,   386,     0,   387,   388,   389,   390,
     391,   392,   393,   394,   395,     0,     0,   396,   397,     0,
       0,   398,   399,   400,   401,   402,     0,     0,     0,     0,
     404,     0,     0,     0,   405,     0,   406,   407,     0,   408,
     409,  4805,     0,     0,   411,     0,     0,     0,     0,     0,
       0,     0,     0,     0,   412,   413,   414,     0,   415,     0,
     416,     0,   417,   418,   419,   420,   421,   422,   423,   424,
     425,   426,     0,     0,     0,     0,   429,   430,     0,   431,
       0,   432,   433,   434,   435,   436,     0,   437,   438,   439,
       0,     0,   440,     0,     0,     0,   441,   442,     0,   443,
     444,     0,     0,   445,   446,   447,   448,   449,     0,   450,
     451,     0,   452,     0,   454,  -412,     0,   455,   456,   457,
     458,   459,   460,   461,   462,     0,     0,     0,   464,   465,
       0,   466,   467,   468,  4806,   469,     0,     0,     0,   471,
     472,   473,     0,   474,     0,   475,   476,     0,   478,   479,
       0,   480,   481,     0,     0,     0,   482,   483,   484,   485,
       0,     0,     0,   486,     0,     0,     0,     0,     0,     0,
     489,     0,   491,     0,   492,   493,   494,   495,   496,     0,
       0,     0,     0,     0,   497,   498,   499,     0,   500,     0,
       0,   501,     0,     0,   502,     0,   503,     0,   504,     0,
     506,   507,   508,   509,     0,     0,     0,   511,     0,     0,
     512,   513,   514,   515,   516,   517,     0,     0,   518,   519,
     520,   521,     0,   522,   523,     0,     0,   524,   525,   526,
     527,     0,     0,   528,   529,     0,   530,   531,   532,   533,
       0,     0,     0,     0,     0,   534,   535,     0,     0,     0,
       0,   537,   538,     0,     0,   539,   540,     0,   541,   542,
       0,     0,     0,     0,     0,   545,     0,     0,   546,     0,
     547,     0,   548,   549,     0,     0,     0,     0,     0,   550,
       0,   551,     0,     0,   552,     0,     0,     0,   553,     0,
     554,   555,   556,   557,     0,     0,  -412,     0,     0,     0,
     558,   559,   560,     0,   561,     0,   563,   564,     0,     0,
     565,     0,     0,   566,   567,   568,   569,   570,     0,   571,
       0,     0,     0,     0,     0,     0,     0,     0,   572,   573,
     574,     0,   575,   576,   577,     0,     0,     0,     0,   579,
       0,   580,     0,     0,     0,     0,     0,     0,   581,   582,
       0,     0,   583,     0,   584,     0,   585,   586,     0,     0,
       0,   587,   588,   589,   590,   591,   592,   593,   594,     0,
     595,   596,   597,     0,   599,   600,   601,   602,   603,   604,
       0,   605,   606,   607,   608,   609,   610,   611,   612,   613,
     614,   615,   616,   617,   618,   619,   620,   621,   622,   623,
     624,   625,   626,   627,   198,   199,     0,   200,   201,   202,
     203,   204,     0,     0,   205,     0,     0,     0,     0,   206,
       0,     0,     0,     0,   208,   209,   210,   211,   212,   213,
       0,  -457,     0,     0,     0,   215,     0,     0,     0,   216,
       0,     0,   217,   218,   219,     0,   220,     0,     0,     0,
       0,     0,   223,  4799,     0,   224,   225,     0,   226,   227,
       0,     0,     0,     0,   230,   231,   232,  4800,   234,   235,
       0,   236,   237,     0,   238,   239,     0,   241,     0,   243,
     244,   245,   246,   247,   248,     0,   249,   250,     0,   251,
     252,   253,     0,   255,     0,     0,     0,   256,     0,     0,
       0,     0,   257,     0,     0,   258,     0,     0,     0,   259,
     260,   261,     0,     0,   262,     0,     0,     0,     0,   263,
       0,     0,     0,     0,     0,   265,   266,     0,   267,     0,
       0,     0,     0,     0,   268,   269,   270,   271,   272,     0,
       0,     0,     0,     0,     0,   274,   275,   276,     0,     0,
       0,   277,     0,     0,   279,     0,   280,   281,   282,     0,
       0,   283,   284,     0,   285,   286,   287,   288,   289,     0,
       0,     0,   291,   292,   293,   294,   295,     0,     0,   296,
     297,  4801,   298,   299,   300,   301,   302,     0,     0,     0,
       0,     0,     0,     0,   305,   306,     0,   307,     0,     0,
       0,   308,     0,   309,   310,   311,   312,     0,   313,     0,
     314,     0,     0,     0,     0,   316,     0,     0,     0,     0,
     318,   319,     0,     0,     0,   320,   321,   322,   323,  4802,
       0,   324,     0,   326,     0,     0,   327,     0,     0,     0,
       0,   328,   329,     0,     0,     0,     0,   331,     0,     0,
       0,   332,   333,     0,   334,   335,  4803,     0,     0,   336,
       0,   337,     0,     0,     0,   339,     0,     0,   340,  4804,
       0,   341,   342,     0,     0,     0,     0,     0,   343,   344,
       0,   345,     0,   346,     0,   347,   348,     0,     0,     0,
       0,  -412,     0,     0,   349,     0,   350,   351,   352,   353,
     354,   355,   356,   357,   358,   359,   360,   361,   362,   363,
     364,   365,   366,   367,     0,   368,   369,   370,     0,   371,
     372,   373,   374,     0,   375,   376,     0,     0,     0,     0,
     377,   378,   379,   380,   381,   382,     0,     0,   383,   384,
       0,   385,     0,   386,     0,   387,   388,   389,   390,   391,
     392,   393,   394,   395,     0,     0,   396,   397,     0,     0,
     398,   399,   400,   401,   402,     0,     0,     0,     0,   404,
       0,     0,     0,   405,     0,   406,   407,     0,   408,   409,
    4805,     0,     0,   411,     0,     0,     0,     0,     0,     0,
       0,     0,     0,   412,   413,   414,     0,   415,     0,   416,
       0,   417,   418,   419,   420,   421,   422,   423,   424,   425,
     426,     0,     0,     0,     0,   429,   430,     0,   431,     0,
     432,   433,   434,   435,   436,     0,   437,   438,   439,     0,
       0,   440,     0,     0,     0,   441,   442,     0,   443,   444,
       0,     0,   445,   446,   447,   448,   449,     0,   450,   451,
       0,   452,     0,   454,  -412,     0,   455,   456,   457,   458,
     459,   460,   461,   462,     0,     0,     0,   464,   465,     0,
     466,   467,   468,  4806,   469,     0,     0,     0,   471,   472,
     473,     0,   474,     0,   475,   476,     0,   478,   479,     0,
     480,   481,     0,     0,     0,   482,   483,   484,   485,     0,
       0,     0,   486,     0,     0,     0,     0,     0,     0,   489,
       0,   491,     0,   492,   493,   494,   495,   496,     0,     0,
       0,     0,     0,   497,   498,   499,     0,   500,     0,     0,
     501,     0,     0,   502,     0,   503,     0,   504,     0,   506,
     507,   508,   509,     0,     0,     0,   511,     0,     0,   512,
     513,   514,   515,   516,   517,     0,     0,   518,   519,   520,
     521,     0,   522,   523,     0,     0,   524,   525,   526,   527,
       0,     0,   528,   529,     0,   530,   531,   532,   533,     0,
       0,     0,     0,     0,   534,   535,     0,     0,     0,     0,
     537,   538,     0,     0,   539,   540,     0,   541,   542,     0,
       0,     0,     0,     0,   545,     0,     0,   546,     0,   547,
       0,   548,   549,     0,     0,     0,     0,     0,   550,     0,
     551,     0,     0,   552,     0,     0,     0,   553,     0,   554,
     555,   556,   557,     0,     0,  -412,     0,     0,     0,   558,
     559,   560,     0,   561,     0,   563,   564,     0,     0,   565,
       0,     0,   566,   567,   568,   569,   570,     0,   571,     0,
       0,     0,     0,     0,     0,     0,     0,   572,   573,   574,
       0,   575,   576,   577,     0,     0,     0,     0,   579,     0,
     580,     0,     0,     0,     0,     0,     0,   581,   582,     0,
       0,   583,     0,   584,     0,   585,   586,     0,     0,     0,
     587,   588,   589,   590,   591,   592,   593,   594,     0,   595,
     596,   597,     0,   599,   600,   601,   602,   603,   604,     0,
     605,   606,   607,   608,   609,   610,   611,   612,   613,   614,
     615,   616,   617,   618,   619,   620,   621,   622,   623,   624,
     625,   626,   627,   198,   199,     0,   200,   201,   202,   203,
     204,     0,     0,   205,     0,     0,     0,     0,   206,     0,
       0,     0,     0,   208,   209,   210,   211,   212,   213,     0,
    -457,     0,     0,     0,   215,     0,     0,     0,   216,     0,
       0,   217,   218,   219,     0,   220,     0,     0,     0,     0,
       0,   223,  4799,     0,   224,   225,     0,   226,   227,     0,
       0,     0,     0,   230,   231,   232,  4800,   234,   235,     0,
     236,   237,     0,   238,   239,     0,   241,     0,   243,   244,
     245,   246,   247,   248,     0,   249,   250,     0,   251,   252,
     253,     0,   255,     0,     0,     0,   256,     0,     0,     0,
       0,   257,     0,     0,   258,     0,     0,     0,   259,   260,
     261,     0,     0,   262,     0,     0,     0,     0,   263,     0,
       0,     0,     0,     0,   265,   266,     0,   267,     0,     0,
       0,     0,     0,   268,   269,   270,   271,   272,     0,     0,
       0,     0,     0,     0,   274,   275,   276,     0,     0,     0,
     277,     0,     0,   279,     0,   280,   281,   282,     0,     0,
     283,   284,     0,   285,   286,   287,   288,   289,     0,     0,
       0,   291,   292,   293,   294,   295,     0,     0,   296,   297,
    4801,   298,   299,   300,   301,   302,     0,     0,     0,     0,
       0,     0,     0,   305,   306,     0,   307,     0,     0,     0,
     308,     0,   309,   310,   311,   312,     0,   313,     0,   314,
       0,     0,     0,     0,   316,     0,     0,     0,     0,   318,
     319,     0,     0,     0,   320,   321,   322,   323,  4802,     0,
     324,     0,   326,     0,     0,   327,     0,     0,     0,     0,
     328,   329,     0,     0,     0,     0,   331,     0,     0,     0,
     332,   333,     0,   334,   335,  4803,     0,     0,   336,     0,
     337,     0,     0,     0,   339,     0,     0,   340,  4804,     0,
     341,   342,     0,     0,     0,     0,     0,   343,   344,     0,
     345,     0,   346,     0,   347,   348,     0,     0,     0,     0,
    -412,     0,     0,   349,     0,   350,   351,   352,   353,   354,
     355,   356,   357,   358,   359,   360,   361,   362,   363,   364,
     365,   366,   367,     0,   368,   369,   370,     0,   371,   372,
     373,   374,     0,   375,   376,     0,     0,     0,     0,   377,
     378,   379,   380,   381,   382,     0,     0,   383,   384,     0,
     385,     0,   386,     0,   387,   388,   389,   390,   391,   392,
     393,   394,   395,     0,     0,   396,   397,     0,     0,   398,
     399,   400,   401,   402,     0,     0,     0,     0,   404,     0,
       0,     0,   405,     0,   406,   407,     0,   408,   409,  4805,
       0,     0,   411,     0,     0,     0,     0,     0,     0,     0,
       0,     0,   412,   413,   414,     0,   415,     0,   416,     0,
     417,   418,   419,   420,   421,   422,   423,   424,   425,   426,
       0,     0,     0,     0,   429,   430,     0,   431,     0,   432,
     433,   434,   435,   436,     0,   437,   438,   439,     0,     0,
     440,     0,     0,     0,   441,   442,     0,   443,   444,     0,
       0,   445,   446,   447,   448,   449,     0,   450,   451,     0,
     452,     0,   454,  -412,     0,   455,   456,   457,   458,   459,
     460,   461,   462,     0,     0,     0,   464,   465,     0,   466,
     467,   468,  4806,   469,     0,     0,     0,   471,   472,   473,
       0,   474,     0,   475,   476,     0,   478,   479,     0,   480,
     481,     0,     0,     0,   482,   483,   484,   485,     0,     0,
       0,   486,     0,     0,     0,     0,     0,     0,   489,     0,
     491,     0,   492,   493,   494,   495,   496,     0,     0,     0,
       0,     0,   497,   498,   499,     0,   500,     0,     0,   501,
       0,     0,   502,     0,   503,     0,   504,     0,   506,   507,
     508,   509,     0,     0,     0,   511,     0,     0,   512,   513,
     514,   515,   516,   517,     0,     0,   518,   519,   520,   521,
       0,   522,   523,     0,     0,   524,   525,   526,   527,     0,
       0,   528,   529,     0,   530,   531,   532,   533,     0,     0,
       0,     0,     0,   534,   535,     0,     0,     0,     0,   537,
     538,     0,     0,   539,   540,     0,   541,   542,     0,     0,
       0,     0,     0,   545,     0,     0,  5057,     0,   547,     0,
     548,   549,     0,     0,     0,     0,     0,   550,     0,   551,
       0,     0,   552,     0,     0,     0,   553,     0,   554,   555,
     556,   557,     0,     0,  -412,     0,     0,     0,   558,   559,
     560,     0,   561,     0,   563,   564,     0,     0,   565,     0,
       0,   566,   567,   568,   569,   570,     0,   571,     0,     0,
       0,     0,     0,     0,     0,     0,   572,   573,   574,     0,
     575,   576,   577,     0,     0,     0,     0,   579,     0,   580,
       0,     0,     0,     0,     0,     0,   581,   582,     0,     0,
     583,     0,   584,     0,   585,   586,     0,     0,     0,   587,
     588,   589,   590,   591,   592,   593,   594,     0,   595,   596,
     597,     0,   599,   600,   601,   602,   603,   604,     0,   605,
     606,   607,   608,   609,   610,   611,   612,   613,   614,   615,
     616,   617,   618,   619,   620,   621,   622,   623,   624,   625,
     626,   627,   198,   199,     0,   200,   201,   202,   203,   204,
       0,     0,   205,     0,     0,     0,     0,   206,     0,     0,
       0,     0,   208,   209,   210,   211,   212,   213,     0,     0,
       0,     0,     0,   215,     0,     0,     0,   216,     0,     0,
     217,   218,   219,     0,   220,     0,     0,     0,     0,     0,
     223,     0,     0,   224,   225,     0,   226,   227,     0,     0,
       0,     0,   230,   231,   232,   233,   234,   235,     0,   236,
     237,     0,   238,   239,     0,   241,     0,   243,   244,   245,
     246,   247,   248,     0,   249,   250,     0,   251,   252,   253,
       0,   255,     0,     0,     0,   256,     0,     0,     0,     0,
     257,     0,     0,   258,     0,     0,     0,   259,   260,   261,
       0,     0,   262,     0,     0,     0,     0,   263,     0,     0,
       0,     0,     0,   265,   266,     0,   267,     0,     0,     0,
       0,     0,   268,   269,   270,   271,   272,     0,     0,     0,
       0,     0,     0,   274,   275,   276,     0,     0,     0,   277,
       0,     0,   279,     0,   280,   281,   282,     0,     0,   283,
     284,     0,   285,   286,   287,   288,   289,     0,     0,     0,
     291,   292,   293,   294,   295,     0,     0,   296,   297,     0,
     298,   299,   300,   301,   302,     0,     0,     0,     0,     0,
       0,     0,   305,   306,     0,   307,     0,     0,     0,   308,
       0,   309,   310,   311,   312,     0,   313,     0,   314,     0,
       0,     0,     0,   316,     0,     0,     0,     0,   318,   319,
       0,     0,     0,   320,   321,   322,   323,     0,     0,   324,
       0,   326,     0,     0,   327,     0,     0,     0,     0,   328,
     329,     0,     0,     0,     0,   331,     0,     0,     0,   332,
     333,     0,   334,   335,     0,     0,     0,   336,     0,   337,
       0,     0,     0,   339,     0,     0,   340,     0,     0,   341,
     342,     0,     0,     0,     0,     0,   343,   344,     0,   345,
       0,   346,     0,   347,   348,     0,     0,     0,     0,     0,
       0,     0,   349,     0,   350,   351,   352,   353,   354,   355,
     356,   357,   358,   359,   360,   361,   362,   363,   364,   365,
     366,   367,     0,   368,   369,   370,     0,   371,   372,   373,
     374,     0,   375,   376,     0,     0,     0,     0,   377,   378,
     379,   380,   381,   382,     0,     0,   383,   384,     0,   385,
       0,   386,     0,   387,   388,   389,   390,   391,   392,   393,
     394,   395,     0,     0,   396,   397,     0,     0,   398,   399,
     400,   401,   402,     0,     0,     0,     0,   404,     0,     0,
       0,   405,     0,   406,   407,     0,   408,   409,   410,     0,
       0,   411,     0,     0,     0,     0,     0,     0,     0,     0,
       0,   412,   413,   414,     0,   415,     0,   416,     0,   417,
     418,   419,   420,   421,   422,   423,   424,   425,   426,     0,
       0,     0,     0,   429,   430,     0,   431,     0,   432,   433,
     434,   435,   436,     0,   437,   438,   439,     0,     0,   440,
       0,     0,     0,   441,   442,     0,   443,   444,     0,     0,
     445,   446,   447,   448,   449,     0,   450,   451,     0,   452,
       0,   454,     0,     0,   455,   456,   457,   458,   459,   460,
     461,   462,     0,     0,     0,   464,   465,     0,   466,   467,
     468,     0,   469,     0,     0,     0,   471,   472,   473,     0,
     474,     0,   475,   476,     0,   478,   479,     0,   480,   481,
       0,     0,     0,   482,   483,   484,   485,     0,     0,     0,
     486,     0,     0,     0,     0,     0,     0,   489,     0,   491,
       0,   492,   493,   494,   495,   496,     0,     0,     0,     0,
       0,   497,   498,   499,     0,   500,     0,     0,   501,     0,
       0,   502,     0,   503,     0,   504,     0,   506,   507,   508,
     509,     0,     0,     0,   511,     0,     0,   512,   513,   514,
     515,   516,   517,     0,     0,   518,   519,   520,   521,     0,
     522,   523,     0,     0,   524,   525,   526,   527,     0,     0,
     528,   529,     0,   530,   531,   532,   533,     0,     0,     0,
       0,     0,   534,   535,     0,     0,     0,     0,   537,   538,
       0,     0,   539,   540,     0,   541,   542,     0,     0,     0,
       0,     0,   545,     0,     0,   546,     0,   547,     0,   548,
     549,     0,     0,     0,     0,     0,   550,     0,   551,     0,
       0,   552,     0,     0,     0,   553,     0,   554,   555,   556,
     557,     0,     0,     0,     0,     0,     0,   558,   559,   560,
       0,   561,     0,   563,   564,     0,     0,   565,     0,     0,
     566,   567,   568,   569,   570,     0,   571,     0,     0,     0,
       0,     0,     0,     0,     0,   572,   573,   574,     0,   575,
     576,   577,     0,     0,     0,     0,   579,     0,   580,     0,
       0,     0,     0,     0,     0,   581,   582,     0,     0,   583,
       0,   584,     0,   585,   586,     0,     0,     0,   587,   588,
     589,   590,   591,   592,   593,   594,     0,   595,   596,   597,
       0,   599,   600,   601,   602,   603,   604,     0,   605,   606,
     607,   608,   609,   610,   611,   612,   613,   614,   615,   616,
     617,   618,   619,   620,   621,   622,   623,   624,   625,   626,
     627,  3518,  3519,     0,     0,     0,     0,  3520,     0,  3521,
       0,  3522,  3523,     0,     0,  3518,  3519,     0,     0,     0,
       0,  3520,     0,  3521,     0,  3522,  3523,     0,     0,  3524,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3524,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3525,
       0,     0,  3526,     0,     0,     0,     0,     0,     0,     0,
    3527,     0,     0,  3525,     0,     0,  3526,     0,     0,     0,
       0,     0,     0,     0,  3527,     0,     0,     0,     0,  3190,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3190,     0,     0,  3528,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3528,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3529,     0,  3530,     0,     0,     0,
       0,  4952,     0,     0,     0,     0,     0,     0,  3529,     0,
    3530,     0,  3531,  3532,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3531,  3532,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3533,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3534,  3533,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3534,     0,     0,     0,     0,  3535,     0,     0,     0,
       0,     0,     0,     0,     0,  3536,  3537,     0,  3538,     0,
    3535,     0,     0,     0,     0,     0,     0,     0,     0,  3536,
    3537,     0,  3538,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,  3539,  3540,  3541,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3539,
    3540,  3541,     0,     0,  3542,  3543,  3544,     0,     0,     0,
       0,  3545,     0,     0,  3546,     0,     0,     0,  3542,  3543,
    3544,     0,     0,     0,     0,  3545,     0,     0,  3546,     0,
       0,     0,  3547,  3548,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3547,  3548,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3549,  3550,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3549,  3550,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,  3195,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,  3195,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3551,     0,     0,     0,  3552,     0,
       0,     0,     0,     0,     0,     0,     0,     0,  3551,     0,
    3553,     0,  3552,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,  3553,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
    3554,     0,     0,  3555,     0,     0,  3556,  3557,  3558,  3559,
       0,     0,     0,     0,  3554,     0,     0,  3555,     0,     0,
    3556,  3557,  3558,  3559,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,  3560,
    3561,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,     0,     0,  3560,  3561,     0,     0,     0,     0,     0,
       0,     0,     0,     0,     0,     0,     0,  3562,     0,     0,
       0,     0,     0,     0,     0,     0,     0,     0,     0,     0,
       0,  3562
};

static const yytype_int16 yycheck[] =
{
       6,    57,    43,     0,   791,  1036,   804,   181,     0,    15,
       0,   953,    18,   932,   933,  1037,    22,  1026,  1130,  1181,
    1030,  1084,    96,  1028,   708,    31,  1512,  1019,   114,  2001,
      21,   114,    38,   952,  1272,    41,  1586,  1181,  2435,  1641,
      46,     6,  2560,    49,  2239,  2240,  1272,    53,    39,    55,
      60,  1050,    43,  1991,   995,  1233,  1606,  1308,  1406,    60,
    2796,  2268,  1103,  1104,  2271,  2272,  1672,  1856,  1857,    43,
    1050,    63,  2197,    63,  1624,  1864,  1865,  1866,    19,  2661,
    1021,  1429,  1966,  2044,  2137,  3008,  2271,  2272,  2879,    30,
      96,  1132,  2562,    59,    35,  2438,  2471,  1966,  3564,   669,
    2475,  1560,  1353,  1144,  1145,  1146,  2044,  1123,  1586,  1150,
    3564,  2311,  1560,  1560,  2685,  1938,  1588,  3422,  3058,  2039,
    1592,  2214,  2080,  3036,    21,  1354,  2438,   119,  3470,  2630,
    3584,  3585,  2729,  2715,  1606,  2438,  2057,  2438,  2120,  2693,
     146,   950,    39,   641,   642,  3113,  1618,  4153,  1189,   655,
     656,  2446,  1013,  3113,  2250,  3342,  2138,  1571,   119,  4249,
      21,  2253,  2144,  3665,  2292,  2281,  2219,    21,  2150,   175,
       5,   177,    71,  2278,   180,   181,   182,   183,    22,  2462,
    2463,  2464,    18,    19,    18,    19,    73,    52,  1096,  1097,
    1098,   197,    18,    19,  2556,  2478,  2324,  2325,    35,  1107,
    2293,    73,  2295,    71,  2601,    49,   776,   777,    71,   779,
      68,  2304,   177,    22,  1277,   180,    11,  2702,    18,    19,
    2503,   158,   792,   144,  2507,   125,   194,  2824,  2435,  2322,
    1138,   125,   160,  1141,    21,    21,    19,  4119,   194,   156,
    2523,  2524,    18,    19,   197,   176,  2529,    18,    19,    73,
    2343,  2739,  1160,  1161,  2347,    62,  1164,    18,    19,    31,
      48,    22,  2545,  2546,  1205,  4093,    48,    78,   246,   100,
     130,  2554,    18,    19,  1182,  1183,     9,   249,   163,  1187,
    1188,    33,  2211,   158,  2213,   156,  1073,    77,   150,    21,
    2687,   235,  1706,   246,    21,   156,    29,  1360,   373,   150,
     125,    34,   146,  3469,   327,  1088,  1089,    39,    67,    18,
      19,    43,    21,    18,    19,   125,   162,    18,    19,   197,
      70,  2809,   131,   816,   817,   818,    18,    19,   821,   822,
     103,   156,   825,   125,   827,   828,   829,   373,   373,   183,
    3933,    52,    18,    19,    18,    19,   156,   378,   197,    37,
     144,  2839,  2840,   197,  4327,  3537,  3538,   156,  2411,  3541,
     156,    18,    19,   197,   156,    21,   194,    71,  2421,   219,
     131,   200,    23,    18,    19,    23,   194,  3559,    18,    19,
     222,    21,   111,    39,    18,    19,    44,    35,   473,    70,
      12,    18,    19,    87,  2601,  4230,   109,   484,   456,    18,
      19,    49,    35,  1408,  2306,   276,   465,   238,   407,   902,
      61,    62,  4842,    61,    62,   125,  2318,   156,   246,  4803,
    4804,   430,    59,  1428,   388,   156,   191,   258,   572,   156,
     501,    21,   139,    64,   230,  1119,   258,  3377,    21,   212,
     271,   572,  1229,   316,   231,   186,  2348,   407,   635,  1133,
     194,    18,    19,   433,    25,   278,   176,   285,  2551,   156,
     193,   165,  1260,  1261,   572,   372,    13,  1386,    40,   374,
      73,    37,   262,   482,  2376,   649,   583,  3004,  1397,   156,
    2687,   572,    18,    19,   150,   548,  2974,   156,  1480,    22,
     389,    74,    18,    19,   197,   370,  2871,   249,   429,   186,
     378,   447,   246,  4562,    18,    19,   235,   293,  3850,   194,
     615,    18,    19,   449,   282,    43,   563,   235,     9,   566,
     751,   389,   137,   275,   355,   266,   389,   316,   759,  1521,
     758,   219,  1537,  1538,   401,   245,   764,   152,  4420,   176,
      31,   285,   572,   180,   480,   263,   249,    18,    19,   276,
    1348,   387,   583,   387,   390,  3737,   390,   194,    18,    19,
    1058,   387,   193,  4622,   390,   612,   629,    73,  2621,   404,
    2913,  3089,    18,    19,   502,   433,   763,   160,  3149,   266,
     485,  1087,    23,   450,   231,    73,  4052,   387,   534,   239,
     390,   420,   190,   140,    35,   198,   369,   168,   131,   249,
     285,  2726,  2727,   371,  2979,   470,  2702,   781,    49,   130,
     547,   387,   130,   203,   390,   759,   387,    18,    19,   390,
      61,    62,   194,   662,  4630,   332,   387,  1197,   369,   390,
     197,   762,  3937,  5063,   259,   641,   642,  2690,   511,   603,
    3371,   387,   733,   649,   390,   651,   477,   433,   413,   471,
     758,   361,   235,   219,    18,    19,   763,   637,   763,   482,
     659,   388,  3037,   285,    19,   572,  4501,  1237,   457,   456,
     728,   758,   547,   682,   401,   103,  5060,  5061,   387,   764,
     263,   390,   692,   316,   759,   389,   387,  1257,   609,   390,
     442,   692,   763,  1931,   331,   387,  2657,   355,   390,   659,
     874,   543,   708,  1941,   763,  1931,   493,   501,    81,   429,
      65,   387,  1753,   387,   390,   750,   390,  3114,   549,  2657,
    2813,  4694,   572,   241,  4730,  4607,  4608,   763,   158,  2279,
     387,  2281,   763,   390,   428,   758,   156,   566,  2831,  2832,
    2833,  2834,   387,   393,  2716,   390,   631,   387,   572,   609,
     390,  3322,   511,   387,  1795,   630,   390,  2718,   932,   470,
     387,    18,    19,   390,   635,  2113,   940,   941,   387,  2117,
    3113,   390,   634,   717,  2122,   781,  2565,   783,  1276,   566,
    2718,  2604,   788,   634,   595,   763,  1279,   418,   780,  2885,
     780,   763,   429,   543,  2253,   763,  4624,   641,   642,  3269,
     583,  3271,  3968,  2151,  2152,  2253,  2253,   763,  4401,  2693,
     763,   583,   648,   819,   648,   615,   623,  3017,   824,   637,
     387,   895,   648,   390,  2693,  2918,   763,  4009,  1869,   723,
    1328,  1739,   763,   620,  2950,  3432,   764,  4019,  3435,  2944,
    1338,  2946,   763,  1017,   761,  4027,   763,  2449,   648,   637,
     637,   387,   174,   699,   390,   637,   276,   643,  4864,  4949,
     759,   387,   543,   763,   390,  2794,   656,   657,   874,   664,
    1044,   758,   648,   387,   880,  1867,   390,   648,  4060,  3364,
     387,  1664,  3464,   390,   572,   763,   758,   648,   894,   895,
     761,   759,  3175,   613,   194,  2816,   759,  3259,   763,  1807,
     761,   256,   648,  1811,   739,   740,   764,  3114,   635,   763,
     996,  2883,   953,   996,   763,   628,   387,   923,   647,   390,
    4422,   758,  3205,   696,  3207,  1833,   932,   387,   759,   763,
     390,   759,   768,   759,   940,   941,   761,   763,  3221,   648,
    3223,   387,  3882,   648,   390,  1031,   937,   648,  1031,   758,
     601,   761,  1735,   601,  4836,  3238,   648,   963,   964,   950,
     563,  3449,   761,   763,   763,   761,   972,  1041,   634,   761,
    2429,   758,   648,   604,   648,  3766,   950,  3070,   626,  3072,
    3073,  2429,  2429,  3076,  3077,   285,   387,   763,   759,   390,
    3517,   648,   763,  3086,  3087,  1001,  4450,   989,  3091,   989,
     583,  3094,  2065,   648,  3097,   997,   572,  5097,   648,  1083,
    3498,  1017,  3137,   759,   648,   759,    77,   763,   141,  3111,
    1026,   648,   761,   387,   763,  2439,   390,   652,    21,   648,
     761,  1037,   763,    65,   761,  1041,   997,  1043,  1044,  1036,
    1046,    18,    19,   763,  1036,  1051,  1036,   694,  1054,  1055,
     759,  1090,  1058,  3580,   763,  4242,  5146,   563,   759,  1065,
    2666,   276,   763,  2965,   761,   663,   763,   759,  1074,  1075,
    1076,   763,  3995,  1079,   759,   563,  1082,  1083,   122,  1085,
    1086,   648,  1256,   759,   761,   759,   763,   763,   609,   763,
    1055,   609,   761,  1084,   763,  1151,  1270,   122,   831,    18,
      19,   176,   759,  3005,    18,    19,   763,  5113,   536,   759,
     758,  3013,   648,  1119,   759,   488,  3018,   547,   763,   963,
    1206,  1805,   648,  1206,  4037,  2613,   763,  1133,  4040,   763,
     387,  1305,  2195,   390,   648,  2054,   763,  1129,  3338,  1129,
    1019,   648,  3071,   465,   763,  3074,  3075,   388,  2170,  3078,
    3079,  3080,  3081,  3082,  3083,  3084,  3085,  4125,   891,  3088,
     601,  3090,   160,  3092,   897,  4125,  2328,  3096,  3899,  3900,
     377,   402,   153,   388,   285,  1181,   367,   648,  1234,  1235,
     372,  2667,  1238,   164,  2328,  1241,  1242,  1243,   648,   216,
    1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,   553,  1705,
    2438,   262,   648,    18,    19,   937,  1212,  3695,  3868,  1215,
     204,  1717,  2438,   160,  1058,   635,  3511,  3512,   950,   235,
      18,    19,   345,  1297,   256,   237,  1236,   763,    18,    19,
    2239,  2240,   641,  1407,   967,  1236,   263,   763,    18,    19,
      65,    77,    18,    19,    18,    19,   290,   648,    57,   763,
    1256,    18,    19,    18,    19,   111,   763,  1263,  1264,  1265,
    1266,   572,  1268,  1269,  1270,   290,  2075,  1273,  1274,  1275,
    1276,  3399,  1278,   231,  2083,   194,  1282,   209,  1352,  4733,
     158,   937,  1966,   197,   648,   353,  1277,   965,  1294,    85,
     123,  1297,   763,    18,    19,  1369,  2094,  3868,   179,  1305,
    1265,  3124,  1308,   763,  1269,   566,  1312,  1313,  1273,  3434,
     204,   380,   275,  3438,  1488,  3912,  3913,  3805,  1309,    18,
      19,  1327,  1328,  3877,  3417,    52,    18,    19,  2814,   373,
     487,  1337,  1338,   365,  1340,  1341,  3159,   179,  3839,  1513,
     125,   761,   378,  3940,  3941,  1915,  1352,  1353,   373,  3946,
     282,  3948,  1084,  3696,   429,  1361,  2217,  1398,   370,   237,
    2359,  2360,   763,  1369,  2602,   683,   292,  3463,   198,  1360,
      18,    19,  1546,  3197,   243,   293,  2602,   162,  1384,  2359,
    2360,   160,   704,   705,  3696,  3357,  1392,  4841,   603,  2640,
      47,   648,  3312,  3696,  4576,  3696,  4578,  3502,    71,   763,
    2950,  1407,  1476,  2581,  3376,   386,  2956,  1398,  2637,  4751,
     387,   456,  1309,   390,   247,   194,    18,    19,  3618,  3619,
    1494,   125,   950,   125,  1398,  2773,   262,  3915,  1084,  3411,
    3412,   256,  1276,  3353,   125,   753,  2784,  2785,  3396,  3041,
    2788,  1934,     9,    18,    19,  2696,   148,   758,  3936,  1947,
    1456,  1457,   138,  2494,   112,    18,    19,   115,   162,   759,
    4765,  4373,  3950,  3384,  3385,  1471,  2695,  3955,   387,  4382,
    1476,   390,   654,   387,  2586,  2587,   390,  3266,  1357,   209,
    2521,  3270,  1488,  1327,  1328,   187,  3693,  3694,  1494,  3039,
    3040,   372,   370,  1337,  1338,   606,  1340,   293,   456,  4953,
     493,  2989,  4238,   535,   502,  3466,   763,  1513,  3693,  3694,
      18,    19,  3433,   370,  4980,   433,  2086,   511,   380,    18,
      19,   553,   763,   653,   366,   367,  3809,   758,  3466,   455,
     372,  3624,   724,  1525,   141,   547,   108,  1543,   613,   730,
    1546,   484,   228,  1535,   759,  1277,   333,   192,  1281,   197,
     594,  2560,   282,    18,    19,   502,   763,    18,    19,   216,
     369,  3039,  4502,   287,   369,   276,   498,   122,  3040,   594,
     400,  3394,   387,   566,   643,   390,   637,  1309,    18,    19,
    2596,  4241,   764,    18,    19,   583,   231,   372,   255,   387,
     571,   585,   390,  2099,   356,   656,   657,   387,    18,    19,
     390,  1480,   435,  3153,  1645,    18,    19,   387,   122,   465,
     390,   387,   644,   387,   390,    21,   390,   511,   630,   186,
     387,  1277,   387,   390,   566,   390,   350,   620,  1360,   752,
     753,   754,   755,   188,   238,  4010,  3979,  1315,    18,    19,
    4563,   401,   369,   615,   637,  2553,   714,   715,   716,   221,
     572,  4048,  3111,  1309,  2659,   243,  2719,  2720,  2721,  3482,
    1666,  1667,   387,  3111,  3111,   390,  1398,   271,   372,   547,
    4241,   648,   635,  4894,   188,  2913,  1682,   388,  5132,  4470,
     510,   372,  1648,   728,  1002,    18,    19,  2913,   387,   125,
     547,   390,   366,   367,   563,   387,   197,   566,   390,  1873,
    4297,  3525,  4299,   139,  1360,   219,   742,   743,   589,  1715,
     636,   128,  1718,  1719,  1720,  3808,   389,   550,  3324,    18,
      19,   653,  1728,   502,   605,   643,  3364,  3365,   553,   648,
     535,  3555,  3556,  4203,   648,   290,  3374,  3375,   345,   387,
     672,   572,   390,   470,    18,    19,   128,   589,    18,    19,
     156,   401,   630,   501,  1719,  1720,   592,    18,    19,    18,
      19,    18,    19,   605,  4058,   758,   433,  4061,   498,    18,
      19,    71,   572,   630,   501,  2780,   290,  4700,   422,   615,
     635,   643,  4125,   570,  3607,   387,   763,   572,   390,    18,
      19,   763,   764,  1967,   231,    18,    19,    18,    19,  1805,
    1806,    18,    19,   220,   583,    18,    19,    18,    19,   596,
     572,  3049,   387,    13,   572,   390,   401,  3942,   373,   543,
     656,   657,   394,  1667,   387,   231,  2745,   390,   758,   486,
     127,  2005,   404,   648,  4770,   597,   758,  4773,  1682,   411,
     759,  4048,   397,  4414,  1900,   759,    18,    19,  4366,  4367,
     648,  5072,  5073,    18,    19,  3678,   293,  1913,   648,   373,
    1916,   277,   363,    13,   280,   165,    11,  1873,   648,   615,
    1398,  1715,   648,   477,   648,  3113,   293,  2051,   626,   387,
    1890,   648,   390,   648,    18,    19,   212,  3113,   387,  1890,
    4173,   390,   603,  2067,    13,   572,   332,   637,  3136,   239,
     637,  1893,   733,  1893,  1914,    18,    19,     0,   763,   249,
     194,   293,   751,  1914,   564,  1921,  4123,  4124,   576,   639,
     759,   579,   387,   648,  1930,   390,   387,    18,    19,   390,
    3674,   543,   258,   733,   637,  2009,  2010,   637,  4123,  4124,
     140,  1947,   586,   515,    13,  3689,  4543,   387,   763,   648,
     390,   248,   387,    86,   493,   390,   648,    53,   156,  1965,
    1966,  1967,   503,  3924,  4339,   763,    13,   387,    64,   614,
     390,   367,   105,   763,   387,   733,  1982,   390,   759,   564,
    1986,   127,   763,   763,   415,   612,  3924,   763,  1994,   763,
     140,  1997,   429,  3877,  2564,   401,   763,  4610,   763,  2005,
     648,   285,  4615,  2009,  2010,  3966,  3967,   387,  3877,  2693,
     390,  3972,   624,  2583,   430,  2585,  4141,   763,   764,   235,
     416,   140,   167,   763,  2198,  4961,   763,   566,  3966,  3967,
    3819,  2105,  3821,  2039,  3972,  2041,  3049,  2043,   763,   594,
     612,   122,  2043,   763,  2118,  2051,   648,   263,  4342,   615,
     456,    18,    19,   393,   387,   200,   733,   390,  2232,  3297,
     763,  2067,   388,   763,   763,    64,  3317,   759,   609,    18,
      19,   140,  4654,   648,  2065,    74,  3139,  2068,    18,    19,
     594,   620,   709,   608,  2075,   648,  1930,   493,   387,   389,
      89,   390,  2083,   140,  2100,  2101,  2102,  2103,  2104,  2105,
    2106,  2075,   248,  1947,  3355,    35,  3284,   188,  2114,  2083,
    2116,  3713,  2118,   387,  4727,  2121,   390,   387,    18,    19,
     390,  1965,   138,  3136,   160,    13,   387,  4645,   387,   390,
     387,   390,    62,   390,   509,  2100,  2101,  2102,   387,  2104,
     648,   390,  2316,   750,   751,   752,   753,   754,   755,   648,
    1994,  2116,  3403,  1997,    21,   575,  2121,   759,   387,  2169,
     566,   390,   575,   160,   387,    26,   387,   390,  2169,   390,
     387,  4040,  1525,   390,   387,  4300,   387,   390,  2352,   390,
    3342,    48,  1535,   648,   759,   401,   282,   648,   243,  2230,
      18,    19,  2198,   759,   369,  3339,   759,   763,  3342,  4068,
    4129,  4130,  4131,  4132,  2195,  4034,    18,    19,   648,   290,
      18,    19,   228,   648,   620,   387,  2222,  2258,   390,   758,
    3161,  4739,   387,    84,   216,   390,  2232,   282,   648,  4282,
     197,   637,   607,  2239,  2240,   648,   235,  3981,  3279,  2245,
    4069,   212,  3986,   433,  2250,  3883,  3990,   681,  3854,  2250,
     125,   759,   140,   387,   137,   564,   390,   194,   692,  2103,
     759,  2302,  2106,   138,   454,   230,  4227,  2273,   648,   152,
     537,   263,  2278,   448,   387,   420,   651,   390,  2284,  2285,
    2286,  2287,  2288,  2289,  2290,    18,    19,   758,  2294,  4227,
    2296,  4779,   373,   764,   759,  3294,   387,  2471,   759,   390,
    2306,  2475,  2308,  2309,   571,  2311,   496,  2313,  2314,   246,
    2316,  2317,  2318,  3293,  3319,   648,   122,  2323,    21,   759,
    2326,  4521,  2328,  4523,   759,  4418,  3470,  2333,  2469,  4726,
    2336,  2337,   220,  2065,  2469,  2476,  2068,   122,   592,  2280,
    2346,  2476,  2348,  2075,   122,    48,  2352,   212,   285,   648,
    2291,  2083,   758,   228,   249,   761,  2297,   763,   234,   235,
    2366,   615,  2951,   167,    18,    19,    18,    19,  2442,   127,
    2376,  2377,  2961,  2962,   648,   758,   237,   272,   648,   759,
    4777,  4778,   188,   300,   301,   261,  2327,   648,   533,   648,
    2331,   648,  4485,    18,    19,  2222,   681,  2338,  2339,   648,
    4144,  2245,  3364,   188,   764,   194,    59,   692,    38,  2065,
     188,  3373,  2068,   219,    18,    19,    46,  4935,  2245,   648,
     387,    18,    19,   390,  2430,   648,   759,   648,  2434,    18,
      19,   648,   583,  3595,   219,   648,  2442,   648,   387,    21,
    2614,   390,   587,  2499,  2450,  2451,   185,   387,   108,  3999,
     390,  3595,   241,   681,    18,    19,  5192,  2449,  3696,   227,
     759,   229,   323,  2195,   692,  2471,    18,    19,  4956,  2475,
    3696,    19,    18,    19,    18,    19,   648,   681,    18,    19,
    4675,   230,    23,   648,   290,   759,  2451,   387,   692,   759,
     390,   167,    19,  2337,    35,    18,    19,   759,   759,   235,
     759,   763,   759,    18,    19,   290,   212,   167,    49,   370,
     759,   758,   290,   594,   648,   762,    19,   456,   100,  4726,
      61,    62,  2366,   176,   200,    18,    19,   180,   445,   446,
     759,   667,   668,  2607,   670,   648,   759,   564,   759,  2195,
     200,   194,   759,   212,  4146,   759,   759,  2075,   759,   763,
    2556,   235,    26,   122,   759,  2083,   566,   648,   763,   387,
     320,   321,   390,    12,   759,   325,   326,   373,   763,   758,
    4777,  4778,   759,   721,   156,   387,   763,  3925,   390,   387,
     978,   979,   390,   981,   103,   983,  2430,   759,   373,   758,
    2434,  2597,  2598,   741,   759,   373,    77,  2589,   759,  2589,
     759,  2607,   763,   122,   763,  4698,   754,   755,  2614,   668,
      84,   670,   194,  4429,   141,    61,    62,  3729,  4434,   188,
      80,   758,    82,   623,  2630,   759,   626,  3878,   852,  2635,
     212,   855,   758,  2639,  2640,   217,   860,   758,   141,   527,
     528,   865,   530,   531,   532,   763,   759,     7,  3760,  3761,
     219,   759,    61,    62,   387,   763,   238,   390,   227,   758,
     229,   549,    71,  2669,   246,   125,    26,   456,   759,   188,
    2676,  2677,    61,    62,  3786,    84,   258,   158,   331,   759,
      21,   648,    71,   763,   158,   758,   547,  2693,   148,   271,
    2696,  2701,   758,  2685,   276,    64,  2702,  2871,   758,   648,
    2701,  2702,  4491,   285,   493,    74,  3850,  2748,   648,   759,
    2702,   764,  2702,   763,  4264,  4265,  3286,   718,   719,  4912,
      89,   290,  3714,    32,    84,   758,   245,   187,  2719,  2720,
    2721,  3772,   758,   387,   758,   387,   390,   522,   390,  4555,
     758,  3979,   759,  4559,   420,  3767,   763,   759,   648,  2755,
    2806,   763,  2808,  3979,   759,   120,   237,  2748,   763,   100,
     420,    77,   387,   237,  4062,   390,  2940,  4065,  4066,   630,
      79,   290,   758,   355,  2748,   759,   429,   566,   758,   763,
    2786,  2787,  4754,   387,   144,   493,   390,  3828,   594,   758,
     387,   563,  2798,   390,   566,  4611,   378,  2803,   387,   759,
    4616,   390,   758,   763,   373,  2979,   388,   759,   759,   594,
     759,   763,   763,   759,   758,   156,   594,   763,   345,   759,
     648,   656,   657,   387,   193,  2669,   390,  4521,   141,  4523,
     199,   620,  2676,  2677,   637,   387,   648,   640,   390,   141,
     648,   387,   345,   387,   390,   154,   390,   387,   637,   323,
     390,   192,   759,   194,   373,  5048,   763,   533,   566,   759,
     758,   226,  3036,  3037,   387,  2871,   235,   390,   572,   759,
     759,   212,   387,   763,   763,   390,   217,   237,   397,  2885,
    2886,  2887,   759,   364,  2885,   758,   763,  4125,   759,   370,
     231,   697,   763,   212,   263,   477,   370,   238,   758,  4125,
      64,   758,   759,   759,    21,   246,   566,   763,   150,   151,
      74,   587,   620,  3918,  5107,   648,  5109,   258,  3923,   501,
     759,   237,   759,    12,   763,    89,   763,   587,   758,   637,
     271,   759,  5125,   759,  2940,   276,   758,   763,  2944,    33,
    2946,  3115,  2786,  2787,   285,   759,  2952,   759,  3867,   763,
    2956,   759,   612,  2341,  2342,  2359,  2360,   758,   439,  2965,
     141,    13,  2968,   323,  3138,  1168,  1169,   549,   628,   758,
     335,   759,  4223,  2979,   339,   763,   758,   504,   505,  2985,
     440,   346,   759,   100,  5177,  5178,   763,  2719,  2720,  2721,
     717,    43,   758,  4015,   648,   758,   648,  4248,   564,  3005,
     212,   504,   505,   758,  4026,   758,   122,  3013,   758,   103,
     370,  3017,  3018,   141,   355,   758,  2748,   122,   759,   108,
     125,   603,   763,   648,   758,   594,   759,  3033,   122,   193,
    3036,  3037,   345,   615,  2148,  2149,   759,   378,   127,   156,
     763,   759,    94,   345,   648,   763,    98,   388,   364,   418,
     758,   648,   759,   635,   370,   637,   763,   758,   758,   648,
     601,  3067,   427,  2719,  2720,  2721,   547,  5150,  5151,   758,
    5163,   235,   188,   547,   122,   594,  3162,   194,   758,  3162,
    4242,   622,   623,   188,   648,   758,   758,   419,   759,  3095,
    5183,   451,   763,  4237,   188,   212,   648,   759,  4242,   263,
     217,   763,   648,   219,   648,   759,   415,   759,   648,  3115,
     199,   759,   135,   759,   219,   763,   698,   763,   599,  5212,
     759,   238,   758,   439,   763,   648,   491,   759,   437,   246,
     758,   763,  3138,   648,   759,   759,   477,   493,   758,   763,
     188,   258,  3148,   758,   758,  3151,   235,  3153,  3139,   630,
     519,   245,   758,   758,   271,   759,   630,  3149,   758,   276,
     501,  3153,   759,  3153,   345,   758,  3158,  3159,   285,   478,
     759,   219,  3164,   758,   290,   758,   758,   759,   697,   761,
     758,   763,   758,   758,    64,   290,   768,   547,   758,  3033,
     758,   504,   505,  3877,    74,   759,   290,   286,   758,   758,
     758,   253,   504,   505,   493,   758,   481,   759,   549,    89,
     566,   385,   759,   759,   759,   759,   763,   345,   763,   759,
    2748,   748,   749,   750,   751,   752,   753,   754,   755,    33,
     539,   547,   758,   758,   758,   604,   759,   401,   355,   759,
     758,   758,   290,   763,   759,   748,   749,   750,   751,   752,
     753,   754,   755,  3259,   418,   100,   758,   373,   481,   759,
    3334,   378,   603,   763,   620,   621,   758,   632,   373,  3275,
     630,   388,   759,   614,   615,   758,   763,   566,   758,   373,
     332,   637,   758,   599,   759,   650,  4308,  4309,   763,  4311,
     758,   758,   654,   759,   635,  4407,   637,   763,   563,   122,
     758,   390,   125,   397,  3148,   758,  3312,  3151,  4318,  4319,
    3316,  3317,   759,   193,   630,   758,   763,  3323,   759,   199,
     758,   758,   763,   504,   505,   373,   758,   758,  3334,   758,
    3322,   620,  3338,  3339,   758,   758,  3342,   141,   758,   758,
     378,   564,   381,   197,   396,   231,   569,  3353,   637,  3355,
    3342,   246,  3342,   194,   100,   235,   246,   698,  3364,  3365,
     477,   197,   621,  3364,  3365,   188,   501,  3373,  3374,  3375,
     378,  3427,  3373,  3374,  3375,   501,   504,   505,   212,   764,
     763,   758,   764,   263,   501,   763,  4872,   763,   758,   612,
      96,   764,   758,   238,    48,   156,   219,  3403,   156,   197,
     111,   759,   758,   758,   761,   628,   612,  3139,   762,   249,
     499,    48,   276,   258,  3420,   493,  3422,   293,   759,   160,
     761,   384,   763,   501,    77,   533,   271,   768,   171,   519,
     519,   654,   549,   193,     7,   748,   749,   750,   751,   752,
     753,   754,   755,   709,    71,   249,   759,   749,   750,   751,
     752,   753,   754,   755,    13,   634,   759,  3463,   111,  3465,
     759,   140,  3463,    10,  3470,   763,   518,   290,   764,   758,
     502,   275,   759,   759,   759,   564,   759,   566,   594,  3323,
     569,    21,   141,  3139,   275,   759,   603,    27,   566,   594,
     759,   759,   238,   378,   141,  4500,  3502,   758,   615,    37,
     594,   667,   709,   615,  3510,   158,    35,   563,   560,   156,
     355,   600,   258,   516,   763,   604,    50,   282,   635,   287,
     637,   401,    30,   612,    64,   271,  4548,   763,  4550,  4551,
     583,    71,   763,   378,   763,    75,   487,    77,   418,    71,
     733,   345,   620,   621,  3186,   572,   594,   273,   763,    89,
     373,   658,   763,   762,   764,  4577,   166,  3199,   763,   637,
     141,   758,   366,   367,   194,   654,   543,   748,   749,   750,
     751,   752,   753,   754,   755,   563,  3582,   115,   759,   166,
     287,   698,   235,   543,   122,   125,   157,   763,    88,  3595,
     141,   763,  3598,  3599,   194,    21,   763,   379,    21,   300,
     301,    77,   559,   697,    27,    28,   646,  4751,   136,   355,
     156,   122,  3618,  3619,   125,  4557,  3622,    93,   759,   708,
     748,   749,   750,   751,   752,   753,   754,   755,    27,   158,
     729,   759,   477,   162,    48,   654,  4645,   729,   442,   519,
      63,   179,   759,   637,   761,   141,   763,   160,   160,   763,
     188,   768,   404,   160,    77,   160,  3662,   160,   160,  3665,
      83,    84,   160,   203,    87,    64,  4675,   572,  3674,   322,
     763,   503,    71,   202,    87,   125,    75,   188,    77,   369,
     758,   219,   316,  3689,     7,  3691,   345,   340,   111,   758,
      89,   110,   583,   222,   158,    74,   401,   401,   345,   401,
     504,   505,   125,  3709,   549,   583,   129,   136,   219,   261,
     100,   364,  3718,   517,   401,   136,   261,   401,  4516,    48,
     401,    77,   619,   263,   604,   401,   125,   401,   401,   763,
    4739,   477,   619,   156,   763,   158,   710,    93,   501,  1570,
    4852,  1572,  1573,   492,   445,   446,   628,  4689,   758,   758,
     763,   610,   290,   249,    12,   759,  1587,    57,   287,  1590,
    1591,   171,  1593,   448,   345,  1596,  1597,  1598,  1599,   378,
     615,   594,  1603,    35,     7,   717,   111,  1608,   134,   290,
     378,   614,  1613,  1614,  1615,  1616,  1617,     7,   228,   265,
    1621,  1622,   592,   200,   345,  4858,  1627,  1628,  1629,  1630,
     759,  1632,  1633,   549,  1635,   759,   759,  1638,   231,   759,
     759,   759,   235,   759,   197,   759,   763,   751,   356,   242,
      37,  4933,   758,   524,   525,   526,   366,   367,   141,   759,
     368,   759,   372,  3839,   372,   373,  4010,   759,   378,   262,
     759,   759,   763,   763,  3850,   504,   505,   759,   238,   345,
     108,   759,   275,   759,   383,   759,   763,   504,   505,   690,
      15,   764,   373,  4037,   263,  3709,    21,   343,   258,   127,
     764,  3877,  3878,   192,   758,   764,  3868,  3883,   418,  3521,
     755,   271,  3883,   764,    39,   758,   758,   287,    43,   759,
     419,   287,   763,   369,   547,   763,   158,   762,   115,   322,
     162,   287,    57,    58,   160,   122,   287,   287,   763,   265,
     287,   564,  3554,   763,   443,   378,   583,   340,   722,   635,
    3562,   493,   236,   504,   505,   763,  4935,  3569,   763,   501,
     401,  3937,   583,   763,   583,    13,   249,   763,   160,   468,
     202,   210,   200,   378,   748,   749,   750,   751,   752,   753,
     754,   755,   197,   504,   505,   431,   197,   497,  5120,   583,
     222,   583,   179,   456,  4005,   355,   255,   366,   367,   194,
     764,   188,   395,   372,   433,  3981,  5120,  3983,   401,   378,
    3986,   404,  5144,   512,  3990,   243,   764,   343,   378,   764,
     764,   764,   763,  3999,   566,   249,   752,   252,   561,   181,
    5144,   194,   219,    60,  4010,  5167,   763,   547,   504,   505,
     366,   367,   759,   369,   543,   514,   405,   194,   763,   418,
     402,   765,   572,  5167,   572,   287,  4968,  4033,   286,  5191,
     404,  4037,   345,   456,   572,   404,   572,   160,   576,   126,
     669,   579,   763,   342,  5066,   764,   478,  5191,   620,   621,
     263,   589,   263,   263,   598,  4842,   594,   533,   758,   597,
     483,   403,   707,   378,   604,   637,   122,  4073,  4074,   125,
     493,   673,   673,   290,    21,   431,   249,   160,   160,   160,
      27,    28,   642,   594,   160,   160,   160,   477,  4094,   748,
     749,   750,   751,   752,   753,   754,   755,   160,   497,   160,
     759,   748,   749,   750,   751,   752,   753,   754,   755,   160,
     160,   160,   160,  4119,   160,   160,    63,   540,   541,   542,
     160,   383,   160,   160,   547,  3189,   160,  3191,   286,  4094,
      77,   160,   188,   160,   160,   160,    83,    84,  4144,   356,
      87,   564,   160,   566,   567,   160,   160,   160,   547,   160,
    4156,   108,   160,   160,  4146,   372,   373,   419,  5189,   549,
     160,   160,   420,   219,   111,  4339,   706,   748,   749,   750,
     751,   752,   753,   754,   755,   160,   160,   533,   125,   160,
     603,   443,   129,   160,   160,   160,   758,   709,    26,  4033,
     730,   504,   505,   654,   465,   378,   758,   620,   759,   750,
     751,   752,   753,   754,   755,   604,   468,   160,  4382,   156,
     167,   158,   750,   751,   637,   154,   759,  4223,   759,   572,
     758,   245,   245,  4229,   759,   615,   759,   764,   759,  4073,
    5028,  4237,   759,   186,   290,   572,  4242,  4243,   764,    77,
      26,   499,  4248,   200,   763,   572,    84,   764,   201,  4241,
     512,  5170,   748,   749,   750,   751,   752,   753,   754,   755,
     764,   214,   583,   764,   655,   583,   758,   385,  4274,    18,
      19,   758,   763,   197,   758,   731,  5063,   763,   235,   212,
    4286,   543,   733,   728,   231,   433,   197,   759,   235,   615,
     428,    77,   336,   763,   156,   242,   758,    12,    84,   404,
     758,   563,   725,   555,   566,   758,   564,   706,   566,   456,
     404,   160,  4156,   266,   267,   262,   406,   373,    73,   763,
     158,  4327,   492,   378,  5122,  4331,   533,   533,   533,   286,
     533,   730,   533,  4339,   758,   758,   263,   263,   761,   177,
      64,   294,   600,   758,   592,   615,   184,   367,   564,   637,
      74,   763,   564,   583,   612,   572,  2187,   763,   451,   576,
     583,   373,   579,   473,   759,    89,   759,   116,   117,   118,
     119,   120,   589,  5171,   378,   322,  4382,   594,   763,   212,
     597,   378,   758,   758,    56,   758,   758,   758,   758,    62,
     758,   177,   758,   340,    66,   758,  5183,   758,   184,   237,
     758,   247,   247,    48,    76,   414,   495,   759,   759,   721,
     363,   759,   758,   763,  4420,   759,  4422,  4423,    90,    91,
      92,   688,  4414,   688,  4498,  5212,   458,   459,   460,   461,
     462,   463,   464,   763,   106,   748,   749,   750,   751,   752,
     753,   754,   755,  4449,   285,  2276,   160,   161,   395,   759,
     708,   237,  4458,    12,   401,  3519,  3520,   404,   415,   547,
    3524,   160,   763,   420,   417,   752,   385,   231,   643,   193,
     282,   160,  2303,   758,   223,   224,   225,   226,    35,   197,
     763,   759,   759,   759,   759,   323,   759,   201,   258,  2320,
     258,   391,  4498,    48,   217,   103,  3560,   373,    48,  4505,
     214,   758,  3566,  3567,  3568,    62,   160,  3571,   758,   456,
     103,   235,   228,   245,   669,  4521,   160,  4523,   278,   674,
     764,   111,   111,  2354,  2355,   162,   364,   758,   401,   758,
     730,  2362,   370,   750,   751,   441,   483,   323,   594,   263,
     254,   758,   499,   758,   758,   125,   493,   125,   583,   704,
     758,   750,   384,   267,   758,   112,   566,   759,   115,   378,
     404,   758,   519,   378,   516,   720,   123,   373,   759,   759,
     759,   637,   759,   759,  4580,   759,   401,   197,   364,   433,
     294,   583,   210,    21,   370,   142,   335,   378,   337,   338,
     339,   269,   759,   540,   541,   542,   246,   346,   763,   763,
     547,  4607,  4608,   764,   404,   197,   768,   564,   768,  4665,
     258,   768,   569,  2444,   698,   258,    56,   564,   258,   566,
     567,   776,   777,    48,   779,   780,    66,   404,   277,    48,
     587,    48,   189,   153,    48,   752,    76,   792,   387,   758,
      35,   390,    35,   600,   626,   359,   609,   125,   263,    64,
      90,    91,    92,   730,   203,   612,   603,   263,  4664,    35,
     373,  4505,   334,   758,   373,   373,   106,   378,   416,  4675,
      77,   628,   378,   620,    21,   488,   516,   763,   427,   351,
     759,   342,   265,   428,   764,   758,    48,   759,  4694,   759,
     637,   759,   759,   388,   418,   759,   175,   654,   763,   759,
     759,   759,   385,   260,   285,   210,    21,   566,   147,   547,
     763,  4752,   759,   258,  4888,   258,   758,  4891,   759,   758,
     763,   120,   120,    48,    48,    48,   388,   620,   758,   884,
     368,   373,   621,    15,    21,   763,    81,   511,   143,   373,
     228,   490,   491,   759,   763,  4751,   404,  4753,   194,   373,
     173,   708,   758,    48,  4760,  4761,   342,  4931,   763,  4765,
     385,   547,   263,   759,   572,   194,   764,    21,   923,   763,
     758,   319,   276,   759,  4780,   758,   637,   674,   725,   398,
      48,   473,   937,   149,  4790,   759,   759,   637,   609,   758,
     758,   763,   630,   759,  4800,   950,   758,   354,   759,  4805,
     357,   759,   758,   758,   136,   574,   136,   758,   136,   758,
     158,   758,   378,  4810,   761,   759,   538,   489,  4810,   484,
    4810,  4877,   763,   692,   484,   692,   679,   692,   654,    48,
    4836,     4,    48,   535,   555,   758,   155,   634,    32,    64,
     765,   385,    64,    19,   630,   703,   482,   759,    21,   554,
     634,   197,    32,   385,   385,   759,   134,   143,   692,   689,
     228,   484,   465,   702,     6,   378,    39,  4858,   378,   246,
     154,   761,   171,    48,   609,   130,   634,   154,   435,   551,
     230,   292,  4888,   632,   761,  4891,   765,   124,   231,   703,
      54,   575,   143,   761,   334,   758,   568,   373,  4904,   648,
     649,   650,   154,   763,   575,   215,   761,   501,  1063,    54,
     154,   351,   378,   194,   194,   194,   575,   455,    15,   636,
     125,   763,   378,   378,   162,  4931,   699,   196,  4810,  1084,
    3301,  3108,  3102,  3104,  4418,  4422,  4425,  1092,  1093,  3106,
    3687,  3099,  3495,  4433,  1089,  4951,  1101,  1102,  1103,  1104,
    1105,  1106,   509,  4447,  4728,  1566,  4840,  5014,  4629,  1114,
    1115,  5015,  1117,  1118,  4449,  5212,  5140,  1122,  1123,  5163,
      46,  1126,  1127,  1128,  1129,   954,  1131,  1132,  2692,  2635,
    3839,  5037,  4714,  5179,  1139,  1140,  4714,  1142,  1143,  1144,
    1145,  1146,  4714,  4714,  1149,  1150,  1151,  1152,  1153,  1154,
    1155,  1156,  1157,  5075,  1159,  4984,  4714,  1162,  1163,  5075,
    5061,  5009,  1167,  3696,  4714,  4714,  1171,  1172,  1173,  4714,
    2270,  4714,   579,  4714,  4714,  4714,  5010,  1049,  4714,  1184,
    1185,  1186,   472,  3297,  1189,  4714,  2275,  1192,  1193,  1194,
    1195,  1196,  1197,  4125,  3979,  2431,  4146,  3159,  3158,   489,
     607,  4537,  3932,  3164,  4958,  4324,  1211,  1212,  4714,  4970,
    5037,  4689,  4968,  3716,  1219,  2429,  1221,  1222,  2359,  2900,
    3153,  4803,  4804,  4000,  5080,  3999,  4049,  3571,  1233,  1234,
    1235,  5087,  1237,  1238,  3538,  3570,  1241,  1242,  1243,  4353,
    4980,  1246,  1247,  1248,  1249,  1250,  1251,  1252,  1253,  4052,
    4752,  3255,  1257,  4555,  4693,  4559,  4611,  1262,  4616,  4567,
    2952,   551,  2963,  4331,  5120,  1714,    27,    28,  4026,  3702,
    5126,  2842,  1277,  2835,  4399,  5131,  4858,  3141,   568,  1545,
    2360,  2157,  2360,  2359,  5140,   959,  2153,  3601,  5144,  2682,
    2676,  3067,  2971,  1692,  1667,  3323,  3855,  4803,  4804,    63,
      61,    62,    63,  2666,  1309,  2225,  2595,   924,  2046,  1921,
      71,  5167,   923,  1861,  3268,  4663,    77,  4645,  4935,  2476,
    2702,  2702,    83,    84,  1133,  5028,    87,  5183,  5151,  4911,
    4912,    27,    28,  5150,  4525,  5191,  4714,  4951,  2702,  4267,
    2702,  1212,  4760,  3622,  1107,  3911,  4928,  5189,  4664,  5189,
     111,  4761,  4858,  1456,  4276,  1360,  5212,   972,  4486,  3595,
    4554,  4640,  1367,    16,   125,  2602,  3380,    63,   129,  1931,
    3051,  2232,  3322,  4245,  3322,  1036,  1036,  1454,  3874,  4228,
    3320,    77,  1317,  1036,  4237,  1033,  1544,    83,    84,  2781,
    1036,    87,  2109,  1398,  2782,  1400,   953,   158,  2623,  3033,
    2019,  3326,  2135,  4315,  3962,  4911,  4912,  5027,  5167,  4991,
    4068,  5191,  4242,  4528,  4948,   111,  4140,  2886,  3095,  1215,
    4943,  2068,  4928,    43,  5006,  4803,  4804,  2748,  2083,   125,
    1396,    43,  1394,   129,  2063,  2061,    39,  5019,  3119,  3120,
    3121,  3122,   909,  2830,  2442,  2669,  1494,  2443,  1453,  4495,
    4647,   912,  1356,    11,    11,   116,   117,   118,   119,   120,
    1089,  1089,   158,  1089,  1309,  1027,  5048,  1472,  4959,  4143,
    3705,  4084,  4442,  3612,   235,    -1,    -1,    -1,  5060,  5061,
      -1,   242,    -1,    -1,    -1,  4991,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  5078,    -1,    -1,    -1,
    5006,   262,    -1,    -1,    -1,    -1,  5088,    -1,    -1,    -1,
      -1,  5093,    -1,  5019,    -1,  4928,    -1,  1522,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5107,    -1,  5109,    -1,    -1,
      -1,    -1,    -1,  4911,  4912,    -1,    -1,    -1,    -1,   235,
      -1,    -1,  5048,  5125,    -1,  5127,   242,  5129,    -1,    -1,
    4928,    -1,    -1,    -1,  5060,  5061,    -1,    -1,    -1,    -1,
      -1,   322,   223,   224,   225,   226,   262,    -1,    -1,    -1,
      -1,    -1,  5078,  5155,    -1,    -1,    -1,    -1,  4991,   340,
      -1,    -1,  5088,    -1,    -1,    -1,    -1,  5093,    -1,    -1,
      -1,    -1,    -1,  5006,    -1,  5177,  5178,    -1,    -1,    -1,
      -1,  5107,    -1,  5109,    -1,    -1,  5019,    -1,    -1,    -1,
      -1,    -1,    -1,  4991,    -1,  5197,  5198,    -1,    -1,  5125,
    5202,  5127,    -1,  5129,    -1,    -1,   322,    -1,  5006,    -1,
      -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,
      -1,  5019,    -1,   404,   340,    -1,    -1,    -1,    -1,  5155,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5078,    -1,    -1,    -1,    -1,
    5048,  5177,  5178,    -1,   335,  5088,   337,   338,   339,    -1,
    5093,    -1,  5060,  5061,    -1,   346,    -1,    -1,    -1,    -1,
      -1,  5197,  5198,    -1,    -1,    -1,  5202,    -1,    -1,   395,
    5078,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   404,    -1,
    5088,    -1,    -1,    -1,  5127,  5093,  5129,    -1,    -1,    -1,
      -1,    -1,   483,    -1,    -1,    -1,    -1,   674,    -1,  5107,
      -1,  5109,    -1,    -1,    -1,    -1,  1741,    -1,    -1,    -1,
    1745,    -1,  5155,    -1,    -1,    -1,    -1,  5125,  1753,  5127,
    1755,  5129,    -1,    -1,    -1,    -1,    -1,   704,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   427,    -1,    -1,    -1,
      -1,    -1,    -1,   720,    -1,    -1,    -1,  5155,    -1,   540,
     541,   542,    -1,    -1,  5197,  5198,   547,   483,    -1,  5202,
    1795,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5177,
    5178,    -1,    -1,   564,    -1,    -1,   567,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  5197,
    5198,    -1,    -1,    -1,  5202,    -1,    -1,    -1,    -1,   490,
     491,    -1,    -1,   780,  1839,  1840,  1841,    -1,    -1,    -1,
      -1,    -1,   603,    -1,   540,   541,   542,    -1,    -1,    -1,
      -1,   547,    -1,    -1,    -1,    -1,    -1,    -1,   881,    -1,
      -1,    -1,    -1,    -1,  1869,    -1,    -1,    -1,   564,  1874,
      -1,   567,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  1893,    -1,
      -1,    -1,    -1,    -1,    -1,  1900,    -1,    -1,    -1,    -1,
    1905,    -1,  1907,    -1,    -1,    -1,    -1,   603,  1913,    -1,
    1915,  1916,    -1,    -1,   937,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   884,    -1,    -1,
      -1,    -1,   965,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   725,    -1,    -1,    -1,    -1,    -1,
      -1,   632,    -1,    -1,    -1,    -1,   923,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   649,   650,
      -1,    -1,    -1,    -1,  3675,  3676,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   725,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2065,  1084,    -1,  2068,    -1,    -1,    -1,    -1,    -1,    -1,
    2075,  2076,    -1,    -1,    -1,  2080,    -1,    -1,  2083,    -1,
      -1,  2086,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2095,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1092,  1093,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  1101,  1102,    -1,    -1,  1105,  1106,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1114,  1115,    -1,
    1117,  1118,    -1,    -1,    -1,  1122,    -1,    -1,    -1,  1126,
    1127,  1128,  1129,    -1,  1131,    -1,    -1,    -1,    -1,    -1,
    2195,    -1,  1139,  1140,    -1,  1142,  1143,    -1,    -1,    -1,
      -1,    -1,  1149,    -1,    -1,  1152,  1153,  1154,  1155,  1156,
    1157,    -1,  1159,    -1,    -1,  1162,  1163,    -1,    -1,    -1,
    1167,    -1,    -1,    -1,  1171,  1172,  1173,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1184,  1185,  1186,
      -1,    -1,    -1,    -1,    -1,  1192,  1193,  1194,  1195,  1196,
      -1,    -1,    -1,    -1,  1277,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2268,  1211,  1212,  2271,  2272,    -1,    -1,
      -1,    -1,  1219,    -1,  1221,  1222,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1309,    -1,    -1,     7,
      -1,    -1,  1315,    -1,    12,    -1,    14,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  1329,    -1,    -1,    27,
      28,    -1,    -1,    -1,    -1,  1262,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  1360,    -1,    -1,
      58,    -1,    -1,    -1,    -1,    63,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    77,
      -1,    -1,    -1,    -1,    -1,    83,    84,    -1,    -1,    87,
      -1,    -1,    -1,    -1,    -1,  2380,    -1,    -1,    96,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,
      -1,   129,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   137,
    1367,    -1,    -1,    -1,    -1,    -1,   144,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,
     158,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2457,  1400,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2466,  2467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   192,    -1,    -1,    -1,    -1,    -1,
      -1,  2486,  2487,    -1,  2489,    -1,    -1,  2492,  2493,  2494,
    2495,  2496,    -1,    -1,  2499,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2508,    -1,    -1,  1453,    -1,  2513,    -1,
    2515,    -1,  2517,  2518,    -1,  2520,  2521,   235,    -1,    -1,
    2525,  2526,  2527,    -1,   242,  1472,  2531,  2532,  2533,    -1,
    2535,    -1,  2537,    -1,  2539,    -1,  2541,    -1,  2543,    -1,
      -1,    -1,    -1,  2548,   262,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2564,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  1522,  2581,    -1,  2583,    -1,
    2585,    -1,    -1,    -1,  2589,    -1,    -1,    -1,    -1,    -1,
    2595,  2596,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   340,    -1,    -1,    -1,   344,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    14,
      -1,    -1,    17,    -1,    -1,    -1,  2671,    -1,    -1,    -1,
     388,    -1,    -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    50,    51,    -1,    -1,    -1,
      -1,    -1,    -1,    58,    -1,    -1,    -1,    -1,    63,    64,
      -1,    -1,    -1,    -1,  2719,  2720,  2721,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    79,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   451,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  2748,    99,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   483,   121,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   131,   132,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   143,   144,
      -1,  2796,    -1,    -1,  1741,    -1,    -1,    -1,  1745,    -1,
      -1,  2806,    -1,  2808,    -1,    -1,    -1,    -1,  1755,    -1,
      -1,    -1,    -1,    -1,    -1,   170,    -1,    -1,    -1,    -1,
      -1,    -1,   540,   541,   542,    -1,    -1,    -1,    -1,   547,
      -1,    -1,    -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   564,    -1,    -1,   567,
      -1,    -1,    -1,   208,    -1,   210,    -1,    -1,    -1,    -1,
     215,    -1,    -1,   218,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2879,    -1,    -1,    -1,   233,    -1,
      -1,    -1,    -1,    -1,  4565,   603,   241,    -1,    -1,   244,
      -1,    -1,  1839,  1840,  1841,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   264,
      -1,    -1,    -1,    -1,    -1,    -1,    35,    36,    -1,   637,
      -1,    -1,   640,    -1,    -1,    -1,   281,  1874,    -1,    -1,
     285,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    61,    62,    -1,    -1,  1893,    -1,    -1,    -1,
      -1,    -1,    -1,    72,    73,    -1,    -1,    -1,  1905,    -1,
    1907,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  1995,  1996,    -1,    -1,    -1,    -1,    97,    -1,
      99,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     109,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4681,    -1,    -1,  4684,  4685,  4686,  4687,   725,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   382,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   157,   158,
      -1,    -1,  2065,    -1,   163,  2068,    -1,   166,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   176,    -1,    -1,
     415,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   426,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   198,
      -1,   200,    -1,    -1,    -1,  4766,    -1,    -1,    -1,    -1,
     209,    -1,   211,   448,  4775,  4776,   451,    -1,   453,    -1,
      -1,   456,    -1,  4784,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   466,   467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   476,    -1,   478,    -1,    -1,    -1,    -1,    -1,  2076,
      -1,    -1,   487,  2080,  3139,    -1,    -1,    -1,   493,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   501,    -1,  2095,    -1,
      -1,   506,   507,   508,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   282,    -1,    -1,    -1,    -1,  3173,    -1,
      -1,    -1,  2195,    -1,    -1,    -1,  3181,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   539,    -1,    -1,    -1,  2211,    -1,
    2213,   546,  2215,  2216,    -1,  2218,    -1,   316,    -1,    -1,
      -1,    -1,    -1,  3208,  3209,    -1,    -1,    -1,    -1,    -1,
      -1,   566,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3234,
      -1,    -1,    -1,    -1,    -1,   590,    -1,    -1,    -1,  3244,
      -1,  3246,  2265,  3248,    -1,    -1,  2269,   602,    -1,    -1,
      -1,   606,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   614,
      -1,    -1,   381,    -1,    -1,   620,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  3279,  2298,  2299,  2300,  2301,  3284,
      -1,  3286,   637,    -1,    -1,    -1,    -1,    -1,    -1,   408,
     645,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     419,   420,    -1,   422,   423,   424,    -1,  2330,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  3320,    -1,    -1,    -1,    -1,
      -1,   676,    -1,    -1,    -1,   444,    -1,    -1,    -1,    -1,
     232,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3356,    -1,    -1,    -1,    -1,    -1,    -1,   713,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   498,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  3396,   511,   295,   296,   297,   298,   299,   300,   301,
     302,   303,   304,   758,   306,   307,   308,   309,   310,   311,
     312,   313,   314,   315,    -1,   317,   318,    -1,    -1,    -1,
      -1,    -1,  3427,    -1,   543,    -1,    -1,    -1,   547,    -1,
      -1,    -1,    -1,  2380,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   563,    -1,    -1,   566,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   586,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3501,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   624,    -1,    -1,    -1,    -1,
    2457,    -1,   631,    -1,    -1,    -1,    -1,    -1,    -1,  2466,
    2467,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2486,
    2487,    -1,  2489,   445,   446,  2492,  2493,  2494,  2495,  2496,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  2508,    -1,    -1,    -1,    -1,  2513,    -1,  2515,    -1,
    2517,  2518,    -1,  2520,    -1,    -1,    -1,    -1,  2525,  2526,
    2527,    -1,    -1,    -1,  2531,  2532,  2533,    -1,  2535,    -1,
    2537,    -1,  2539,    -1,  2541,    -1,  2543,    -1,    -1,    -1,
      -1,  2548,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2589,    -1,    -1,    -1,    -1,    -1,  2595,  2672,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3693,  3694,
      -1,    -1,    -1,    -1,    -1,    -1,  2719,  2720,  2721,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  2671,    -1,    -1,  2750,  3733,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3764,
      -1,  3766,    -1,    -1,  3769,  3770,    -1,  3772,    -1,    -1,
      -1,  2794,    -1,    -1,    -1,    -1,    -1,    -1,  3783,    -1,
      -1,    -1,    -1,  3788,    -1,    -1,  3791,    -1,    -1,  3794,
    3795,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   711,
     712,  3816,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  3828,    -1,    -1,    -1,    -1,    -1,    -1,
     732,    -1,   734,   735,   736,   737,   738,    -1,    -1,   741,
      -1,    -1,  2865,    -1,    -1,    -1,    -1,    -1,    -1,  2796,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3874,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2901,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  2912,
      -1,  2914,  2915,  2916,  2917,    -1,  2919,  2920,    -1,    -1,
      -1,    -1,    -1,  3908,  3909,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  2879,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  2980,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    2993,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3991,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    34,    35,    14,    -1,    -1,
      17,    40,    -1,    42,    -1,    44,    45,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    32,    -1,    -1,  3071,    36,
      -1,  3074,  3075,    62,    -1,  3078,  3079,  3080,  3081,  3082,
    3083,  3084,  3085,    50,    51,  3088,    -1,  3090,    -1,  3092,
    3093,    58,    -1,  3096,    -1,    -1,    63,    64,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4091,  4092,    -1,    -1,
      -1,    -1,    79,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,    99,    -1,   123,    -1,  3139,    -1,  4123,  4124,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,   121,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   131,   132,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,    -1,    -1,   143,   144,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   156,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,
     189,    -1,    -1,   170,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,
      -1,    -1,    -1,   190,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   208,    -1,   210,    -1,    -1,  3173,    -1,   215,    -1,
      -1,   218,    -1,  4238,  3181,    -1,    -1,    -1,   247,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   233,    -1,    -1,    -1,
      -1,   260,    -1,  4258,   241,  4260,    -1,   244,    -1,    -1,
      -1,  3208,  3209,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     279,    -1,    -1,    -1,    -1,    -1,    -1,   264,    -1,   288,
     289,    -1,   291,    -1,    -1,    -1,    -1,  3234,    -1,    -1,
      -1,    -1,    -1,    -1,   281,    -1,    -1,  3244,   285,  3246,
      -1,  3248,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   328,
     329,   330,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   347,   348,
     349,    -1,    -1,    -1,    -1,   354,    -1,    -1,   357,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4368,    -1,    -1,   375,   376,    -1,    -1,
      -1,    -1,    -1,  3320,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4396,    -1,    -1,    -1,   382,    -1,    -1,    -1,    -1,
     409,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3356,
      -1,    -1,    -1,    -1,  3437,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,   415,    -1,
      -1,    -1,    -1,  3456,    -1,    -1,    -1,    -1,    -1,   426,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3471,  3396,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   448,    -1,    -1,   451,  4470,   453,    -1,  4473,   456,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   466,
     467,  4486,    -1,    -1,    -1,    -1,    -1,    -1,   497,   476,
      -1,   478,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     487,    -1,    -1,    -1,   513,    -1,   493,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   501,    -1,    -1,    -1,    -1,   506,
     507,   508,    -1,  4528,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   539,    -1,  3501,    -1,    -1,    -1,    -1,   546,
      -1,    -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,
     579,   580,   581,   582,    -1,    -1,    -1,    -1,    -1,   566,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   590,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   622,   623,   602,    -1,    -1,    -1,   606,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   614,    -1,    -1,
      -1,    -1,    -1,   620,    -1,  4640,    -1,    -1,    -1,    -1,
      -1,   650,    -1,    -1,    -1,  3668,    -1,    -1,    -1,    -1,
     637,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   645,    -1,
    4665,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3692,
      -1,    -1,    -1,    -1,   661,   662,   663,   664,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   676,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4709,    -1,    -1,    -1,    -1,  4714,
      -1,    -1,    -1,    -1,    -1,  4720,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   713,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  4741,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   763,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   758,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3733,    -1,    -1,    -1,
      -1,    -1,  4797,    -1,    -1,    -1,    -1,    -1,  4803,  4804,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  3764,    -1,  3766,
      -1,    -1,  3769,  3770,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,  3783,    -1,    -1,    -1,
    4845,  3788,    -1,    -1,  3791,    -1,    -1,  3794,  3795,    -1,
      -1,    -1,    -1,  4858,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  3816,
      -1,    -1,  4877,    -1,    -1,     7,    -1,    -1,    -1,    -1,
      12,    -1,    14,    -1,    -1,    17,    -1,    -1,    -1,    -1,
      -1,    -1,  4897,    -1,  4899,    27,    28,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4909,    -1,  4911,  4912,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4928,    -1,    -1,    58,  3874,    -1,    61,
      62,    63,    64,    -1,  3957,    -1,    -1,    69,    -1,    71,
      -1,    -1,    -1,    -1,    -1,    77,    -1,    -1,    -1,    -1,
      -1,    83,    84,    -1,    -1,    87,    -1,    -1,    -1,    -1,
      -1,  3908,  3909,    -1,    96,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   111,
      -1,    -1,    -1,    -1,  4989,    -1,  4991,    -1,    -1,    -1,
      -1,    -1,    -1,   125,    -1,    -1,    -1,   129,    -1,    -1,
      -1,  5006,  5007,    -1,    -1,   137,   138,    -1,    -1,    -1,
      -1,    -1,   144,    -1,  5019,    -1,  4039,    -1,    -1,    -1,
     152,    -1,    -1,    -1,    -1,    -1,   158,    -1,    -1,    -1,
      -1,    -1,  5037,    -1,    -1,    -1,    -1,   169,    -1,    -1,
      -1,    -1,  5047,  5048,  3991,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  5060,  5061,    -1,    -1,    -1,
     192,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  5078,    -1,    -1,    -1,    -1,    -1,    -1,
    5085,    -1,    -1,  5088,    -1,    -1,    -1,    -1,  5093,    -1,
      -1,    -1,    -1,    -1,    -1,  5100,    -1,    -1,    -1,    -1,
      -1,   233,  5107,   235,  5109,    -1,  4129,  4130,  4131,  4132,
     242,    -1,    -1,    -1,    -1,    -1,    -1,  4140,    -1,    -1,
    5125,    -1,  5127,    -1,  5129,    -1,    -1,    -1,    -1,    -1,
     262,  4154,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4091,  4092,    -1,    -1,    -1,    -1,
    5155,    -1,    -1,   285,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  5177,  5178,    -1,    -1,    -1,    -1,    -1,  5184,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,  5192,    -1,    -1,
     322,    -1,  5197,  5198,    -1,    -1,    -1,  5202,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   340,    -1,
      -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     382,    -1,    -1,    -1,    -1,    -1,   388,    -1,    -1,    -1,
      -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4294,   404,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4238,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   436,    -1,    -1,    -1,    -1,    -1,
      -1,  4258,    -1,  4260,    -1,    -1,    -1,    -1,    -1,   451,
     452,   453,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,     7,    -1,    -1,
      -1,    -1,    12,    -1,    14,    -1,    -1,    17,    -1,    -1,
      -1,   483,    -1,    -1,    -1,    -1,    -1,    27,    28,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    58,  4412,
      -1,    -1,    -1,    63,    64,    -1,    -1,    -1,    -1,    69,
      -1,    -1,  4425,    -1,    -1,    -1,    -1,    77,   540,   541,
     542,    -1,    -1,    83,    84,   547,    -1,    87,    -1,    -1,
      -1,  4368,    -1,  4446,    -1,    -1,    96,    -1,    -1,    -1,
      -1,    -1,   564,    -1,    -1,   567,    -1,    -1,    -1,    -1,
      -1,   111,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4396,
      -1,    -1,    -1,    -1,    -1,   125,    -1,    -1,   590,   129,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   137,   138,    -1,
      -1,   603,    -1,    -1,   144,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   152,    -1,    -1,    -1,    -1,    -1,   158,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   169,
      -1,    -1,    -1,    -1,    -1,   637,    -1,    -1,   640,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   192,  4470,    -1,    -1,  4473,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4486,
      -1,  4564,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   233,    -1,   235,    -1,    -1,    -1,    -1,
      -1,    -1,   242,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4528,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   262,   725,   726,   727,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   285,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   322,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     340,    -1,    -1,    -1,   344,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,  4640,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   382,    -1,    -1,    -1,    -1,    -1,   388,    -1,
      -1,    -1,    -1,    -1,    -1,   395,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   404,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,  4774,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4709,    -1,    -1,    -1,   436,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   451,   452,   453,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,  4741,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   483,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,  4858,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4797,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,  4882,
    4883,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     540,   541,   542,    -1,    -1,    -1,    -1,   547,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   564,    -1,    -1,   567,  4845,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     590,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   603,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    4897,    -1,  4899,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4909,    -1,    -1,    -1,    -1,   637,    -1,    -1,
     640,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,  4989,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   725,   726,   727,    -1,    -1,
    5007,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
    5047,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,  5085,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,  5100,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,  5184,    -1,    -1,
     135,   136,   137,   138,   139,  5192,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,   367,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,   493,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,   566,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,   637,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,   750,   751,    -1,    -1,    -1,
      -1,   756,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
      -1,   766,   767,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    46,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,   268,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,   584,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,   750,   751,
      -1,    -1,    -1,    -1,   756,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,    -1,   766,   767,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,   378,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
     709,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,   750,   751,    -1,    -1,    -1,    -1,   756,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,    -1,   766,   767,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,   750,   751,   752,    -1,    -1,    -1,
     756,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,    -1,
     766,   767,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,   367,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,   750,   751,   752,
      -1,    -1,    -1,   756,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,    -1,   766,   767,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,   197,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,   367,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
     750,   751,    -1,    -1,    -1,    -1,   756,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,    -1,   766,   767,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
     367,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,   750,   751,    -1,    -1,    -1,    -1,   756,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,    -1,   766,
     767,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,   197,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,   367,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,   750,   751,    -1,    -1,
      -1,    -1,   756,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,    -1,   766,   767,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    35,    36,    37,    38,    39,    40,
      41,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    54,    55,    56,    57,    -1,    59,    60,
      61,    62,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    96,    97,    98,    -1,    -1,
      -1,   102,   103,   104,    -1,   106,   107,   108,    -1,   110,
     111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,
     121,   122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
     171,    -1,   173,   174,   175,   176,   177,   178,   179,   180,
     181,    -1,   183,   184,   185,   186,   187,   188,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
     241,   242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
     271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,   319,   320,
     321,   322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
     341,   342,    -1,   344,   345,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,   356,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,   366,   367,   368,   369,   370,
      -1,   372,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,   412,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,   455,   456,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,   477,   478,   479,   480,
     481,    -1,   483,   484,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,   544,   545,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,   556,   557,   558,   559,   560,
     561,   562,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,
     591,   592,    -1,   594,   595,   596,   597,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,   616,   617,   618,   619,   620,
     621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,
     671,   672,   673,   674,    -1,   676,   677,   678,   679,   680,
     681,    -1,   683,   684,   685,   686,   687,   688,   689,    -1,
     691,   692,   693,   694,   695,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,   750,
     751,    -1,    -1,    -1,    -1,   756,    -1,   758,    -1,    -1,
      -1,   762,    -1,    -1,    -1,   766,   767,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    37,
      38,    39,    40,    41,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    54,    55,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    96,    97,
      98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,
     108,    -1,   110,   111,   112,   113,   114,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,   171,    -1,   173,   174,   175,   176,   177,
     178,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,   319,   320,   321,   322,   323,   324,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,   341,   342,    -1,   344,   345,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,   366,   367,
     368,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,   412,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,   455,   456,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,   477,
     478,   479,   480,   481,    -1,   483,   484,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,   544,   545,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,   556,   557,
     558,   559,   560,   561,   562,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
     588,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,
     618,   619,   620,   621,    -1,    -1,   624,   625,    -1,   627,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,
     668,   669,   670,   671,   672,   673,   674,    -1,   676,   677,
     678,   679,   680,   681,    -1,   683,   684,   685,   686,   687,
     688,   689,    -1,   691,   692,   693,   694,   695,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,   750,   751,    -1,    -1,    -1,    -1,   756,    -1,
     758,    -1,    -1,    -1,   762,    -1,    -1,    -1,   766,   767,
       5,     6,    -1,     8,     9,    10,    11,    12,    13,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      35,    36,    37,    38,    39,    40,    41,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,
      55,    56,    57,    -1,    59,    60,    61,    62,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,   104,
      -1,   106,   107,   108,    -1,   110,   111,   112,   113,   114,
     115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,
     125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,   171,    -1,   173,   174,
     175,   176,   177,   178,   179,   180,   181,    -1,   183,   184,
     185,   186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
     245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,   319,   320,   321,   322,   323,   324,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,   341,   342,    -1,   344,
     345,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,   356,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,   366,    -1,   368,   369,   370,    -1,   372,   373,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,   397,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   412,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
     455,   456,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,   477,   478,   479,   480,   481,    -1,   483,   484,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,   544,
     545,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,   556,   557,   558,   559,   560,   561,   562,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,   588,   589,   590,   591,   592,    -1,   594,
     595,   596,   597,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,   616,   617,   618,   619,   620,   621,    -1,    -1,   624,
     625,    -1,   627,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
     665,   666,    -1,   668,   669,   670,   671,   672,   673,   674,
      -1,   676,   677,   678,   679,   680,   681,    -1,   683,   684,
     685,   686,   687,   688,   689,    -1,   691,   692,   693,   694,
     695,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,    -1,
      -1,    -1,    -1,    -1,    -1,   750,   751,    -1,    -1,    -1,
      -1,   756,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,
      -1,   766,   767,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    37,    38,    39,    40,    41,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    54,    55,    56,    57,    -1,    59,    60,    61,
      62,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,
     102,   103,   104,    -1,   106,   107,   108,    -1,   110,   111,
     112,   113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,
     122,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,   171,
      -1,   173,   174,   175,   176,   177,   178,   179,   180,   181,
      -1,   183,   184,   185,   186,   187,   188,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,   213,    -1,   215,   216,    -1,   218,   219,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,
     242,   243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,   319,   320,   321,
     322,   323,   324,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,   341,
     342,    -1,   344,   345,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,   356,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,   366,   367,   368,   369,   370,    -1,
     372,   373,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,   397,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
     412,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,   455,   456,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,   477,   478,   479,   480,   481,
      -1,   483,   484,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,   544,   545,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,   556,   557,   558,   559,   560,   561,
     562,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,   588,   589,   590,   591,
     592,    -1,   594,   595,   596,   597,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,   616,   617,   618,   619,   620,   621,
      -1,    -1,   624,   625,    -1,   627,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,   665,   666,    -1,   668,   669,   670,   671,
     672,   673,   674,    -1,   676,   677,   678,   679,   680,   681,
      -1,   683,   684,   685,   686,   687,   688,   689,    -1,   691,
     692,   693,   694,   695,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,    -1,    -1,    -1,    -1,    -1,    -1,   750,   751,
      -1,    -1,    -1,    -1,   756,    -1,   758,    -1,    -1,    -1,
     762,    -1,    -1,    -1,   766,   767,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    37,    38,
      39,    40,    41,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    54,    55,    56,    57,    -1,
      59,    60,    61,    62,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    96,    97,    98,
      -1,    -1,    -1,   102,   103,   104,    -1,   106,   107,   108,
      -1,   110,   111,   112,   113,   114,   115,    -1,    -1,    -1,
      -1,   120,   121,   122,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,   171,    -1,   173,   174,   175,   176,   177,   178,
     179,   180,   181,    -1,   183,   184,   185,   186,   187,   188,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,
     219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,   241,   242,   243,   244,   245,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
     319,   320,   321,   322,   323,   324,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,   341,   342,    -1,   344,   345,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,   356,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,   366,   367,   368,
     369,   370,    -1,   372,   373,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,   412,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,   455,   456,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,   477,   478,
     479,   480,   481,    -1,   483,   484,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,   544,   545,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,   556,   557,   558,
     559,   560,   561,   562,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,
     589,   590,   591,   592,    -1,   594,   595,   596,   597,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,   616,   617,   618,
     619,   620,   621,    -1,    -1,   624,   625,    -1,   627,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,
     669,   670,   671,   672,   673,   674,    -1,   676,   677,   678,
     679,   680,   681,    -1,   683,   684,   685,   686,   687,   688,
     689,    -1,   691,   692,   693,   694,   695,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,
      -1,   750,   751,    -1,    -1,    -1,    -1,   756,    -1,   758,
      -1,    -1,    -1,   762,    -1,    -1,    -1,   766,   767,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    35,
      36,    37,    38,    39,    40,    41,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    54,    55,
      56,    57,    -1,    59,    60,    61,    62,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      96,    97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,
     106,   107,   108,    -1,   110,   111,   112,   113,   114,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,   171,    -1,   173,   174,   175,
     176,   177,   178,   179,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,   245,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,   319,   320,   321,   322,   323,   324,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,   341,   342,    -1,   344,   345,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
     356,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,   368,   369,   370,    -1,   372,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,   397,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,   412,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,   455,
     456,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,   477,   478,   479,   480,   481,    -1,   483,   484,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,   544,   545,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
     556,   557,   558,   559,   560,   561,   562,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,   588,   589,   590,   591,   592,    -1,   594,   595,
     596,   597,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
     616,   617,   618,   619,   620,   621,    -1,    -1,   624,   625,
      -1,   627,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,
     666,    -1,   668,   669,   670,   671,   672,   673,   674,    -1,
     676,   677,   678,   679,   680,   681,    -1,   683,   684,   685,
     686,   687,   688,   689,    -1,   691,   692,   693,   694,   695,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,   750,   751,    -1,    -1,    -1,    -1,
     756,    -1,   758,    -1,    -1,    -1,   762,    -1,    -1,    -1,
     766,   767,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    35,    36,    37,    38,    39,    40,    41,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    54,    55,    56,    57,    -1,    59,    60,    61,    62,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,
     103,   104,    -1,   106,   107,   108,    -1,   110,   111,   112,
     113,   114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,
      -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,   171,    -1,
     173,   174,   175,   176,   177,   178,   179,   180,   181,    -1,
     183,   184,   185,   186,   187,   188,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
     213,    -1,   215,   216,    -1,   218,   219,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,   319,   320,   321,   322,
     323,   324,   325,   326,   327,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,   341,   342,
      -1,   344,   345,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,   356,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,   366,    -1,   368,   369,   370,    -1,   372,
     373,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,   397,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,   412,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,   455,   456,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,   477,   478,   479,   480,   481,    -1,
     483,   484,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,   544,   545,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,   556,   557,   558,   559,   560,   561,   562,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,   588,   589,   590,   591,   592,
      -1,   594,   595,   596,   597,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,   616,   617,   618,   619,   620,   621,    -1,
      -1,   624,   625,    -1,   627,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,   665,   666,    -1,   668,   669,   670,   671,   672,
     673,   674,    -1,   676,   677,   678,   679,   680,   681,    -1,
     683,   684,   685,   686,   687,   688,   689,    -1,   691,   692,
     693,   694,   695,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    -1,    -1,    -1,    -1,    -1,    -1,   750,   751,    -1,
      -1,    -1,    -1,   756,    -1,   758,    -1,    -1,    -1,   762,
      -1,    -1,    -1,   766,   767,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    37,    38,    39,
      40,    41,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    54,    55,    56,    57,    -1,    59,
      60,    61,    62,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    96,    97,    98,    -1,
      -1,    -1,   102,   103,   104,    -1,   106,   107,   108,    -1,
     110,   111,   112,   113,   114,   115,    -1,    -1,    -1,    -1,
     120,   121,   122,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,   171,    -1,   173,   174,   175,   176,   177,   178,   179,
     180,   181,    -1,   183,   184,   185,   186,   187,   188,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,   213,    -1,   215,   216,    -1,   218,   219,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,   241,   242,   243,   244,   245,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,   271,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
     290,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,   319,
     320,   321,   322,   323,   324,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,   341,   342,    -1,   344,   345,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,   356,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,   366,    -1,   368,   369,
     370,    -1,   372,   373,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,   412,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,   455,   456,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,   477,   478,   479,
     480,   481,    -1,   483,   484,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,   544,   545,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,   556,   557,   558,   559,
     560,   561,   562,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,   588,   589,
     590,   591,   592,    -1,   594,   595,   596,   597,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,   616,   617,   618,   619,
     620,   621,    -1,    -1,   624,   625,    -1,   627,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,   665,   666,    -1,   668,   669,
     670,   671,   672,   673,   674,    -1,   676,   677,   678,   679,
     680,   681,    -1,   683,   684,   685,   686,   687,   688,   689,
      -1,   691,   692,   693,   694,   695,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,
     750,   751,    -1,    -1,    -1,    -1,   756,    -1,   758,    -1,
      -1,    -1,   762,    -1,    -1,    -1,   766,   767,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      37,    38,    39,    40,    41,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    54,    55,    56,
      57,    -1,    59,    60,    61,    62,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    96,
      97,    98,    -1,    -1,    -1,   102,   103,   104,    -1,   106,
     107,   108,    -1,   110,   111,   112,   113,   114,   115,    -1,
      -1,    -1,    -1,   120,   121,   122,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,   171,    -1,   173,   174,   175,   176,
     177,   178,   179,   180,   181,    -1,   183,   184,   185,   186,
     187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,   213,    -1,   215,   216,
      -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,   241,   242,   243,   244,   245,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,   271,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,   319,   320,   321,   322,   323,   324,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,   341,   342,    -1,   344,   345,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,   356,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,   366,
      -1,   368,   369,   370,    -1,   372,   373,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
     397,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,   412,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,   455,   456,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
     477,   478,   479,   480,   481,    -1,   483,   484,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,   544,   545,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,   556,
     557,   558,   559,   560,   561,   562,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,   588,   589,   590,   591,   592,    -1,   594,   595,   596,
     597,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,   616,
     617,   618,   619,   620,   621,    -1,    -1,   624,   625,    -1,
     627,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,   665,   666,
      -1,   668,   669,   670,   671,   672,   673,   674,    -1,   676,
     677,   678,   679,   680,   681,    -1,   683,   684,   685,   686,
     687,   688,   689,    -1,   691,   692,   693,   694,   695,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,    -1,    -1,    -1,
      -1,    -1,    -1,   750,   751,    -1,    -1,    -1,    -1,   756,
      -1,   758,    -1,    -1,    -1,   762,    -1,    -1,    -1,   766,
     767,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    35,    36,    37,    38,    39,    40,    41,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      54,    55,    56,    57,    -1,    59,    60,    61,    62,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    96,    97,    98,    -1,    -1,    -1,   102,   103,
     104,    -1,   106,   107,   108,    -1,   110,   111,   112,   113,
     114,   115,    -1,    -1,    -1,    -1,   120,   121,   122,    -1,
      -1,   125,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,   171,    -1,   173,
     174,   175,   176,   177,   178,   179,   180,   181,    -1,   183,
     184,   185,   186,   187,   188,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,   213,
      -1,   215,   216,    -1,   218,   219,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,   245,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,   271,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,   290,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,   319,   320,   321,   322,   323,
     324,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,   341,   342,    -1,
     344,   345,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,   356,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,   366,    -1,   368,   369,   370,    -1,   372,   373,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,   397,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,   412,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,   455,   456,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,   477,   478,   479,   480,   481,    -1,   483,
     484,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
     544,   545,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,   556,   557,   558,   559,   560,   561,   562,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,   588,   589,   590,   591,   592,    -1,
     594,   595,   596,   597,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,   616,   617,   618,   619,   620,   621,    -1,    -1,
     624,   625,    -1,   627,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,   665,   666,    -1,   668,   669,   670,   671,   672,   673,
     674,    -1,   676,   677,   678,   679,   680,   681,    -1,   683,
     684,   685,   686,   687,   688,   689,    -1,   691,   692,   693,
     694,   695,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
      -1,    -1,    -1,    -1,    -1,    -1,   750,   751,    -1,    -1,
      -1,    -1,   756,    -1,   758,    -1,    -1,    -1,   762,    -1,
      -1,    -1,   766,   767,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,   493,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,   566,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,   620,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,   637,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,    -1,     5,
       6,    -1,     8,     9,    10,    11,    12,   758,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,   767,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,   145,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,   700,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,   720,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,    -1,    -1,
      -1,    -1,    -1,    -1,     5,     6,    -1,     8,     9,    10,
      11,    12,   758,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,   767,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,   700,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,   720,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,    -1,    -1,    -1,    -1,    -1,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,   758,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,   767,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,    -1,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,   763,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    37,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,   122,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,   179,   180,   181,    -1,   183,   184,   185,   186,   187,
     188,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,   219,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,   290,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,   356,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,   373,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,   589,   590,   591,   592,    -1,   594,   595,   596,   597,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   392,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    62,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    86,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   759,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,   762,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
     758,   759,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   759,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,   759,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    89,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,   199,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,   235,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,   275,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,   493,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,   519,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,   566,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,   620,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,   637,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
     758,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,   700,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,   720,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,   758,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,   758,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,   758,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,   758,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,   758,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       5,     6,    -1,     8,     9,    10,    11,    12,   752,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     5,
       6,    -1,     8,     9,    10,    11,    12,   752,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,     5,     6,
      -1,     8,     9,    10,    11,    12,   752,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,   752,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,    -1,    -1,    -1,    -1,
      -1,    -1,     5,     6,   752,     8,     9,    10,    11,    12,
      13,    14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,   144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,   210,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
     493,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,   506,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,   587,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,   609,   610,   611,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,    -1,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,     5,     6,    -1,     8,     9,    10,    11,    12,    13,
      14,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
     144,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,   210,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,   235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,   285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,    -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,   441,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,   493,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,   506,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,   587,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,   609,   610,   611,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,    -1,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    14,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    99,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,   130,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,   144,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,   210,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
     235,    -1,   237,    -1,    -1,    -1,   241,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
     285,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
      -1,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
      -1,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,   441,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,   493,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,   506,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,   587,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,   609,   610,   611,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,    -1,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,   122,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,   188,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,   290,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
     366,   367,    -1,   369,   370,    -1,    -1,   373,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,   521,   522,   523,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,   594,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    18,    19,    20,    21,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
     387,    -1,    -1,   390,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,   648,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,   160,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,   502,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      89,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
     199,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,   235,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,   263,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
     519,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,   290,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,   373,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,   397,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,   594,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    35,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,   104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,   572,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
     104,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
     274,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,   572,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    37,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,   219,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,   572,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     5,
       6,    -1,     8,     9,    10,    11,    12,    13,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    35,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,   572,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,   372,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    35,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,   372,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    95,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
     172,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,   522,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,   660,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    17,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,   572,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
     197,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,   170,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,   183,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,   713,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,   170,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,   183,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,   453,   454,    -1,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,   713,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
     170,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,   183,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,   453,   454,    -1,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,   713,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,   125,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,   170,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,   183,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,   453,   454,    -1,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,   713,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,   170,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,   183,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,   418,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,   453,   454,    -1,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,   713,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      23,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,
      63,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    77,    78,    79,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
     143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,   170,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,   190,   191,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
     233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
     413,    -1,   415,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
     453,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,   466,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,
     483,    -1,   485,   486,   487,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,   539,   540,   541,   542,
     543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,   602,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
     713,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,
      -1,    -1,    56,    57,    -1,    59,    60,    61,    -1,    63,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    77,    78,    79,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    93,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,   143,
      -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,   170,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,    -1,   183,
     184,   185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,   215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,   233,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
     244,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,
      -1,   265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,   413,
      -1,   415,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,   453,
     454,    -1,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,   466,    -1,   468,   469,    -1,   471,   472,   473,
      -1,   475,    -1,    -1,   478,   479,   480,   481,    -1,   483,
      -1,   485,   486,   487,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,   539,   540,   541,   542,   543,
      -1,    -1,   546,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,   601,   602,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
      -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,   645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,   713,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,
      -1,    56,    57,    -1,    59,    60,    61,    -1,    63,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    77,    78,    79,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    93,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,
      -1,   146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,   170,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,    -1,   183,   184,
     185,   186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
     215,   216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,    -1,    -1,   232,   233,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,
     265,   266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,   413,    -1,
     415,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,   453,   454,
      -1,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,   466,    -1,   468,   469,    -1,   471,   472,   473,    -1,
     475,    -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,
     485,   486,   487,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,   507,    -1,   509,   510,   511,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,   539,   540,   541,   542,   543,    -1,
      -1,   546,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,
      -1,    -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
     645,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,   676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,
      56,    57,    -1,    59,    60,    61,    -1,    63,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    77,    78,    79,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    93,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,   170,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,    -1,   183,   184,   185,
     186,   187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,
     216,    -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,    -1,    -1,   232,   233,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,    -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,
     266,    -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,   413,    -1,   415,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,   453,   454,    -1,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
     466,    -1,   468,   469,    -1,   471,   472,   473,    -1,   475,
      -1,    -1,   478,   479,   480,   481,    -1,   483,    -1,   485,
     486,   487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,    -1,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,   507,    -1,   509,   510,   511,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,   539,   540,   541,   542,   543,    -1,    -1,
     546,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
      -1,    -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,
     646,   647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,
     676,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,   713,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,
      57,    -1,    59,    60,    61,    -1,    63,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    93,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,   170,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,    -1,   183,   184,   185,   186,
     187,    -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,    -1,    -1,   211,    -1,    -1,    -1,   215,   216,
      -1,   218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
      -1,    -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,
      -1,    -1,   269,    -1,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,    -1,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,   413,    -1,   415,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,   453,   454,    -1,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,   466,
      -1,   468,   469,    -1,   471,   472,   473,    -1,   475,    -1,
      -1,   478,   479,   480,   481,    -1,   483,    -1,   485,   486,
     487,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,    -1,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
     507,    -1,   509,   510,   511,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,   539,   540,   541,   542,   543,    -1,    -1,   546,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,   645,   646,
     647,    -1,    -1,   650,    -1,    -1,    -1,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,    -1,   673,   674,    -1,   676,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,   713,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,    13,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,
      -1,    59,    60,    61,    -1,    63,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    77,
      78,    79,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,    -1,    -1,   184,   185,   186,   187,
      -1,    -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,
     218,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,
      -1,    -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,
      -1,   269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,   369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,   413,    -1,   415,   416,   417,
      -1,   419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,    -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,
     458,   459,   460,   461,   462,   463,   464,    -1,   466,    -1,
     468,   469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,
     478,   479,   480,   481,    -1,   483,    -1,   485,   486,   487,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,   509,   510,   511,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,   539,   540,   541,   542,   543,    -1,    -1,   546,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
      -1,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,   572,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,   645,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,   676,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
      -1,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,     5,     6,    -1,     8,
       9,    10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    23,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      49,    50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,
      59,    60,    61,    -1,    63,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    77,    78,
      79,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    93,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,   121,    -1,    -1,    -1,   125,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,    -1,    -1,   184,   185,   186,   187,    -1,
      -1,   190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,    -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,
      -1,   260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,
     269,    -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
     369,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,   413,    -1,   415,   416,   417,    -1,
     419,    -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
      -1,   450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,
     459,   460,   461,   462,   463,   464,    -1,   466,    -1,   468,
     469,    -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,
     479,   480,   481,    -1,   483,    -1,   485,   486,   487,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
     509,   510,   511,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
     539,   540,   541,   542,   543,    -1,    -1,   546,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,    -1,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,   572,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,   590,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,   645,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,    -1,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,     5,     6,    -1,     8,     9,
      10,    11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    23,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,
      50,    -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,
      60,    61,    -1,    63,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    77,    78,    79,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,   121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,    -1,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,
     190,   191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
      -1,    -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,
     260,    -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,
      -1,    -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,   369,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,   413,    -1,   415,   416,   417,    -1,   419,
      -1,    -1,   422,   423,   424,    -1,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,
     450,    -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,
     460,   461,   462,   463,   464,    -1,   466,    -1,   468,   469,
      -1,   471,   472,   473,    -1,   475,    -1,    -1,   478,   479,
     480,   481,    -1,   483,    -1,   485,   486,   487,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,
     510,   511,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,
     540,   541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,    -1,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,   572,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
     590,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,   601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,   645,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,    -1,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,     5,     6,    -1,     8,     9,    10,
      11,    12,    13,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    23,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    49,    50,
      -1,    -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,
      61,    -1,    63,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    77,    78,    79,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
     121,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,   154,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,    -1,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,    -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,
     191,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,
      -1,   232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,
      -1,   262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,
      -1,   272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,   369,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,
      -1,   422,   423,   424,    -1,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,    -1,   450,
      -1,   452,   453,   454,    -1,    -1,    -1,   458,   459,   460,
     461,   462,   463,   464,    -1,   466,    -1,   468,   469,    -1,
     471,   472,   473,    -1,   475,    -1,    -1,   478,   479,   480,
     481,    -1,   483,    -1,   485,   486,   487,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,
     511,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,
     541,   542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,    -1,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,   572,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
     601,   602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,   645,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,    -1,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    23,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    49,    50,    -1,
      -1,    53,    -1,    -1,    56,    57,    -1,    59,    60,    61,
      -1,    63,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    77,    78,    79,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    93,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,   121,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,   143,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,    -1,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
      -1,    -1,   184,   185,   186,   187,    -1,    -1,   190,   191,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,   215,   216,    -1,   218,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,
     232,   233,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,   244,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,
     262,    -1,    -1,   265,   266,    -1,    -1,   269,    -1,    -1,
     272,   273,   274,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,    -1,    -1,    -1,    -1,   369,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,   413,    -1,   415,   416,   417,    -1,   419,    -1,    -1,
     422,   423,   424,    -1,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,    -1,   450,    -1,
     452,   453,   454,    -1,    -1,    -1,   458,   459,   460,   461,
     462,   463,   464,    -1,   466,    -1,   468,   469,    -1,   471,
     472,   473,    -1,   475,    -1,    -1,   478,   479,   480,   481,
      -1,   483,    -1,   485,   486,   487,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,   509,   510,   511,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,   539,   540,   541,
     542,   543,    -1,    -1,   546,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,    -1,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
     572,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,   590,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,   601,
     602,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,   645,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,   676,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,    -1,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    32,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,   150,   151,   152,
      -1,   154,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,   182,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,   455,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,   474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,     5,     6,    -1,     8,     9,    10,    11,    12,    -1,
      -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,
      -1,    25,    26,    27,    28,    29,    30,    -1,    32,    -1,
      -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,
      44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,
      54,    -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,
      -1,    65,    66,    67,    68,    69,    70,    -1,    72,    73,
      -1,    75,    76,    -1,    78,    -1,    80,    81,    82,    83,
      84,    85,    -1,    87,    88,    -1,    90,    91,    92,    -1,
      94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,
      -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,
      -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,
      -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,
      -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,
      -1,    -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,
     154,   155,    -1,   157,   158,   159,    -1,    -1,   162,   163,
      -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,   173,
     174,   175,   176,   177,    -1,    -1,   180,   181,   182,   183,
     184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,
     204,   205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,
      -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,
      -1,    -1,   226,   227,   228,   229,   230,    -1,   232,    -1,
     234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,
      -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,
      -1,   255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,
      -1,    -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,
      -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,
     284,    -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,
      -1,   295,    -1,   297,   298,   299,   300,   301,   302,   303,
     304,   305,   306,   307,   308,   309,   310,   311,   312,   313,
     314,    -1,   316,   317,   318,    -1,   320,   321,   322,   323,
      -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,
     334,   335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,
     344,    -1,   346,   347,   348,   349,   350,   351,   352,   353,
     354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,
     364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,
     374,    -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,
     384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     394,   395,   396,    -1,   398,    -1,   400,    -1,   402,   403,
     404,   405,   406,   407,   408,   409,   410,   411,    -1,    -1,
      -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,   423,
     424,   425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,
      -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,
     444,   445,   446,   447,    -1,   449,   450,    -1,   452,    -1,
     454,   455,    -1,   457,   458,   459,   460,   461,   462,   463,
     464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,
     474,   475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,
      -1,   485,   486,    -1,   488,   489,    -1,   491,   492,    -1,
      -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,
      -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,
     514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,
     524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,
     534,    -1,   536,    -1,   538,    -1,   540,   541,   542,   543,
      -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,
     554,   555,    -1,    -1,   558,   559,   560,   561,    -1,   563,
     564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,
     574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,
      -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,
      -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,
      -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,
      -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,
     624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,
     634,    -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,
     644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,
     654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,
     674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,
      -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,
     694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,
     704,   705,   706,   707,   708,    -1,   710,   711,   712,    -1,
     714,   715,   716,   717,   718,   719,    -1,   721,   722,   723,
     724,   725,   726,   727,   728,   729,   730,   731,   732,   733,
     734,   735,   736,   737,   738,   739,   740,   741,   742,   743,
       5,     6,    -1,     8,     9,    10,    11,    12,    -1,    -1,
      15,    -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,
      25,    26,    27,    28,    29,    30,    -1,    32,    -1,    -1,
      -1,    36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,
      45,    -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,
      -1,    56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,
      65,    66,    67,    68,    69,    70,    -1,    72,    73,    -1,
      75,    76,    -1,    78,    -1,    80,    81,    82,    83,    84,
      85,    -1,    87,    88,    -1,    90,    91,    92,    -1,    94,
      -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,
      -1,   106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,
     115,    -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,
      -1,   126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,
     135,   136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,
      -1,   146,   147,   148,    -1,   150,    -1,   152,    -1,   154,
     155,    -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,
     165,   166,   167,   168,   169,    -1,    -1,    -1,   173,   174,
     175,   176,   177,    -1,    -1,   180,   181,   182,   183,   184,
     185,   186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     195,   196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,
     205,   206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,
      -1,   216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,
      -1,   226,   227,   228,   229,   230,    -1,   232,    -1,   234,
      -1,    -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,
      -1,    -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,
     255,   256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,
      -1,   266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,
      -1,    -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,
      -1,   286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,
     295,    -1,   297,   298,   299,   300,   301,   302,   303,   304,
     305,   306,   307,   308,   309,   310,   311,   312,   313,   314,
      -1,   316,   317,   318,    -1,   320,   321,   322,   323,    -1,
     325,   326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,
     335,   336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,
      -1,   346,   347,   348,   349,   350,   351,   352,   353,   354,
      -1,    -1,   357,   358,    -1,    -1,   361,   362,   363,   364,
     365,    -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,
      -1,   376,   377,    -1,   379,   380,   381,    -1,    -1,   384,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,
     395,   396,    -1,   398,    -1,   400,    -1,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,    -1,    -1,    -1,
      -1,   416,   417,    -1,   419,    -1,   421,   422,   423,   424,
     425,    -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,
      -1,   436,   437,    -1,   439,   440,    -1,    -1,   443,   444,
     445,   446,   447,    -1,   449,   450,    -1,   452,    -1,   454,
     455,    -1,   457,   458,   459,   460,   461,   462,   463,   464,
      -1,    -1,    -1,   468,   469,    -1,   471,   472,   473,   474,
     475,    -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,
     485,   486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,
      -1,   496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,
      -1,    -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,
     515,   516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,
     525,   526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,
      -1,   536,    -1,   538,    -1,   540,   541,   542,   543,    -1,
      -1,    -1,   547,    -1,    -1,   550,   551,   552,   553,   554,
     555,    -1,    -1,   558,   559,   560,   561,    -1,   563,   564,
      -1,    -1,   567,   568,   569,   570,    -1,    -1,   573,   574,
      -1,   576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,
     585,   586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,
     595,   596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,
     605,    -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,
      -1,    -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,
      -1,    -1,    -1,   628,    -1,   630,   631,   632,   633,   634,
      -1,   636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,
      -1,   646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,
     655,   656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   668,   669,   670,    -1,   672,   673,   674,
      -1,    -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,
      -1,    -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,
      -1,   696,   697,    -1,    -1,    -1,   701,   702,   703,   704,
     705,   706,   707,   708,    -1,   710,   711,   712,    -1,   714,
     715,   716,   717,   718,   719,    -1,   721,   722,   723,   724,
     725,   726,   727,   728,   729,   730,   731,   732,   733,   734,
     735,   736,   737,   738,   739,   740,   741,   742,   743,     5,
       6,    -1,     8,     9,    10,    11,    12,    -1,    -1,    15,
      -1,    -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,
      26,    27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,
      36,    -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,
      -1,    47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,
      56,    57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,
      66,    67,    68,    69,    70,    -1,    72,    73,    -1,    75,
      76,    -1,    78,    -1,    80,    81,    82,    83,    84,    85,
      -1,    87,    88,    -1,    90,    91,    92,    -1,    94,    -1,
      -1,    -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,
     106,    -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,
      -1,    -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,
     126,   127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,
     136,   137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,
     146,   147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,
      -1,   157,   158,   159,    -1,    -1,   162,   163,    -1,   165,
     166,   167,   168,   169,    -1,    -1,    -1,   173,   174,   175,
     176,   177,    -1,    -1,   180,   181,   182,   183,   184,   185,
     186,   187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,
     196,    -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,
     206,   207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,
     216,    -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,
     226,   227,   228,   229,   230,    -1,   232,    -1,   234,    -1,
      -1,   237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,
      -1,    -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,
     256,   257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,
     266,    -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,
      -1,    -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,
     286,   287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,
      -1,   297,   298,   299,   300,   301,   302,   303,   304,   305,
     306,   307,   308,   309,   310,   311,   312,   313,   314,    -1,
     316,   317,   318,    -1,   320,   321,   322,   323,    -1,   325,
     326,    -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,
     336,    -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,
     346,   347,   348,   349,   350,   351,   352,   353,   354,    -1,
      -1,   357,   358,    -1,    -1,   361,   362,   363,   364,   365,
      -1,    -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,
     376,   377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,
     396,    -1,   398,    -1,   400,    -1,   402,   403,   404,   405,
     406,   407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,
     416,   417,    -1,   419,    -1,   421,   422,   423,   424,   425,
      -1,   427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,
     436,   437,    -1,   439,   440,    -1,    -1,   443,   444,   445,
     446,   447,    -1,   449,   450,    -1,   452,    -1,   454,   455,
      -1,   457,   458,   459,   460,   461,   462,   463,   464,    -1,
      -1,    -1,   468,   469,    -1,   471,   472,   473,   474,   475,
      -1,    -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,
     486,    -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,
     496,   497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,
      -1,    -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,
     516,   517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,
     526,    -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,
     536,    -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,
      -1,   547,    -1,    -1,   550,   551,   552,   553,   554,   555,
      -1,    -1,   558,   559,   560,   561,    -1,   563,   564,    -1,
      -1,   567,   568,   569,   570,    -1,    -1,   573,   574,    -1,
     576,   577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,
     586,    -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,
     596,    -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,
      -1,    -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,
      -1,    -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,
      -1,    -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,
     636,    -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,
     646,   647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,
     656,   657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   668,   669,   670,    -1,   672,   673,   674,    -1,
      -1,    -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,
      -1,    -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,
     696,   697,    -1,    -1,    -1,   701,   702,   703,   704,   705,
     706,   707,   708,    -1,   710,   711,   712,    -1,   714,   715,
     716,   717,   718,   719,    -1,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,     5,     6,
      -1,     8,     9,    10,    11,    12,    -1,    -1,    15,    -1,
      -1,    -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,
      27,    28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,
      -1,    -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,
      47,    -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,
      57,    -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,
      67,    68,    69,    70,    -1,    72,    73,    -1,    75,    76,
      -1,    78,    -1,    80,    81,    82,    83,    84,    85,    -1,
      87,    88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,
      -1,    98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,
      -1,    -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,
      -1,    -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,
     127,    -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,
     137,   138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,
     147,   148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,
     157,   158,   159,    -1,    -1,   162,   163,    -1,   165,   166,
     167,   168,   169,    -1,    -1,    -1,   173,   174,   175,   176,
     177,    -1,    -1,   180,   181,   182,   183,   184,   185,   186,
     187,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,
      -1,   198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,
     207,    -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,
      -1,    -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,
     227,   228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,
     237,    -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,
      -1,   248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,
     257,    -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,
      -1,    -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,
      -1,    -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,
     287,    -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,    -1,   316,
     317,   318,    -1,   320,   321,   322,   323,    -1,   325,   326,
      -1,    -1,    -1,    -1,   331,   332,   333,   334,   335,   336,
      -1,    -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,
     347,   348,   349,   350,   351,   352,   353,   354,    -1,    -1,
     357,   358,    -1,    -1,   361,   362,   363,   364,   365,    -1,
      -1,    -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,
     377,    -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,
      -1,   398,    -1,   400,    -1,   402,   403,   404,   405,   406,
     407,   408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,
     417,    -1,   419,    -1,   421,   422,   423,   424,   425,    -1,
     427,   428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,
     437,    -1,   439,   440,    -1,    -1,   443,   444,   445,   446,
     447,    -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,
     457,   458,   459,   460,   461,   462,   463,   464,    -1,    -1,
      -1,   468,   469,    -1,   471,   472,   473,   474,   475,    -1,
      -1,    -1,   479,   480,   481,    -1,   483,    -1,   485,   486,
      -1,   488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,
     497,   498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,
      -1,    -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,
     517,   518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,
      -1,   528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,
      -1,   538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,
     547,    -1,    -1,   550,   551,   552,   553,   554,   555,    -1,
      -1,   558,   559,   560,   561,    -1,   563,   564,    -1,    -1,
     567,   568,   569,   570,    -1,    -1,   573,   574,    -1,   576,
     577,   578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,
      -1,    -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,
      -1,   598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,
      -1,   608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,
      -1,    -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,
      -1,   628,    -1,   630,   631,   632,   633,    -1,    -1,   636,
      -1,    -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,
     647,    -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,
     657,    -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   668,   669,   670,    -1,   672,   673,   674,    -1,    -1,
      -1,    -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,
      -1,   688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,
     697,    -1,    -1,    -1,   701,   702,   703,   704,   705,   706,
     707,   708,    -1,   710,   711,   712,    -1,   714,   715,   716,
     717,   718,   719,    -1,   721,   722,   723,   724,   725,   726,
     727,   728,   729,   730,   731,   732,   733,   734,   735,   736,
     737,   738,   739,   740,   741,   742,   743,     5,     6,    -1,
       8,     9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,
      -1,    -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,
      28,    29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,
      -1,    -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,
      -1,    -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,
      -1,    59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,
      68,    69,    70,    -1,    72,    73,    -1,    75,    76,    -1,
      78,    -1,    80,    81,    82,    83,    84,    85,    -1,    87,
      88,    -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,
      98,    -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,
      -1,    -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,
      -1,    -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,
      -1,   129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,
     138,   139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,
     148,    -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,
     158,   159,    -1,    -1,   162,   163,    -1,   165,   166,   167,
     168,   169,    -1,    -1,    -1,   173,   174,   175,   176,   177,
      -1,    -1,   180,   181,   182,   183,   184,   185,   186,   187,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,
     198,    -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,
      -1,   209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,
      -1,    -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,
     228,   229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,
      -1,    -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,
     248,    -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,
      -1,    -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,
      -1,   269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,
      -1,   279,   280,    -1,   282,    -1,   284,    -1,   286,   287,
      -1,    -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,
     298,   299,   300,   301,   302,   303,   304,   305,   306,   307,
     308,   309,   310,   311,   312,   313,   314,    -1,   316,   317,
     318,    -1,   320,   321,   322,   323,    -1,   325,   326,    -1,
      -1,    -1,    -1,   331,   332,   333,   334,   335,   336,    -1,
      -1,   339,   340,    -1,   342,    -1,   344,    -1,   346,   347,
     348,   349,   350,   351,   352,   353,   354,    -1,    -1,   357,
     358,    -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,
      -1,    -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,
      -1,   379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,
     398,    -1,   400,    -1,   402,   403,   404,   405,   406,   407,
     408,   409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,
      -1,   419,    -1,   421,   422,   423,   424,   425,    -1,   427,
     428,   429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,
      -1,   439,   440,    -1,    -1,   443,   444,   445,   446,   447,
      -1,   449,   450,    -1,   452,    -1,   454,   455,    -1,   457,
     458,   459,   460,   461,   462,   463,   464,    -1,    -1,    -1,
     468,   469,    -1,   471,   472,   473,   474,   475,    -1,    -1,
      -1,   479,   480,   481,    -1,   483,    -1,   485,   486,    -1,
     488,   489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,
     498,   499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,
      -1,    -1,   510,    -1,   512,    -1,   514,   515,   516,   517,
     518,    -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,
     528,    -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,
     538,    -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,
      -1,    -1,   550,   551,   552,   553,   554,   555,    -1,    -1,
     558,   559,   560,   561,    -1,   563,   564,    -1,    -1,   567,
     568,   569,   570,    -1,    -1,   573,   574,    -1,   576,   577,
     578,   579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,
      -1,    -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,
     598,   599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,
     608,    -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,
      -1,   619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,
     628,    -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,
      -1,    -1,   640,   641,   642,    -1,   644,    -1,   646,   647,
      -1,    -1,   650,    -1,    -1,   653,   654,   655,   656,   657,
      -1,   659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     668,   669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,
      -1,   679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,
     688,   689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,
      -1,    -1,    -1,   701,   702,   703,   704,   705,   706,   707,
     708,    -1,   710,   711,   712,    -1,   714,   715,   716,   717,
     718,   719,    -1,   721,   722,   723,   724,   725,   726,   727,
     728,   729,   730,   731,   732,   733,   734,   735,   736,   737,
     738,   739,   740,   741,   742,   743,     5,     6,    -1,     8,
       9,    10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,
      -1,    20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,
      29,    30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,
      -1,    40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,
      -1,    -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,
      59,    60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,
      69,    70,    -1,    72,    73,    -1,    75,    76,    -1,    78,
      -1,    80,    81,    82,    83,    84,    85,    -1,    87,    88,
      -1,    90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,
      -1,    -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,
      -1,   110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,   120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,
     129,    -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,
     139,    -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,
      -1,    -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,
     159,    -1,    -1,   162,   163,    -1,   165,   166,   167,   168,
     169,    -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,
      -1,   180,   181,   182,   183,   184,   185,   186,   187,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,
      -1,    -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,
     209,    -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,
      -1,    -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,
     229,   230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,
      -1,    -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,
      -1,    -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,
      -1,   260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,
     269,   270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,
     279,   280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,
      -1,    -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,
     299,   300,   301,   302,   303,   304,   305,   306,   307,   308,
     309,   310,   311,   312,   313,   314,    -1,   316,   317,   318,
      -1,   320,   321,   322,   323,    -1,   325,   326,    -1,    -1,
      -1,    -1,   331,   332,   333,   334,   335,   336,    -1,    -1,
     339,   340,    -1,   342,    -1,   344,    -1,   346,   347,   348,
     349,   350,   351,   352,   353,   354,    -1,    -1,   357,   358,
      -1,    -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,
      -1,   370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,
     379,   380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,
      -1,   400,    -1,   402,   403,   404,   405,   406,   407,   408,
     409,   410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,
     419,    -1,   421,   422,   423,   424,   425,    -1,   427,   428,
     429,    -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,
     439,   440,    -1,    -1,   443,   444,   445,   446,   447,    -1,
     449,   450,    -1,   452,    -1,   454,   455,    -1,   457,   458,
     459,   460,   461,   462,   463,   464,    -1,    -1,    -1,   468,
     469,    -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,
     479,   480,   481,    -1,   483,    -1,   485,   486,    -1,   488,
     489,    -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,
     499,    -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,
      -1,   510,    -1,   512,    -1,   514,   515,   516,   517,   518,
      -1,    -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,
      -1,    -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,
      -1,   540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,
      -1,   550,   551,   552,   553,   554,   555,    -1,    -1,   558,
     559,   560,   561,    -1,   563,   564,    -1,    -1,   567,   568,
     569,   570,    -1,    -1,   573,   574,    -1,   576,   577,   578,
     579,    -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,
      -1,    -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,
     599,    -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,
      -1,   610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,
     619,    -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,
      -1,   630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,
      -1,   640,   641,   642,    -1,   644,    -1,   646,   647,    -1,
      -1,   650,    -1,    -1,   653,   654,   655,   656,   657,    -1,
     659,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,
     669,   670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,
     679,    -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,
     689,    -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,
      -1,    -1,   701,   702,   703,   704,   705,   706,   707,   708,
      -1,   710,   711,   712,    -1,   714,   715,   716,   717,   718,
     719,    -1,   721,   722,   723,   724,   725,   726,   727,   728,
     729,   730,   731,   732,   733,   734,   735,   736,   737,   738,
     739,   740,   741,   742,   743,     5,     6,    -1,     8,     9,
      10,    11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,
      20,    -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,
      30,    -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,
      40,    -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,
      -1,    -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,
      60,    -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,
      70,    -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,
      80,    81,    82,    83,    84,    85,    -1,    87,    88,    -1,
      90,    91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,
      -1,    -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,
     110,   111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,
     120,    -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,
      -1,    -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,
      -1,    -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,
      -1,    -1,   152,    -1,   154,   155,    -1,   157,   158,   159,
      -1,    -1,   162,   163,    -1,   165,   166,   167,   168,   169,
      -1,    -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,
     180,   181,   182,   183,   184,   185,   186,   187,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,
      -1,    -1,   202,    -1,   204,   205,   206,   207,    -1,   209,
      -1,   211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,
      -1,   221,   222,    -1,    -1,    -1,   226,   227,   228,   229,
     230,    -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,
      -1,    -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,
      -1,    -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,
     260,    -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,
     270,    -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,
     280,    -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,
      -1,    -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,
     300,   301,   302,   303,   304,   305,   306,   307,   308,   309,
     310,   311,   312,   313,   314,    -1,   316,   317,   318,    -1,
     320,   321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,
      -1,   331,   332,   333,   334,   335,   336,    -1,    -1,   339,
     340,    -1,   342,    -1,   344,    -1,   346,   347,   348,   349,
     350,   351,   352,   353,   354,    -1,    -1,   357,   358,    -1,
      -1,   361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,
     370,    -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,
     380,   381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,
     400,    -1,   402,   403,   404,   405,   406,   407,   408,   409,
     410,   411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,
      -1,   421,   422,   423,   424,   425,    -1,   427,   428,   429,
      -1,    -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,
     440,    -1,    -1,   443,   444,   445,   446,   447,    -1,   449,
     450,    -1,   452,    -1,   454,   455,    -1,   457,   458,   459,
     460,   461,   462,   463,   464,    -1,    -1,    -1,   468,   469,
      -1,   471,   472,   473,   474,   475,    -1,    -1,    -1,   479,
     480,   481,    -1,   483,    -1,   485,   486,    -1,   488,   489,
      -1,   491,   492,    -1,    -1,    -1,   496,   497,   498,   499,
      -1,    -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,
     510,    -1,   512,    -1,   514,   515,   516,   517,   518,    -1,
      -1,    -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,
      -1,   531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,
     540,   541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,
     550,   551,   552,   553,   554,   555,    -1,    -1,   558,   559,
     560,   561,    -1,   563,   564,    -1,    -1,   567,   568,   569,
     570,    -1,    -1,   573,   574,    -1,   576,   577,   578,   579,
      -1,    -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,
      -1,   591,   592,    -1,    -1,   595,   596,    -1,   598,   599,
      -1,    -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,
     610,    -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,
      -1,   621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,
     630,   631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,
     640,   641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,
     650,    -1,    -1,   653,   654,   655,   656,   657,    -1,   659,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,
     670,    -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,
      -1,   681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,
      -1,    -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,
      -1,   701,   702,   703,   704,   705,   706,   707,   708,    -1,
     710,   711,   712,    -1,   714,   715,   716,   717,   718,   719,
      -1,   721,   722,   723,   724,   725,   726,   727,   728,   729,
     730,   731,   732,   733,   734,   735,   736,   737,   738,   739,
     740,   741,   742,   743,     5,     6,    -1,     8,     9,    10,
      11,    12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,
      -1,    -1,    -1,    -1,    25,    26,    27,    28,    29,    30,
      -1,    32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,
      -1,    -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,
      -1,    -1,    53,    54,    -1,    56,    57,    -1,    59,    60,
      -1,    -1,    -1,    -1,    65,    66,    67,    68,    69,    70,
      -1,    72,    73,    -1,    75,    76,    -1,    78,    -1,    80,
      81,    82,    83,    84,    85,    -1,    87,    88,    -1,    90,
      91,    92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,
      -1,    -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,
     111,   112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,
      -1,    -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,
      -1,    -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,
      -1,    -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,
      -1,   152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,
      -1,   162,   163,    -1,   165,   166,   167,   168,   169,    -1,
      -1,    -1,   173,   174,   175,   176,   177,    -1,    -1,   180,
     181,   182,   183,   184,   185,   186,   187,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,
      -1,   202,    -1,   204,   205,   206,   207,    -1,   209,    -1,
     211,    -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,
     221,   222,    -1,    -1,    -1,   226,   227,   228,   229,   230,
      -1,   232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,
      -1,   242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,
      -1,   252,   253,    -1,   255,   256,   257,    -1,    -1,   260,
      -1,   262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,
      -1,   272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,
      -1,   282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,
      -1,   292,    -1,    -1,   295,    -1,   297,   298,   299,   300,
     301,   302,   303,   304,   305,   306,   307,   308,   309,   310,
     311,   312,   313,   314,    -1,   316,   317,   318,    -1,   320,
     321,   322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,
     331,   332,   333,   334,   335,   336,    -1,    -1,   339,   340,
      -1,   342,    -1,   344,    -1,   346,   347,   348,   349,   350,
     351,   352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,
     361,   362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,
      -1,    -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,
     381,    -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,
      -1,   402,   403,   404,   405,   406,   407,   408,   409,   410,
     411,    -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,
     421,   422,   423,   424,   425,    -1,   427,   428,   429,    -1,
      -1,   432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,
      -1,    -1,   443,   444,   445,   446,   447,    -1,   449,   450,
      -1,   452,    -1,   454,   455,    -1,   457,   458,   459,   460,
     461,   462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,
     471,   472,   473,   474,   475,    -1,    -1,    -1,   479,   480,
     481,    -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,
     491,   492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,
      -1,    -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,
      -1,   512,    -1,   514,   515,   516,   517,   518,    -1,    -1,
      -1,    -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,
     531,    -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,
     541,   542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,
     551,   552,   553,   554,   555,    -1,    -1,   558,   559,   560,
     561,    -1,   563,   564,    -1,    -1,   567,   568,   569,   570,
      -1,    -1,   573,   574,    -1,   576,   577,   578,   579,    -1,
      -1,    -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,
     591,   592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,
      -1,    -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,
      -1,   612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,
     621,    -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,
     631,   632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,
     641,   642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,
      -1,    -1,   653,   654,   655,   656,   657,    -1,   659,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,
      -1,   672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,
     681,    -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,
      -1,   692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,
     701,   702,   703,   704,   705,   706,   707,   708,    -1,   710,
     711,   712,    -1,   714,   715,   716,   717,   718,   719,    -1,
     721,   722,   723,   724,   725,   726,   727,   728,   729,   730,
     731,   732,   733,   734,   735,   736,   737,   738,   739,   740,
     741,   742,   743,     5,     6,    -1,     8,     9,    10,    11,
      12,    -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,
      -1,    -1,    -1,    25,    26,    27,    28,    29,    30,    -1,
      32,    -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,
      -1,    43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,
      -1,    53,    54,    -1,    56,    57,    -1,    59,    60,    -1,
      -1,    -1,    -1,    65,    66,    67,    68,    69,    70,    -1,
      72,    73,    -1,    75,    76,    -1,    78,    -1,    80,    81,
      82,    83,    84,    85,    -1,    87,    88,    -1,    90,    91,
      92,    -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,
      -1,   103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,
     112,    -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,
      -1,    -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,
      -1,    -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,
      -1,    -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,
     152,    -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,
     162,   163,    -1,   165,   166,   167,   168,   169,    -1,    -1,
      -1,   173,   174,   175,   176,   177,    -1,    -1,   180,   181,
     182,   183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,
     202,    -1,   204,   205,   206,   207,    -1,   209,    -1,   211,
      -1,    -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,
     222,    -1,    -1,    -1,   226,   227,   228,   229,   230,    -1,
     232,    -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,
     242,   243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,
     252,   253,    -1,   255,   256,   257,    -1,    -1,   260,    -1,
     262,    -1,    -1,    -1,   266,    -1,    -1,   269,   270,    -1,
     272,   273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,
     282,    -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,
     292,    -1,    -1,   295,    -1,   297,   298,   299,   300,   301,
     302,   303,   304,   305,   306,   307,   308,   309,   310,   311,
     312,   313,   314,    -1,   316,   317,   318,    -1,   320,   321,
     322,   323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,
     332,   333,   334,   335,   336,    -1,    -1,   339,   340,    -1,
     342,    -1,   344,    -1,   346,   347,   348,   349,   350,   351,
     352,   353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,
     362,   363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,
      -1,    -1,   374,    -1,   376,   377,    -1,   379,   380,   381,
      -1,    -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,
     402,   403,   404,   405,   406,   407,   408,   409,   410,   411,
      -1,    -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,
     422,   423,   424,   425,    -1,   427,   428,   429,    -1,    -1,
     432,    -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,
      -1,   443,   444,   445,   446,   447,    -1,   449,   450,    -1,
     452,    -1,   454,   455,    -1,   457,   458,   459,   460,   461,
     462,   463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,
     472,   473,   474,   475,    -1,    -1,    -1,   479,   480,   481,
      -1,   483,    -1,   485,   486,    -1,   488,   489,    -1,   491,
     492,    -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,
      -1,   503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,
     512,    -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,
      -1,    -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,
      -1,    -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,
     542,   543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,
     552,   553,   554,   555,    -1,    -1,   558,   559,   560,   561,
      -1,   563,   564,    -1,    -1,   567,   568,   569,   570,    -1,
      -1,   573,   574,    -1,   576,   577,   578,   579,    -1,    -1,
      -1,    -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,
     592,    -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,
      -1,    -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,
     612,   613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,
      -1,    -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,
     632,   633,    -1,    -1,   636,    -1,    -1,    -1,   640,   641,
     642,    -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,
      -1,   653,   654,   655,   656,   657,    -1,   659,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,
     672,   673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,
      -1,    -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,
     692,    -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,
     702,   703,   704,   705,   706,   707,   708,    -1,   710,   711,
     712,    -1,   714,   715,   716,   717,   718,   719,    -1,   721,
     722,   723,   724,   725,   726,   727,   728,   729,   730,   731,
     732,   733,   734,   735,   736,   737,   738,   739,   740,   741,
     742,   743,     5,     6,    -1,     8,     9,    10,    11,    12,
      -1,    -1,    15,    -1,    -1,    -1,    -1,    20,    -1,    -1,
      -1,    -1,    25,    26,    27,    28,    29,    30,    -1,    -1,
      -1,    -1,    -1,    36,    -1,    -1,    -1,    40,    -1,    -1,
      43,    44,    45,    -1,    47,    -1,    -1,    -1,    -1,    -1,
      53,    -1,    -1,    56,    57,    -1,    59,    60,    -1,    -1,
      -1,    -1,    65,    66,    67,    68,    69,    70,    -1,    72,
      73,    -1,    75,    76,    -1,    78,    -1,    80,    81,    82,
      83,    84,    85,    -1,    87,    88,    -1,    90,    91,    92,
      -1,    94,    -1,    -1,    -1,    98,    -1,    -1,    -1,    -1,
     103,    -1,    -1,   106,    -1,    -1,    -1,   110,   111,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,   120,    -1,    -1,
      -1,    -1,    -1,   126,   127,    -1,   129,    -1,    -1,    -1,
      -1,    -1,   135,   136,   137,   138,   139,    -1,    -1,    -1,
      -1,    -1,    -1,   146,   147,   148,    -1,    -1,    -1,   152,
      -1,    -1,   155,    -1,   157,   158,   159,    -1,    -1,   162,
     163,    -1,   165,   166,   167,   168,   169,    -1,    -1,    -1,
     173,   174,   175,   176,   177,    -1,    -1,   180,   181,    -1,
     183,   184,   185,   186,   187,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   195,   196,    -1,   198,    -1,    -1,    -1,   202,
      -1,   204,   205,   206,   207,    -1,   209,    -1,   211,    -1,
      -1,    -1,    -1,   216,    -1,    -1,    -1,    -1,   221,   222,
      -1,    -1,    -1,   226,   227,   228,   229,    -1,    -1,   232,
      -1,   234,    -1,    -1,   237,    -1,    -1,    -1,    -1,   242,
     243,    -1,    -1,    -1,    -1,   248,    -1,    -1,    -1,   252,
     253,    -1,   255,   256,    -1,    -1,    -1,   260,    -1,   262,
      -1,    -1,    -1,   266,    -1,    -1,   269,    -1,    -1,   272,
     273,    -1,    -1,    -1,    -1,    -1,   279,   280,    -1,   282,
      -1,   284,    -1,   286,   287,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   295,    -1,   297,   298,   299,   300,   301,   302,
     303,   304,   305,   306,   307,   308,   309,   310,   311,   312,
     313,   314,    -1,   316,   317,   318,    -1,   320,   321,   322,
     323,    -1,   325,   326,    -1,    -1,    -1,    -1,   331,   332,
     333,   334,   335,   336,    -1,    -1,   339,   340,    -1,   342,
      -1,   344,    -1,   346,   347,   348,   349,   350,   351,   352,
     353,   354,    -1,    -1,   357,   358,    -1,    -1,   361,   362,
     363,   364,   365,    -1,    -1,    -1,    -1,   370,    -1,    -1,
      -1,   374,    -1,   376,   377,    -1,   379,   380,   381,    -1,
      -1,   384,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   394,   395,   396,    -1,   398,    -1,   400,    -1,   402,
     403,   404,   405,   406,   407,   408,   409,   410,   411,    -1,
      -1,    -1,    -1,   416,   417,    -1,   419,    -1,   421,   422,
     423,   424,   425,    -1,   427,   428,   429,    -1,    -1,   432,
      -1,    -1,    -1,   436,   437,    -1,   439,   440,    -1,    -1,
     443,   444,   445,   446,   447,    -1,   449,   450,    -1,   452,
      -1,   454,    -1,    -1,   457,   458,   459,   460,   461,   462,
     463,   464,    -1,    -1,    -1,   468,   469,    -1,   471,   472,
     473,    -1,   475,    -1,    -1,    -1,   479,   480,   481,    -1,
     483,    -1,   485,   486,    -1,   488,   489,    -1,   491,   492,
      -1,    -1,    -1,   496,   497,   498,   499,    -1,    -1,    -1,
     503,    -1,    -1,    -1,    -1,    -1,    -1,   510,    -1,   512,
      -1,   514,   515,   516,   517,   518,    -1,    -1,    -1,    -1,
      -1,   524,   525,   526,    -1,   528,    -1,    -1,   531,    -1,
      -1,   534,    -1,   536,    -1,   538,    -1,   540,   541,   542,
     543,    -1,    -1,    -1,   547,    -1,    -1,   550,   551,   552,
     553,   554,   555,    -1,    -1,   558,   559,   560,   561,    -1,
     563,   564,    -1,    -1,   567,   568,   569,   570,    -1,    -1,
     573,   574,    -1,   576,   577,   578,   579,    -1,    -1,    -1,
      -1,    -1,   585,   586,    -1,    -1,    -1,    -1,   591,   592,
      -1,    -1,   595,   596,    -1,   598,   599,    -1,    -1,    -1,
      -1,    -1,   605,    -1,    -1,   608,    -1,   610,    -1,   612,
     613,    -1,    -1,    -1,    -1,    -1,   619,    -1,   621,    -1,
      -1,   624,    -1,    -1,    -1,   628,    -1,   630,   631,   632,
     633,    -1,    -1,    -1,    -1,    -1,    -1,   640,   641,   642,
      -1,   644,    -1,   646,   647,    -1,    -1,   650,    -1,    -1,
     653,   654,   655,   656,   657,    -1,   659,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   668,   669,   670,    -1,   672,
     673,   674,    -1,    -1,    -1,    -1,   679,    -1,   681,    -1,
      -1,    -1,    -1,    -1,    -1,   688,   689,    -1,    -1,   692,
      -1,   694,    -1,   696,   697,    -1,    -1,    -1,   701,   702,
     703,   704,   705,   706,   707,   708,    -1,   710,   711,   712,
      -1,   714,   715,   716,   717,   718,   719,    -1,   721,   722,
     723,   724,   725,   726,   727,   728,   729,   730,   731,   732,
     733,   734,   735,   736,   737,   738,   739,   740,   741,   742,
     743,    34,    35,    -1,    -1,    -1,    -1,    40,    -1,    42,
      -1,    44,    45,    -1,    -1,    34,    35,    -1,    -1,    -1,
      -1,    40,    -1,    42,    -1,    44,    45,    -1,    -1,    62,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    62,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   112,
      -1,    -1,   115,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     123,    -1,    -1,   112,    -1,    -1,   115,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   123,    -1,    -1,    -1,    -1,   142,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   142,    -1,    -1,   159,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     159,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   187,    -1,   189,    -1,    -1,    -1,
      -1,   194,    -1,    -1,    -1,    -1,    -1,    -1,   187,    -1,
     189,    -1,   205,   206,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   205,   206,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   247,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   260,   247,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   260,    -1,    -1,    -1,    -1,   279,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   288,   289,    -1,   291,    -1,
     279,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   288,
     289,    -1,   291,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,   328,   329,   330,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   328,
     329,   330,    -1,    -1,   347,   348,   349,    -1,    -1,    -1,
      -1,   354,    -1,    -1,   357,    -1,    -1,    -1,   347,   348,
     349,    -1,    -1,    -1,    -1,   354,    -1,    -1,   357,    -1,
      -1,    -1,   375,   376,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   375,   376,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   409,   410,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     409,   410,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,   435,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,   435,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   497,    -1,    -1,    -1,   501,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   497,    -1,
     513,    -1,   501,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,   513,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
     573,    -1,    -1,   576,    -1,    -1,   579,   580,   581,   582,
      -1,    -1,    -1,    -1,   573,    -1,    -1,   576,    -1,    -1,
     579,   580,   581,   582,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,   622,
     623,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,   622,   623,    -1,    -1,    -1,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,   650,    -1,    -1,
      -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,    -1,
      -1,   650
};

  /* YYSTOS[STATE-NUM] -- The (internal number of the) accessing
     symbol of state STATE-NUM.  */
static const yytype_uint16 yystos[] =
{
       0,    14,    17,    32,    36,    50,    51,    58,    63,    64,
      79,    99,   121,   131,   132,   143,   144,   156,   170,   190,
     208,   210,   215,   218,   233,   241,   244,   264,   281,   285,
     382,   415,   426,   448,   451,   453,   456,   466,   467,   476,
     478,   487,   493,   501,   506,   507,   508,   539,   546,   566,
     590,   602,   606,   614,   620,   637,   645,   661,   662,   663,
     664,   676,   713,   758,   770,   771,   774,   775,   776,   777,
     778,   780,   785,   787,   812,   813,   814,   815,   817,   820,
     842,   864,   871,   872,  1104,  1105,  1107,  1109,  1111,  1114,
    1116,  1117,  1118,  1119,  1120,  1122,  1123,  1157,  1158,  1159,
    1162,  1176,  1178,  1182,  1185,  1186,  1190,  1192,  1197,  1201,
    1207,  1208,  1209,  1210,  1211,  1212,  1213,  1218,  1219,  1341,
    1374,  1375,  1376,  1377,  1378,  1379,  1380,  1381,  1382,  1383,
    1384,  1385,  1386,  1387,  1388,  1389,  1390,  1398,  1399,  1420,
    1421,  1425,  1429,  1435,  1451,  1452,  1454,  1457,  1466,  1475,
    1479,  1481,  1482,  1547,  1549,  1551,  1573,  1579,  1581,  1582,
    1583,  1585,  1589,  1591,  1617,  1623,  1624,  1625,  1626,  1662,
    1669,  1670,  1672,  1673,    12,   108,   127,   200,   243,   286,
     420,   499,   564,   566,   600,   612,   708,  1636,  1637,  1638,
    1641,   282,   371,  1191,  1618,   572,  1522,   235,     5,     6,
       8,     9,    10,    11,    12,    15,    20,    23,    25,    26,
      27,    28,    29,    30,    32,    36,    40,    43,    44,    45,
      47,    49,    50,    53,    56,    57,    59,    60,    61,    63,
      65,    66,    67,    68,    69,    70,    72,    73,    75,    76,
      77,    78,    79,    80,    81,    82,    83,    84,    85,    87,
      88,    90,    91,    92,    93,    94,    98,   103,   106,   110,
     111,   112,   115,   120,   121,   126,   127,   129,   135,   136,
     137,   138,   139,   143,   146,   147,   148,   152,   154,   155,
     157,   158,   159,   162,   163,   165,   166,   167,   168,   169,
     170,   173,   174,   175,   176,   177,   180,   181,   183,   184,
     185,   186,   187,   190,   191,   195,   196,   198,   202,   204,
     205,   206,   207,   209,   211,   215,   216,   218,   221,   222,
     226,   227,   228,   229,   232,   233,   234,   237,   242,   243,
     244,   248,   252,   253,   255,   256,   260,   262,   265,   266,
     269,   272,   273,   279,   280,   282,   284,   286,   287,   295,
     297,   298,   299,   300,   301,   302,   303,   304,   305,   306,
     307,   308,   309,   310,   311,   312,   313,   314,   316,   317,
     318,   320,   321,   322,   323,   325,   326,   331,   332,   333,
     334,   335,   336,   339,   340,   342,   344,   346,   347,   348,
     349,   350,   351,   352,   353,   354,   357,   358,   361,   362,
     363,   364,   365,   369,   370,   374,   376,   377,   379,   380,
     381,   384,   394,   395,   396,   398,   400,   402,   403,   404,
     405,   406,   407,   408,   409,   410,   411,   413,   415,   416,
     417,   419,   421,   422,   423,   424,   425,   427,   428,   429,
     432,   436,   437,   439,   440,   443,   444,   445,   446,   447,
     449,   450,   452,   453,   454,   457,   458,   459,   460,   461,
     462,   463,   464,   466,   468,   469,   471,   472,   473,   475,
     478,   479,   480,   481,   483,   485,   486,   487,   488,   489,
     491,   492,   496,   497,   498,   499,   503,   507,   509,   510,
     511,   512,   514,   515,   516,   517,   518,   524,   525,   526,
     528,   531,   534,   536,   538,   539,   540,   541,   542,   543,
     546,   547,   550,   551,   552,   553,   554,   555,   558,   559,
     560,   561,   563,   564,   567,   568,   569,   570,   573,   574,
     576,   577,   578,   579,   585,   586,   590,   591,   592,   595,
     596,   598,   599,   601,   602,   605,   608,   610,   612,   613,
     619,   621,   624,   628,   630,   631,   632,   633,   640,   641,
     642,   644,   645,   646,   647,   650,   653,   654,   655,   656,
     657,   659,   668,   669,   670,   672,   673,   674,   676,   679,
     681,   688,   689,   692,   694,   696,   697,   701,   702,   703,
     704,   705,   706,   707,   708,   710,   711,   712,   713,   714,
     715,   716,   717,   718,   719,   721,   722,   723,   724,   725,
     726,   727,   728,   729,   730,   731,   732,   733,   734,   735,
     736,   737,   738,   739,   740,   741,   742,   743,   836,  1519,
    1528,  1538,  1539,  1540,  1542,  1543,  1546,   316,   457,   563,
     566,  1575,  1575,   641,  1619,   108,   199,   286,   390,   499,
     519,   564,   569,   600,   604,   612,   654,   708,  1081,  1394,
    1633,  1637,  1638,  1639,  1640,  1641,     8,    23,    29,    35,
      37,    38,    39,    41,    54,    55,    61,    62,    69,    72,
      96,    97,   102,   104,   107,   108,   113,   114,   115,   120,
     122,   125,   171,   178,   179,   188,   195,   205,   207,   213,
     219,   226,   230,   241,   245,   271,   279,   290,   319,   324,
     335,   339,   341,   345,   346,   347,   348,   349,   356,   366,
     367,   368,   372,   373,   397,   409,   410,   412,   427,   455,
     456,   475,   477,   484,   485,   491,   544,   545,   552,   556,
     557,   562,   572,   576,   577,   578,   579,   588,   589,   590,
     594,   597,   612,   616,   617,   618,   620,   625,   627,   632,
     633,   650,   665,   666,   671,   677,   678,   680,   683,   684,
     685,   686,   687,   691,   693,   695,   750,   751,   752,   756,
     758,   762,   766,   767,  1054,  1211,  1229,  1230,  1233,  1234,
    1235,  1237,  1241,  1244,  1246,  1247,  1248,  1249,  1250,  1257,
    1258,  1259,  1280,  1281,  1503,  1505,  1507,  1508,  1509,  1511,
    1514,  1516,  1519,  1528,  1628,  1630,   108,   167,   200,   235,
     286,   420,   499,   519,   564,   587,   600,   612,   628,   654,
     708,  1394,  1528,  1191,   103,   536,   873,    13,    14,    99,
     130,   144,   167,   170,   183,   210,   235,   241,   274,   285,
     421,   425,   441,   449,   457,   493,   506,   507,   558,   587,
     609,   611,  1519,  1522,  1529,  1533,  1540,  1543,  1544,  1546,
    1595,  1596,  1517,  1528,   786,   566,   128,   220,   293,  1400,
     407,   659,    87,   428,  1480,   111,   235,   647,  1483,   243,
    1575,  1191,  1528,  1476,   487,   612,  1575,  1191,   128,   293,
    1401,  1424,   653,  1467,   522,   861,   865,   866,  1528,    13,
     425,  1595,  1619,  1528,    13,   140,   220,   527,   528,   530,
     531,   532,   549,  1220,  1221,  1222,  1631,    61,    62,   125,
     209,   282,   352,   404,   498,   585,   653,   654,   672,   708,
     762,  1056,  1519,  1531,  1539,  1540,  1542,  1543,  1545,  1548,
    1558,  1563,  1564,  1436,   865,   204,   511,   585,   204,   511,
    1517,  1528,   566,  1430,   407,   659,   243,  1580,  1528,   484,
    1410,  1414,   660,  1342,  1343,  1528,    32,    79,   154,   415,
     437,   478,   539,  1665,  1237,  1528,  1519,   401,   975,   758,
    1629,  1630,   243,   282,  1208,  1209,  1211,  1341,     0,   156,
     772,   415,   104,   274,   612,  1130,  1522,  1528,  1532,  1534,
    1535,  1607,  1609,   608,  1160,  1174,   194,   246,   285,  1223,
    1224,  1372,   388,   603,  1354,  1355,   276,   603,  1355,  1360,
    1210,  1211,   130,   609,    17,   195,  1455,  1517,   160,  1134,
    1528,   160,   836,   449,   480,  1584,   212,   836,  1532,  1528,
    1517,   564,   230,  1393,   212,   167,  1113,  1636,  1575,  1619,
    1198,  1199,  1517,   758,   843,   764,   583,   185,  1391,  1517,
    1391,    19,  1620,   230,  1004,   235,   212,   456,  1532,   235,
     717,  1528,   564,  1004,  1004,   212,   235,   566,  1632,  1632,
    1636,  1641,   758,   758,   758,  1244,   758,   758,   758,  1233,
    1293,   758,   758,   758,   758,   758,   758,   758,   758,  1232,
    1232,   758,  1042,   758,   758,   758,   572,   758,   758,   758,
    1629,   758,   758,   758,   758,   758,   758,   758,   758,   758,
    1233,   758,   758,   758,  1291,  1292,  1514,  1528,   758,   758,
     758,   758,   758,   758,   758,   758,   758,  1233,  1042,   758,
     758,   758,   758,   758,   758,   758,   758,   758,   758,   758,
     758,   758,   758,   758,   758,  1042,   572,   758,   758,   758,
     572,   758,   758,   758,    37,   219,   572,   758,  1232,  1042,
    1042,   758,   758,   758,   758,   758,   758,   758,   758,   758,
     758,   758,   758,   758,   758,   758,   758,   758,   758,   758,
     758,  1244,  1244,  1244,   620,  1209,  1211,  1233,   762,  1282,
    1532,  1528,   763,    18,    19,    21,   387,   390,   572,   648,
    1231,  1238,  1239,  1527,  1528,   160,   161,   201,   214,   254,
     267,   294,   359,  1242,    33,   141,   249,   275,   345,   366,
     367,   442,   504,   505,   517,   722,   748,   749,   750,   751,
     752,   753,   754,   755,  1240,  1244,    71,   389,   572,  1523,
     259,   652,   758,   764,  1393,  1393,  1393,  1528,   212,  1393,
    1393,   717,  1528,  1393,   564,  1393,  1393,  1393,   212,  1575,
     781,  1458,   135,   419,  1594,   481,   481,   564,   569,   612,
     628,   654,   654,   385,   758,  1610,   563,   378,  1610,    67,
     511,  1610,   109,   628,  1610,   762,  1610,   378,   583,   763,
     381,    68,   433,   764,  1532,   197,   231,  1153,  1528,  1522,
    1671,  1233,   246,    85,   293,  1485,   194,  1574,  1575,   197,
      35,   316,  1441,  1477,  1528,  1194,  1535,  1193,  1575,   246,
    1402,  1393,  1469,   316,   511,  1468,  1470,   621,   862,   501,
     867,  1594,   378,   197,   378,   583,  1620,  1229,  1222,   501,
     654,   764,    35,   125,   160,   502,  1057,  1411,  1532,   194,
     583,  1411,   255,   433,  1565,  1566,  1568,  1570,    13,   125,
     365,  1533,  1536,  1603,   212,   762,  1532,    35,   125,  1059,
    1060,  1532,   764,   125,   585,  1554,  1562,  1564,   763,  1555,
    1411,    36,    61,    72,    97,    99,   109,   158,   163,   166,
     176,   198,   200,   209,   211,   282,   316,   381,   408,   419,
     420,   423,   424,   444,   498,   511,   547,   566,   631,  1056,
    1437,  1441,  1442,  1444,  1445,  1446,  1559,   867,   447,   534,
    1171,  1172,  1173,   433,   637,  1163,  1164,  1165,  1171,  1517,
    1528,  1671,  1575,   758,   763,  1342,   763,   758,  1344,    37,
     219,  1504,  1523,  1664,  1664,  1664,    96,  1663,  1664,  1664,
     156,   764,   758,    48,   156,   156,   197,   111,   759,   759,
    1223,   759,   761,  1528,  1232,   758,   138,   228,   762,   125,
     138,   228,  1605,   465,   763,  1612,   300,   301,   445,   446,
     524,   525,   526,   810,  1175,   612,  1166,  1167,   503,   609,
    1225,   146,   392,   762,  1370,  1371,  1373,  1532,   249,  1224,
    1372,  1223,    48,    13,   140,  1627,  1359,  1360,   290,   373,
     594,  1361,  1362,  1505,  1528,  1627,  1359,  1354,  1355,  1360,
     231,   293,   429,  1427,  1428,  1424,   160,   194,  1207,  1398,
    1399,  1420,  1425,  1453,  1456,  1504,  1528,   333,   570,   596,
    1106,  1535,  1110,  1528,  1532,  1528,  1108,   384,     7,    26,
      84,   144,   237,   323,   370,   451,   630,   944,   945,   958,
     959,   960,   966,   968,   969,  1442,     7,    12,    14,    17,
      27,    28,    58,    63,    64,    69,    77,    83,    84,    87,
      96,   111,   125,   129,   137,   138,   144,   152,   158,   169,
     192,   233,   235,   242,   262,   285,   322,   340,   344,   382,
     388,   395,   404,   436,   451,   452,   453,   483,   540,   541,
     542,   547,   564,   567,   590,   603,   637,   640,   725,   726,
     727,  1005,  1008,  1010,  1011,  1063,  1135,  1136,  1138,  1139,
    1141,  1143,  1144,  1145,  1146,  1148,  1150,  1528,   171,  1528,
     836,   533,  1642,  1643,  1112,  1391,   249,   763,   235,   263,
     401,  1078,  1204,  1205,  1233,  1289,  1290,  1528,   788,   789,
     176,   429,   763,  1177,    59,   176,   180,   194,   331,   429,
    1187,  1188,  1189,    57,   369,   369,   448,  1621,  1240,  1528,
    1528,  1528,   519,   193,  1528,   709,     7,   938,  1528,  1535,
    1606,  1608,  1603,  1528,  1528,  1004,    11,   167,   200,   420,
     587,   823,  1635,  1643,  1649,  1651,  1652,  1657,   200,   823,
    1634,  1643,  1649,  1652,  1657,  1632,  1233,  1233,    13,   140,
    1287,  1337,  1287,  1287,  1287,   634,  1295,  1233,  1233,  1290,
    1290,  1233,  1233,   140,  1287,  1337,   759,   373,   759,   759,
    1233,  1233,  1233,  1233,  1514,   116,   117,   118,   119,   120,
     223,   224,   225,   226,   335,   337,   338,   339,   346,   427,
     490,   491,   632,   649,   650,  1332,  1333,  1233,  1289,   112,
     115,   576,   579,  1334,   140,  1283,  1233,  1233,  1233,  1233,
    1332,  1233,  1290,  1292,    10,   763,   764,   140,  1287,  1233,
    1233,   140,  1287,  1233,  1233,  1290,  1290,  1290,  1233,  1290,
    1237,  1233,  1233,  1233,  1233,  1233,  1233,   759,  1233,  1287,
    1287,  1233,  1233,   140,  1287,  1233,  1333,  1333,  1233,    46,
     268,   584,  1233,  1233,   759,  1515,  1516,  1528,  1287,  1287,
    1233,  1233,  1233,  1287,  1287,  1290,   759,   759,  1233,  1233,
    1233,  1233,  1233,  1244,   759,   759,   759,  1223,   759,   763,
     209,   282,   498,  1560,   502,  1233,  1230,  1527,  1528,  1233,
    1233,  1233,   179,   372,   589,   605,  1240,    13,    20,  1235,
    1243,  1237,  1237,   758,  1629,  1244,  1237,  1237,  1237,  1237,
     275,   667,  1236,  1237,  1237,   245,  1237,   245,  1237,  1237,
    1237,  1237,  1237,    33,   249,   275,   442,  1532,  1244,  1523,
    1523,  1233,  1254,  1255,  1256,   752,  1528,  1528,   836,  1528,
     378,  1528,   836,  1532,   709,   966,   968,  1395,  1396,  1397,
     836,  1528,  1535,  1602,  1391,  1603,  1528,  1393,   615,   782,
      35,   158,   162,   202,   222,   287,   383,   419,   443,   468,
     512,   543,  1459,  1463,  1464,  1575,    86,   762,   874,   875,
     876,   877,  1528,  1592,   563,  1528,  1611,  1535,  1532,   200,
     420,   566,  1593,  1602,  1596,    21,  1335,  1336,   186,   363,
    1528,  1586,  1528,  1671,  1402,   516,   763,    50,   282,  1484,
      30,  1517,  1576,  1577,  1391,   762,   779,  1522,   287,   763,
     583,  1195,  1196,  1517,  1391,  1517,  1528,  1472,  1471,   763,
    1523,    56,    66,    76,    90,    91,    92,   106,   334,   351,
     489,   551,   568,   868,   870,   763,  1590,  1535,  1602,  1593,
     487,  1622,  1621,   197,  1214,  1215,  1372,    13,   365,  1603,
    1528,    71,  1062,  1233,  1535,   733,   572,  1525,   273,   380,
     643,   763,  1569,   763,  1567,   658,  1550,   762,   763,  1528,
     209,   282,   498,   653,   672,  1561,  1411,  1528,  1565,  1555,
    1411,  1556,  1557,  1558,  1563,    13,    35,   125,   378,   484,
     709,  1233,  1572,   166,   275,   635,  1339,  1450,   758,   108,
     167,   200,   420,   566,   587,   612,   628,  1450,    13,  1532,
    1359,   197,   249,  1443,  1447,   198,    70,   543,   194,   543,
     563,    70,   543,    13,    43,    94,    98,   253,   332,   396,
     518,   560,  1431,  1432,  1433,   166,   222,   543,   543,  1359,
    1450,   287,   157,   422,   586,   234,   235,   261,  1080,    73,
     563,   543,   624,   763,   380,   643,    88,   763,   194,   811,
     125,  1233,  1415,  1416,  1417,  1414,  1343,  1345,  1528,    21,
     763,   379,  1667,   559,  1668,   646,   258,   471,  1666,  1528,
    1233,   277,   280,   430,   976,   977,  1535,   136,   759,   156,
     773,   759,   729,    48,  1532,   654,   729,    48,   637,    65,
     256,   365,   535,   553,   644,  1599,  1600,  1535,  1607,   637,
    1127,   160,   160,   160,   160,   160,   160,   763,   160,  1161,
     404,  1168,   667,   668,   670,  1226,  1227,  1228,   572,  1524,
    1524,  1532,   763,   503,  1233,  1356,  1512,  1211,  1212,   377,
     763,  1211,  1212,  1359,  1359,   197,  1392,  1518,  1528,  1427,
    1153,  1532,    87,  1002,  1003,  1010,  1011,  1012,  1063,   837,
     369,   316,     7,   837,   758,   110,   955,  1411,  1412,  1412,
     955,  1412,  1412,   583,   763,  1007,   158,    74,    89,   199,
     401,   519,  1020,  1022,  1078,  1152,  1412,    64,    89,   235,
    1152,   401,  1412,  1412,  1152,  1412,   401,   401,  1412,  1412,
    1412,  1412,   583,   136,  1412,   261,   401,   564,    64,    89,
     193,   401,   418,  1078,  1152,   261,  1412,   401,   401,   564,
     136,  1412,  1412,  1412,  1412,  1412,  1152,   401,    48,  1412,
    1412,   401,    21,    74,   160,   583,  1078,  1156,   401,   401,
    1412,  1412,  1412,  1412,   139,   332,  1412,  1412,   401,  1412,
     619,   619,  1412,  1008,    71,  1056,   450,   975,  1137,   763,
     763,   501,   710,  1677,  1115,   492,   628,  1643,   144,   609,
    1184,   125,  1200,  1528,  1199,  1517,   758,   758,  1205,   759,
     763,   232,   295,   296,   297,   298,   299,   302,   303,   304,
     306,   307,   308,   309,   310,   311,   312,   313,   314,   315,
     317,   318,   711,   712,   732,   734,   735,   736,   737,   738,
     741,   803,   804,   810,   458,   459,   460,   461,   462,   463,
     464,   790,   791,  1517,   610,  1188,    57,   448,   171,   816,
     378,     7,   717,   111,   378,  1004,   955,   614,   939,     7,
     228,   125,   763,   819,   592,   592,   615,  1093,  1094,  1517,
     200,  1004,   836,  1528,   836,   836,  1643,   763,   759,  1287,
     759,  1233,   759,   759,   759,  1233,   150,   634,  1294,    21,
     759,   615,   759,   759,   759,   615,   763,  1290,   759,   752,
     759,   763,   763,   759,   759,   759,   197,   763,   759,   763,
    1290,   759,   763,   763,   763,   751,   763,   759,   759,   758,
    1514,  1528,  1287,   759,   759,   759,  1287,   759,   763,   759,
     759,   759,   759,   763,   759,   249,   759,   763,   763,   759,
     763,   763,   759,   759,   759,   763,   197,   763,  1287,   759,
     759,   763,   763,   763,   759,   197,  1233,   197,  1233,   197,
    1233,   197,   759,   763,   759,   759,   759,   759,   763,    21,
     759,   763,   759,   763,   759,   759,   690,  1265,  1265,   759,
     763,  1260,   759,  1260,   763,   759,  1265,  1265,  1265,  1290,
     764,   764,   764,  1532,  1233,   768,   179,   372,   589,   605,
    1629,    19,  1233,   165,  1237,   758,  1233,  1233,  1237,   758,
    1629,  1244,  1237,  1231,   759,   763,   758,   764,   764,  1517,
    1395,  1393,  1007,   946,   947,   948,   966,   763,    52,   470,
    1154,   192,  1683,  1391,   762,   783,   784,   287,   287,   287,
     287,   287,   287,   763,  1391,  1465,   115,   576,   579,   869,
     879,  1281,  1507,  1514,  1532,   763,   160,   378,   759,   763,
     583,   752,  1528,  1537,  1601,   637,  1597,  1528,   160,   186,
     201,   214,   266,   267,   294,   363,   417,  1587,  1588,  1338,
    1339,  1517,  1522,  1522,  1202,  1203,  1517,   236,  1336,   763,
    1532,    31,   583,  1478,  1535,  1535,   763,   583,   176,   429,
     613,  1179,  1180,  1181,   401,  1304,  1305,   583,  1474,    13,
    1473,  1470,   763,   160,   210,   378,   197,  1601,  1528,   145,
     700,   720,   758,   767,  1216,  1217,  1296,  1298,  1306,  1307,
    1308,  1309,  1310,  1311,  1312,  1517,  1629,  1338,  1214,   583,
     583,   583,    35,  1061,  1532,   583,  1411,   456,  1121,  1121,
     433,   454,   496,  1571,  1568,  1566,  1603,  1532,  1536,   194,
     764,   764,   764,   764,   764,  1564,  1233,  1572,   763,  1562,
     249,  1448,  1523,  1233,   752,  1004,   836,   836,   836,  1517,
     836,  1535,  1517,   287,   350,   543,  1440,  1440,  1450,  1528,
     836,  1450,  1535,  1443,   836,  1450,   252,   561,   181,   194,
    1434,   763,  1448,   811,  1443,  1443,  1447,  1447,  1443,  1450,
    1450,  1173,   514,  1165,    60,   759,   763,   759,   763,  1629,
    1504,   405,   194,   764,   759,    73,   758,    73,   758,   402,
     979,   216,   263,   765,  1412,   404,   572,   733,    13,   365,
    1603,   404,   572,   733,  1525,  1532,   572,   572,   572,    19,
    1598,   320,   321,   325,   326,  1128,  1129,     5,   404,   739,
     740,  1124,  1125,  1126,  1520,  1522,   122,   188,   290,   373,
     594,  1366,  1520,   122,   188,   219,   290,   373,   594,  1364,
    1522,  1522,   810,  1522,   811,   160,   126,  1169,  1392,   669,
    1227,  1056,  1058,  1371,   342,    22,   131,  1357,  1358,   763,
    1362,  1362,  1392,  1517,  1528,   197,   763,   764,  1426,  1217,
     122,   188,   219,   290,   373,   594,  1365,  1368,  1369,  1003,
      84,    77,    93,   265,   343,   369,   431,   533,   839,   841,
     478,   263,   598,   957,   108,   221,   394,   404,   411,   515,
     612,   821,   822,  1522,   943,   944,   219,   290,   373,   594,
     970,  1367,  1368,  1519,  1522,   943,   970,   970,  1528,   945,
    1412,  1101,  1528,  1078,  1079,  1191,  1079,    64,   193,   418,
     604,  1021,  1077,  1092,  1101,  1528,   758,  1528,   125,  1149,
    1528,  1528,  1528,  1528,  1528,  1191,  1366,  1364,  1528,  1364,
      13,  1142,  1331,  1528,  1191,  1522,  1522,  1522,  1522,  1056,
    1412,  1364,  1142,  1528,  1528,   263,  1331,   263,  1528,  1528,
    1532,  1528,  1142,  1412,   186,   266,   369,  1014,  1364,   125,
    1151,  1528,  1366,  1366,  1528,  1191,  1352,  1353,  1515,   125,
    1009,  1364,  1522,  1191,  1528,  1528,  1517,  1191,  1191,    80,
      82,   125,   148,   187,   440,  1013,  1009,  1009,   125,  1364,
    1528,  1364,  1142,   758,   372,  1532,  1412,  1412,   403,     7,
     144,  1005,  1145,  1146,  1139,  1143,  1146,   718,   719,   956,
    1412,   707,  1681,   378,   831,  1131,   127,   248,  1517,   673,
     673,  1142,   418,  1327,  1328,  1329,  1528,   249,  1233,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   160,
     160,   160,   160,   160,   160,   160,   160,   160,   160,   763,
     811,   160,   160,   160,   160,   160,   160,   160,   763,   811,
    1001,  1002,  1517,   957,   709,   642,  1517,  1367,   286,    77,
     177,   184,   364,   940,   941,   942,   958,   959,   960,   961,
     964,   965,   966,   967,   968,   969,   955,    48,   637,   654,
    1606,  1612,  1412,    47,   216,   486,  1096,  1096,   378,    21,
     231,   275,   456,   758,   971,   972,   973,   974,   975,  1006,
    1008,  1209,  1211,  1407,  1487,  1528,   836,   758,   473,  1658,
       9,    31,   936,   245,  1233,   759,  1264,  1265,  1264,  1264,
    1264,   575,  1233,  1233,   154,    35,    62,   112,   115,   123,
     142,   189,   260,   354,   357,   435,   509,   579,   607,  1031,
    1035,  1288,  1057,  1057,  1288,   759,  1264,   759,   245,   245,
    1233,  1233,  1233,   388,  1285,  1233,  1233,  1233,  1233,  1233,
    1237,   759,  1264,   759,  1264,  1233,  1233,  1233,  1233,  1233,
    1233,  1290,  1264,  1264,   245,  1233,  1233,  1233,   759,  1264,
    1233,  1233,  1233,  1233,   197,  1233,   197,  1233,   197,  1233,
    1233,  1264,  1264,  1233,    35,    62,  1364,  1287,  1264,   758,
    1266,  1267,  1268,  1528,   231,   694,  1262,  1505,  1508,   759,
    1262,   759,  1244,  1265,   759,   764,  1102,  1235,   759,   763,
    1244,  1244,  1332,  1332,    19,  1233,   165,  1256,  1289,   752,
    1528,  1528,  1147,  1148,  1150,  1367,  1397,  1007,  1535,  1154,
    1532,   763,   811,  1464,  1460,   877,   880,   881,   876,   374,
     485,   878,  1593,  1528,  1602,   764,   764,   583,   655,  1338,
     758,  1359,  1304,   763,  1204,  1205,  1524,   293,   433,   643,
    1578,  1577,  1233,  1522,   583,  1196,  1517,  1181,   758,   501,
     620,   621,   758,  1403,  1404,  1406,  1407,  1408,  1367,   811,
     870,   869,   385,  1593,  1602,   197,   758,  1629,  1217,  1298,
    1307,  1308,  1309,  1310,   731,   763,   100,   238,   258,   271,
     355,   477,   549,  1299,  1300,  1301,  1304,  1336,   212,  1349,
    1338,  1603,  1603,  1603,   733,  1525,  1525,   728,  1604,  1604,
      78,   595,   433,  1365,  1552,  1553,  1411,  1557,  1522,   197,
    1449,   759,  1528,   615,  1450,   428,  1359,  1433,  1449,  1450,
    1450,  1517,  1517,  1450,  1520,  1417,  1528,   763,   336,   156,
     758,  1237,   758,  1237,  1365,   555,   980,   758,    12,   978,
    1364,  1524,  1121,   404,   456,   404,  1604,    21,    48,  1599,
    1364,  1364,  1364,  1364,  1129,   285,   606,   174,   465,   704,
     705,   697,  1365,  1365,  1126,  1522,   160,   406,  1170,  1057,
      73,  1488,  1512,   615,  1336,   764,  1217,  1518,   752,  1528,
     501,  1412,  1522,   533,   533,   533,   533,   533,   492,   378,
    1522,   952,   953,   954,   958,   966,   968,  1522,  1522,  1522,
    1522,  1364,  1522,  1522,   759,   763,  1532,  1101,   402,   758,
    1101,   758,   263,   263,  1079,   367,  1023,  1024,  1025,  1092,
     758,   615,   592,  1016,  1017,  1018,  1020,  1528,    34,    35,
      40,    42,    44,    45,    62,   112,   115,   123,   159,   187,
     189,   205,   206,   247,   260,   279,   288,   289,   291,   328,
     329,   330,   347,   348,   349,   354,   357,   375,   376,   409,
     410,   497,   501,   513,   573,   576,   579,   580,   581,   582,
     622,   623,   650,  1026,  1029,  1030,  1031,  1032,  1033,  1034,
    1035,  1037,  1025,  1025,   656,   657,  1095,   144,   501,  1142,
    1528,  1187,   763,  1365,   125,  1057,  1522,   564,  1528,  1154,
     637,   564,  1522,  1026,  1142,   763,  1357,  1142,   583,   583,
    1331,  1142,  1465,  1061,  1057,   946,   373,  1678,  1679,  1412,
     137,   152,  1682,    81,   488,   451,  1132,  1344,   378,   378,
     759,   759,   763,  1200,   758,  1364,  1520,  1364,  1364,  1520,
    1520,  1364,  1364,  1520,  1520,  1520,  1520,  1520,  1520,  1520,
    1520,  1364,  1364,  1520,  1508,  1520,  1364,  1520,  1522,  1364,
     372,   807,  1534,   372,   809,  1520,  1364,   378,   742,   743,
     808,   804,   758,   792,   792,   758,   797,   797,   758,   800,
     800,   758,   795,   791,   758,   439,   599,   949,   950,   951,
     958,   962,   963,   964,   965,   966,   968,  1367,  1532,   758,
     818,   212,  1412,  1412,  1412,  1412,  1007,   946,   733,  1525,
    1532,  1603,  1127,   612,   709,  1676,  1517,  1407,  1517,   275,
    1016,   973,   972,  1007,  1223,   974,   473,   824,  1653,   123,
     247,   435,   550,  1015,   758,   130,   241,   609,   937,  1233,
     759,  1264,  1233,   575,   758,  1046,  1047,  1047,   758,  1041,
     758,  1039,  1040,  1046,   414,  1036,  1038,  1046,    62,   247,
    1041,   247,  1047,   721,  1245,   759,   759,   759,  1264,  1264,
    1233,  1233,   759,   759,   763,   759,    48,   495,  1284,   763,
     763,   759,   763,   759,   249,  1251,  1252,  1264,  1264,   759,
     759,   759,   759,   763,   759,   759,  1233,   759,   194,   759,
     759,   763,  1264,   759,   763,   763,   759,  1233,   759,  1233,
     759,  1233,   759,   759,   759,   758,  1068,  1068,   763,   759,
    1267,  1269,  1270,   688,   688,  1265,   763,  1261,  1261,  1262,
    1265,  1262,   759,  1528,  1290,   759,  1235,   759,   763,  1244,
     759,  1150,  1148,   948,   784,   194,   637,  1461,   160,   763,
    1601,   637,  1614,   752,   752,  1528,  1602,   385,  1359,  1416,
     501,  1403,  1404,  1203,  1517,  1205,   231,  1206,  1486,  1487,
     643,   282,  1535,  1330,  1331,  1422,  1423,  1515,   759,  1405,
    1510,  1511,  1515,  1528,   758,  1409,  1413,   160,   197,  1601,
    1602,  1233,  1336,   763,   759,   759,   759,   759,   759,  1296,
    1297,  1298,  1306,  1296,   258,   258,   391,  1303,   238,   271,
     477,  1302,  1303,  1306,  1296,  1296,  1336,  1344,    48,   217,
    1340,  1349,  1121,  1121,   103,  1007,  1572,  1366,  1438,   163,
     631,  1602,   373,  1439,  1443,  1443,  1364,   982,  1528,   759,
     982,   759,    48,   758,   984,  1237,   160,   758,   228,  1604,
    1121,  1525,   456,  1604,   219,  1522,  1526,   733,  1525,   125,
     245,   361,   103,   125,  1365,   245,  1522,   160,   153,   164,
     386,   571,  1489,  1490,   278,  1491,  1217,  1304,  1528,  1338,
     764,  1426,  1422,  1522,   111,   111,   127,   248,   162,  1007,
     822,   758,  1365,   401,   985,   986,   758,  1233,  1101,   730,
     758,   758,  1098,  1099,  1100,  1528,  1096,  1096,   759,   763,
    1026,  1046,  1046,  1047,    23,    35,    49,   601,   626,  1046,
    1056,  1064,  1065,  1066,  1041,   758,  1066,    62,   622,  1032,
    1066,  1066,    62,   623,   623,   626,   758,  1047,  1041,  1041,
    1066,  1046,  1047,   441,  1019,  1071,    27,    71,    75,    77,
     125,   367,   372,   378,   418,   497,   547,   604,   706,  1022,
    1025,  1049,  1050,  1051,  1062,  1070,  1240,    35,  1046,  1067,
    1046,  1046,  1047,   758,  1040,  1048,  1039,   125,   125,  1026,
    1528,  1062,  1062,   566,     9,   186,  1155,  1353,  1528,  1528,
     246,  1179,   759,   750,  1007,   373,   750,  1680,  1683,   367,
     416,    25,   168,   825,   583,   137,   152,   827,  1644,  1331,
    1331,  1328,   805,   806,  1364,   759,   793,   794,  1528,   759,
     798,   799,  1528,  1537,   759,   801,   802,  1520,  1521,   758,
     759,   796,  1099,  1412,  1412,  1007,   818,   384,  1099,   353,
     714,   715,   716,  1528,  1522,   970,   970,  1365,   942,   404,
      21,    48,  1124,  1677,   758,  1517,   759,  1008,  1015,   378,
     844,   845,   846,  1528,   516,  1659,   378,  1332,  1233,   122,
     290,   373,   594,  1066,   373,   373,   759,  1332,  1332,  1233,
    1286,  1512,  1504,   759,  1233,  1233,  1290,    44,   355,   759,
     637,  1253,  1233,  1332,  1233,  1233,  1233,  1233,   759,   759,
     759,  1365,   759,   759,  1364,  1264,   759,   401,  1271,  1233,
    1265,  1265,   197,  1263,   759,  1290,  1462,   433,    56,    66,
      76,    90,    91,    92,   106,   334,   351,   472,   489,   551,
     568,   882,   881,   583,   210,   637,  1613,   759,  1422,    21,
    1418,   378,  1419,  1206,   269,   246,   759,   763,  1411,  1406,
    1407,   759,   763,   764,  1415,   763,   869,  1602,   197,   763,
    1344,  1296,   768,   258,  1303,  1303,   258,   258,   378,   615,
     378,   615,   192,   231,   614,  1322,  1323,  1324,  1325,  1326,
    1233,  1350,  1513,  1233,   698,  1346,  1340,  1604,  1604,   404,
    1365,  1359,  1359,  1338,  1450,   759,   763,   759,   977,   985,
     759,  1365,   981,   982,    48,  1604,  1604,  1525,  1604,   404,
     456,  1604,  1365,   125,   723,   125,  1365,  1522,    48,    48,
     153,    48,  1490,   537,   571,  1492,  1493,  1338,  1338,  1338,
     954,  1099,  1528,   759,   763,  1099,   759,   758,  1099,  1233,
     759,   763,   758,  1357,  1017,  1019,    35,    23,   601,  1056,
      35,  1066,  1057,  1103,  1504,  1066,   626,  1103,  1066,   509,
     607,   651,  1043,  1044,  1045,  1517,  1155,  1061,   125,   148,
     187,  1052,  1522,   115,   576,   579,   750,   751,   758,  1054,
    1055,  1506,  1507,   609,   125,   125,   139,   332,  1053,   263,
    1367,  1021,    71,  1051,   203,  1027,   263,   372,   724,  1067,
    1066,  1067,  1043,   373,  1043,  1043,   758,  1506,  1155,  1517,
    1528,   758,   373,  1679,   373,   416,  1233,  1233,   378,   831,
     836,   378,    77,   832,    21,   637,  1183,   759,   763,   759,
     763,   759,   763,   764,   759,   763,   794,   759,   763,   759,
     970,   970,   951,   758,   759,  1520,  1520,  1520,  1520,  1526,
     733,  1525,  1681,  1099,   759,   971,   516,   488,   759,   763,
    1029,  1522,   239,   249,   393,   847,   848,   849,   850,  1517,
     759,   759,   759,   759,   759,   759,   763,   759,   759,   759,
     763,  1264,   759,   763,   759,   342,   265,   428,   759,   759,
     759,   759,   759,   759,  1069,   763,    48,   388,  1272,   186,
     266,  1262,   759,   175,   285,  1602,   385,   210,    21,  1616,
    1338,  1418,  1528,  1419,   147,   566,  1423,  1417,  1406,  1407,
    1510,  1528,   759,  1413,  1602,   597,  1503,   759,   258,   258,
    1233,   758,  1233,   758,  1078,  1078,  1323,   639,   763,  1351,
    1267,  1347,  1348,  1346,   811,  1528,   216,   263,   759,   759,
    1522,  1604,  1604,  1525,   120,   120,  1504,  1504,    48,  1504,
      48,    48,  1493,  1354,  1354,   759,   620,   987,   986,   759,
    1097,  1098,   759,   759,    77,   262,  1088,  1089,  1090,  1091,
    1094,  1095,  1100,   373,  1057,  1067,   759,   763,   759,  1045,
     758,  1072,  1508,  1508,  1233,  1054,   621,  1061,    15,    21,
    1233,  1140,  1141,   985,  1332,   511,  1522,   143,  1133,  1407,
    1645,   373,   806,   794,   799,  1528,   802,   763,   758,   637,
    1082,  1083,  1084,  1091,   821,  1085,  1086,  1087,  1091,   228,
     404,  1682,   759,  1522,   825,  1654,   846,  1062,   759,   763,
    1528,   194,   373,  1512,  1233,   342,   173,   759,  1364,  1350,
      48,   430,   482,   682,  1273,  1279,  1265,  1613,   385,  1535,
    1359,  1419,  1344,   263,  1517,    73,  1313,  1330,  1330,   194,
    1321,  1321,  1513,    21,   763,   758,   978,   111,   465,  1674,
    1675,  1604,  1504,  1504,  1504,   276,  1363,  1363,  1082,   249,
     272,    77,   111,   235,   322,   340,   364,   564,   998,   999,
    1000,  1442,  1085,   759,   763,  1088,  1357,  1522,  1412,  1090,
     759,  1066,  1504,  1066,  1073,  1528,   319,  1074,   759,   758,
     759,   759,   826,   833,   834,   637,  1646,   674,   794,   794,
     398,  1147,  1084,   759,  1147,  1087,    48,  1088,   830,   831,
     473,  1660,   849,  1029,   149,   759,   759,   759,  1356,    33,
     103,   245,   697,  1274,  1275,  1276,  1505,  1508,  1616,   637,
    1615,   609,  1304,   758,   759,   759,   759,   212,   258,   388,
     758,   758,  1268,  1348,  1237,   758,   136,   369,   535,  1362,
     758,   989,   991,   574,  1412,   136,   136,  1412,  1412,  1412,
    1412,   758,   995,  1000,   158,  1071,  1098,  1364,  1357,   759,
     763,   198,   400,   510,   378,  1075,  1233,   538,   828,    54,
      68,   182,   230,   257,   270,   381,   474,   835,   886,   888,
     889,   890,   892,   893,   894,   895,   896,   897,   899,   907,
     908,   911,   922,   925,   927,   928,  1519,  1530,  1541,  1542,
    1543,  1546,    53,    64,   282,   759,   763,  1519,  1367,  1147,
     827,  1029,   838,  1062,   484,   245,   697,  1275,  1277,  1505,
    1508,   484,  1233,   692,   679,  1278,   692,   692,   654,  1422,
    1058,   701,  1314,  1315,  1528,  1336,    48,    48,  1327,  1329,
     759,   982,  1412,   535,   758,   990,   991,   992,   327,   988,
     991,  1522,  1412,  1412,  1367,  1367,  1365,  1528,   555,   996,
     997,  1412,  1528,   130,   609,   759,  1233,   155,   829,   909,
     912,  1528,   197,   363,   900,   887,  1530,  1530,  1528,   891,
     775,   292,   455,   636,   931,    32,   929,   765,    64,   385,
      64,   794,   832,  1062,   134,   839,   840,  1240,  1661,   191,
     413,  1647,  1648,  1233,   681,    19,   681,   681,  1332,   103,
     212,   369,   696,    13,   125,   365,  1603,   482,  1494,   703,
     759,   763,   194,  1029,   759,   759,   554,   983,   759,  1524,
     759,   763,   327,   993,   994,  1237,  1522,  1522,  1532,   759,
     763,  1532,    52,   369,   470,   501,  1076,  1076,   548,   629,
    1028,  1233,  1233,   634,   914,   918,   197,  1528,   902,   903,
    1233,   852,   885,   886,   888,   890,   892,   894,   895,   896,
     897,   899,   907,   922,   925,   927,   852,   932,   930,   923,
     926,   385,   385,   759,   143,  1655,   134,   885,  1532,  1650,
    1332,  1277,   692,   484,   689,  1550,   228,  1488,  1503,  1315,
     702,  1062,  1365,   983,  1675,   991,   759,   763,   998,   997,
       6,   125,   372,   378,   378,  1049,   910,   919,   150,   918,
     921,   246,   154,  1233,   154,   885,   761,   608,  1233,   853,
     931,   929,   833,   838,   885,   681,    48,  1491,  1313,   171,
    1316,   994,   609,   130,   634,   913,   915,  1233,   852,   154,
     898,   230,   904,   292,   761,   934,   933,   124,   851,   854,
     924,  1530,   924,  1656,  1504,   231,  1495,   703,  1076,  1076,
     916,   915,   921,   920,    54,   901,  1528,   575,  1233,   143,
      95,   172,   857,   883,  1528,   154,   885,   761,   885,   373,
     758,  1497,  1503,  1233,   154,   575,   763,   852,   935,   852,
     215,   763,  1029,    86,   105,   761,   278,   482,  1496,   759,
     762,  1498,  1499,  1515,   501,  1500,   125,   162,   372,  1317,
    1318,  1319,  1320,   917,    54,   852,  1528,   905,   154,   154,
     194,  1528,  1062,   194,   194,  1532,   759,   763,  1501,  1502,
    1515,  1503,  1319,  1320,  1318,  1320,   378,   575,   150,   151,
     906,   455,   636,   855,   125,   884,   860,   861,  1364,   856,
    1499,   763,  1411,   378,   378,   162,   699,   852,   852,   902,
     521,   523,   858,   859,   860,   863,  1240,  1528,  1233,  1207,
    1502,  1417,   763,   885,   196,   859
};

  /* YYR1[YYN] -- Symbol number of symbol that rule YYN derives.  */
static const yytype_uint16 yyr1[] =
{
       0,   769,   770,   770,   770,   770,   770,   771,   772,   771,
     771,   773,   773,   774,   774,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   775,   775,   775,   775,
     775,   775,   775,   775,   775,   775,   776,   777,   777,   778,
     779,   779,   781,   780,   782,   782,   783,   783,   784,   786,
     785,   788,   787,   789,   787,   790,   790,   791,   791,   791,
     791,   791,   791,   791,   792,   792,   793,   793,   794,   795,
     795,   796,   796,   797,   797,   798,   798,   799,   800,   800,
     801,   801,   802,   803,   803,   804,   804,   804,   804,   804,
     804,   804,   804,   804,   804,   804,   804,   804,   804,   804,
     804,   804,   804,   804,   804,   804,   804,   804,   804,   804,
     804,   804,   804,   804,   804,   804,   805,   805,   805,   806,
     807,   807,   808,   808,   808,   809,   809,   810,   810,   810,
     810,   811,   811,   812,   812,   812,   812,   813,   814,   816,
     815,   815,   815,   815,   815,   815,   815,   817,   817,   818,
     818,   818,   818,   818,   819,   819,   820,   820,   820,   821,
     821,   822,   822,   822,   822,   822,   822,   822,   824,   823,
     826,   825,   825,   827,   827,   827,   827,   828,   828,   829,
     829,   830,   830,   831,   831,   832,   832,   834,   833,   835,
     835,   835,   835,   835,   835,   835,   835,   835,   835,   835,
     835,   835,   836,   836,   837,   837,   838,   838,   839,   839,
     839,   839,   839,   839,   839,   840,   840,   840,   841,   841,
     842,   843,   843,   844,   844,   845,   845,   846,   847,   847,
     848,   848,   849,   850,   850,   850,   850,   851,   851,   852,
     852,   853,   853,   854,   854,   855,   854,   856,   854,   857,
     857,   858,   858,   859,   860,   860,   861,   862,   862,   863,
     863,   863,   863,   863,   864,   865,   865,   866,   866,   867,
     867,   868,   868,   869,   869,   869,   870,   870,   870,   870,
     870,   870,   870,   870,   870,   870,   870,   870,   871,   872,
     873,   873,   873,   874,   874,   875,   875,   876,   877,   877,
     878,   878,   879,   880,   880,   881,   882,   882,   882,   882,
     882,   882,   882,   882,   882,   882,   882,   882,   882,   883,
     883,   884,   884,   885,   885,   885,   885,   885,   885,   885,
     885,   885,   885,   885,   885,   885,   887,   886,   889,   888,
     891,   890,   893,   892,   894,   895,   896,   898,   897,   899,
     900,   900,   900,   901,   901,   903,   904,   905,   902,   906,
     906,   906,   907,   907,   909,   910,   908,   912,   911,   913,
     913,   914,   914,   916,   917,   915,   919,   920,   918,   921,
     921,   923,   922,   924,   924,   926,   925,   928,   927,   930,
     929,   931,   932,   933,   931,   934,   935,   931,   936,   936,
     937,   937,   937,   938,   938,   939,   939,   940,   940,   941,
     941,   942,   942,   942,   942,   942,   942,   942,   942,   942,
     942,   943,   943,   944,   944,   945,   945,   945,   945,   945,
     945,   946,   946,   947,   947,   948,   949,   949,   950,   950,
     951,   951,   951,   951,   951,   951,   951,   952,   952,   953,
     953,   954,   954,   954,   955,   956,   956,   957,   958,   959,
     960,   961,   962,   963,   964,   965,   966,   967,   968,   968,
     969,   970,   970,   971,   971,   972,   972,   973,   973,   973,
     974,   974,   975,   976,   976,   976,   976,   976,   976,   977,
     977,   978,   978,   979,   979,   980,   980,   980,   981,   981,
     982,   982,   983,   983,   984,   984,   985,   985,   986,   987,
     987,   987,   988,   988,   989,   989,   990,   990,   992,   991,
     993,   993,   994,   994,   995,   995,   996,   996,   997,   998,
     998,   999,   999,  1000,  1000,  1000,  1000,  1000,  1000,  1000,
    1000,  1001,  1001,  1002,  1002,  1003,  1003,  1003,  1004,  1004,
    1005,  1005,  1006,  1006,  1007,  1007,  1008,  1008,  1008,  1008,
    1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,
    1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,  1008,
    1008,  1008,  1008,  1008,  1008,  1008,  1008,  1009,  1009,  1010,
    1011,  1012,  1013,  1013,  1013,  1013,  1013,  1013,  1014,  1014,
    1014,  1015,  1015,  1015,  1015,  1016,  1016,  1017,  1017,  1018,
    1019,  1019,  1020,  1020,  1020,  1020,  1020,  1020,  1021,  1022,
    1022,  1023,  1023,  1024,  1024,  1025,  1026,  1026,  1027,  1027,
    1028,  1028,  1028,  1029,  1029,  1029,  1029,  1029,  1029,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,
    1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,  1029,
    1030,  1030,  1030,  1030,  1030,  1030,  1030,  1030,  1031,  1031,
    1032,  1032,  1033,  1033,  1033,  1033,  1033,  1034,  1034,  1034,
    1034,  1034,  1035,  1035,  1036,  1036,  1037,  1037,  1037,  1037,
    1038,  1038,  1039,  1039,  1039,  1040,  1041,  1041,  1042,  1042,
    1042,  1043,  1043,  1044,  1044,  1045,  1045,  1045,  1046,  1046,
    1046,  1046,  1047,  1047,  1048,  1048,  1049,  1049,  1050,  1050,
    1051,  1051,  1051,  1051,  1051,  1051,  1051,  1051,  1051,  1051,
    1051,  1051,  1051,  1051,  1051,  1051,  1051,  1051,  1052,  1052,
    1052,  1053,  1053,  1053,  1054,  1055,  1055,  1056,  1056,  1057,
    1057,  1058,  1058,  1059,  1059,  1060,  1060,  1061,  1061,  1062,
    1062,  1063,  1063,  1064,  1064,  1064,  1065,  1065,  1065,  1066,
    1066,  1066,  1066,  1066,  1066,  1066,  1067,  1067,  1069,  1068,
    1070,  1070,  1071,  1072,  1072,  1073,  1073,  1074,  1074,  1074,
    1074,  1075,  1075,  1075,  1075,  1075,  1076,  1076,  1076,  1076,
    1076,  1077,  1077,  1078,  1078,  1079,  1079,  1080,  1080,  1080,
    1081,  1081,  1082,  1082,  1083,  1083,  1084,  1084,  1085,  1085,
    1086,  1086,  1087,  1088,  1088,  1089,  1089,  1090,  1090,  1091,
    1091,  1091,  1092,  1092,  1092,  1093,  1093,  1094,  1094,  1095,
    1095,  1096,  1096,  1096,  1097,  1097,  1098,  1098,  1099,  1099,
    1100,  1100,  1101,  1101,  1102,  1102,  1103,  1103,  1104,  1104,
    1106,  1105,  1108,  1107,  1110,  1109,  1112,  1111,  1113,  1111,
    1115,  1114,  1116,  1117,  1117,  1117,  1117,  1118,  1119,  1120,
    1120,  1120,  1120,  1120,  1120,  1120,  1121,  1121,  1122,  1123,
    1124,  1124,  1125,  1125,  1126,  1126,  1126,  1126,  1126,  1126,
    1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,  1126,
    1127,  1127,  1128,  1128,  1129,  1129,  1129,  1129,  1130,  1131,
    1131,  1131,  1131,  1132,  1132,  1133,  1133,  1134,  1134,  1135,
    1135,  1136,  1136,  1137,  1137,  1138,  1138,  1138,  1138,  1139,
    1139,  1139,  1139,  1139,  1139,  1139,  1139,  1139,  1139,  1139,
    1139,  1139,  1139,  1139,  1139,  1139,  1139,  1139,  1139,  1140,
    1140,  1141,  1141,  1142,  1142,  1143,  1143,  1143,  1143,  1143,
    1144,  1144,  1145,  1145,  1145,  1145,  1145,  1145,  1145,  1145,
    1145,  1145,  1145,  1145,  1145,  1145,  1145,  1145,  1145,  1145,
    1145,  1145,  1145,  1145,  1145,  1145,  1145,  1145,  1146,  1146,
    1146,  1147,  1147,  1147,  1147,  1147,  1148,  1149,  1149,  1150,
    1151,  1151,  1152,  1152,  1153,  1153,  1154,  1154,  1154,  1155,
    1155,  1155,  1156,  1156,  1156,  1156,  1157,  1157,  1158,  1158,
    1159,  1161,  1160,  1162,  1163,  1163,  1164,  1164,  1165,  1165,
    1165,  1166,  1167,  1167,  1168,  1168,  1169,  1169,  1170,  1170,
    1171,  1171,  1172,  1172,  1173,  1173,  1174,  1174,  1175,  1175,
    1175,  1175,  1175,  1176,  1177,  1177,  1177,  1178,  1179,  1179,
    1180,  1180,  1181,  1181,  1181,  1182,  1183,  1183,  1184,  1184,
    1184,  1185,  1186,  1187,  1187,  1188,  1188,  1189,  1189,  1189,
    1189,  1189,  1189,  1190,  1191,  1191,  1191,  1193,  1192,  1192,
    1194,  1194,  1195,  1195,  1196,  1197,  1197,  1198,  1198,  1199,
    1200,  1200,  1201,  1201,  1202,  1202,  1203,  1204,  1205,  1205,
    1206,  1206,  1207,  1207,  1207,  1207,  1208,  1208,  1208,  1208,
    1209,  1209,  1209,  1209,  1209,  1209,  1209,  1210,  1210,  1210,
    1210,  1210,  1211,  1211,  1211,  1212,  1212,  1212,  1213,  1213,
    1214,  1214,  1215,  1216,  1216,  1217,  1217,  1218,  1219,  1220,
    1220,  1221,  1221,  1222,  1222,  1223,  1223,  1224,  1224,  1224,
    1225,  1225,  1226,  1227,  1227,  1228,  1228,  1229,  1229,  1229,
    1230,  1230,  1231,  1231,  1231,  1231,  1231,  1232,  1232,  1233,
    1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,  1233,
    1234,  1234,  1234,  1234,  1234,  1235,  1235,  1235,  1235,  1235,
    1235,  1235,  1235,  1235,  1235,  1235,  1235,  1235,  1235,  1235,
    1235,  1235,  1236,  1236,  1237,  1237,  1237,  1237,  1237,  1237,
    1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1237,  1238,
    1238,  1239,  1239,  1240,  1240,  1241,  1241,  1242,  1242,  1242,
    1242,  1242,  1242,  1242,  1243,  1243,  1244,  1244,  1244,  1244,
    1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,
    1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,
    1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1244,  1245,
    1245,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,
    1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,
    1246,  1246,  1246,  1246,  1246,  1246,  1246,  1246,  1247,  1247,
    1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,
    1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,  1247,
    1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,
    1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,  1248,
    1248,  1248,  1248,  1249,  1249,  1249,  1249,  1249,  1249,  1249,
    1250,  1250,  1251,  1251,  1252,  1252,  1253,  1253,  1254,  1254,
    1255,  1255,  1256,  1257,  1257,  1258,  1258,  1258,  1258,  1258,
    1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,  1258,
    1258,  1258,  1258,  1258,  1258,  1258,  1259,  1259,  1259,  1259,
    1259,  1259,  1259,  1259,  1259,  1259,  1259,  1260,  1260,  1260,
    1261,  1261,  1262,  1262,  1262,  1263,  1263,  1263,  1264,  1264,
    1265,  1266,  1266,  1267,  1268,  1269,  1270,  1270,  1271,  1271,
    1272,  1272,  1273,  1273,  1274,  1274,  1275,  1275,  1275,  1275,
    1275,  1276,  1277,  1277,  1277,  1277,  1277,  1278,  1278,  1278,
    1278,  1278,  1279,  1279,  1279,  1280,  1281,  1282,  1282,  1282,
    1283,  1283,  1284,  1284,  1285,  1285,  1286,  1286,  1287,  1288,
    1288,  1288,  1288,  1288,  1288,  1288,  1288,  1288,  1288,  1288,
    1288,  1288,  1288,  1289,  1289,  1290,  1290,  1291,  1291,  1292,
    1292,  1293,  1293,  1294,  1294,  1295,  1295,  1296,  1296,  1296,
    1297,  1297,  1298,  1298,  1298,  1298,  1298,  1298,  1299,  1299,
    1299,  1300,  1300,  1300,  1300,  1301,  1301,  1302,  1302,  1303,
    1303,  1304,  1304,  1305,  1306,  1306,  1306,  1306,  1306,  1306,
    1307,  1307,  1308,  1308,  1309,  1310,  1310,  1311,  1311,  1312,
    1313,  1314,  1314,  1315,  1315,  1315,  1316,  1316,  1317,  1317,
    1317,  1317,  1317,  1318,  1319,  1320,  1320,  1320,  1321,  1321,
    1321,  1321,  1322,  1322,  1323,  1323,  1324,  1324,  1325,  1325,
    1326,  1327,  1327,  1328,  1328,  1329,  1329,  1330,  1331,  1331,
    1332,  1332,  1332,  1332,  1332,  1332,  1332,  1332,  1332,  1332,
    1332,  1332,  1333,  1333,  1333,  1333,  1333,  1333,  1333,  1333,
    1333,  1334,  1334,  1334,  1334,  1335,  1335,  1336,  1336,  1337,
    1337,  1338,  1338,  1339,  1340,  1340,  1341,  1341,  1342,  1342,
    1343,  1344,  1344,  1345,  1345,  1346,  1346,  1347,  1347,  1348,
    1349,  1349,  1350,  1350,  1351,  1351,  1352,  1352,  1353,  1354,
    1354,  1355,  1356,  1356,  1357,  1357,  1358,  1358,  1359,  1359,
    1360,  1361,  1361,  1361,  1362,  1362,  1362,  1362,  1362,  1363,
    1363,  1364,  1364,  1364,  1364,  1364,  1364,  1365,  1365,  1365,
    1365,  1365,  1366,  1366,  1366,  1366,  1366,  1367,  1367,  1367,
    1367,  1367,  1368,  1369,  1369,  1370,  1370,  1371,  1371,  1372,
    1373,  1373,  1373,  1374,  1375,  1376,  1377,  1378,  1378,  1379,
    1380,  1381,  1382,  1383,  1384,  1385,  1386,  1387,  1388,  1389,
    1390,  1391,  1391,  1392,  1392,  1393,  1393,  1394,  1394,  1395,
    1395,  1396,  1396,  1397,  1397,  1398,  1398,  1398,  1399,  1399,
    1399,  1400,  1400,  1400,  1400,  1401,  1401,  1402,  1402,  1403,
    1403,  1403,  1404,  1404,  1404,  1405,  1405,  1406,  1407,  1407,
    1407,  1408,  1408,  1409,  1409,  1410,  1410,  1411,  1411,  1412,
    1412,  1413,  1414,  1415,  1415,  1416,  1416,  1417,  1417,  1418,
    1418,  1419,  1419,  1420,  1421,  1421,  1422,  1422,  1423,  1424,
    1424,  1425,  1425,  1425,  1426,  1426,  1427,  1427,  1428,  1428,
    1428,  1429,  1430,  1430,  1431,  1431,  1432,  1432,  1433,  1433,
    1433,  1433,  1433,  1433,  1433,  1433,  1433,  1434,  1434,  1436,
    1435,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,
    1437,  1437,  1437,  1438,  1437,  1439,  1437,  1437,  1437,  1437,
    1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,
    1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,
    1437,  1437,  1437,  1437,  1437,  1437,  1437,  1437,  1440,  1440,
    1440,  1441,  1441,  1442,  1442,  1443,  1443,  1444,  1444,  1445,
    1445,  1446,  1446,  1446,  1446,  1447,  1447,  1448,  1448,  1449,
    1449,  1450,  1450,  1450,  1451,  1452,  1453,  1453,  1453,  1453,
    1453,  1453,  1454,  1454,  1455,  1455,  1455,  1456,  1456,  1456,
    1458,  1457,  1460,  1459,  1459,  1461,  1461,  1462,  1461,  1463,
    1463,  1464,  1464,  1464,  1464,  1464,  1464,  1464,  1464,  1464,
    1464,  1464,  1464,  1465,  1465,  1467,  1466,  1466,  1468,  1468,
    1469,  1469,  1471,  1470,  1472,  1470,  1473,  1473,  1474,  1474,
    1476,  1475,  1477,  1478,  1478,  1479,  1480,  1480,  1480,  1481,
    1482,  1483,  1483,  1484,  1484,  1485,  1485,  1485,  1486,  1486,
    1487,  1487,  1488,  1488,  1489,  1489,  1490,  1490,  1490,  1490,
    1491,  1491,  1492,  1492,  1493,  1493,  1494,  1494,  1495,  1495,
    1496,  1496,  1497,  1497,  1497,  1498,  1498,  1499,  1499,  1500,
    1500,  1501,  1501,  1502,  1503,  1503,  1503,  1503,  1504,  1504,
    1504,  1505,  1506,  1506,  1506,  1507,  1507,  1507,  1507,  1507,
    1507,  1507,  1507,  1507,  1507,  1508,  1508,  1508,  1508,  1508,
    1509,  1509,  1509,  1510,  1510,  1511,  1511,  1512,  1513,  1514,
    1514,  1515,  1515,  1516,  1516,  1517,  1517,  1518,  1518,  1519,
    1519,  1520,  1521,  1522,  1523,  1524,  1525,  1526,  1526,  1527,
    1528,  1528,  1529,  1529,  1530,  1530,  1531,  1531,  1532,  1532,
    1532,  1533,  1533,  1533,  1534,  1534,  1535,  1535,  1536,  1536,
    1537,  1538,  1538,  1538,  1538,  1538,  1539,  1539,  1539,  1540,
    1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,
    1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,
    1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,  1540,
    1540,  1540,  1540,  1540,  1541,  1541,  1541,  1542,  1542,  1542,
    1542,  1542,  1542,  1542,  1542,  1542,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,  1543,
    1543,  1543,  1544,  1544,  1544,  1545,  1545,  1545,  1545,  1546,
    1546,  1546,  1546,  1546,  1547,  1548,  1548,  1548,  1548,  1548,
    1548,  1548,  1549,  1549,  1549,  1549,  1549,  1549,  1549,  1550,
    1550,  1551,  1551,  1552,  1552,  1553,  1554,  1554,  1555,  1555,
    1556,  1556,  1557,  1557,  1558,  1558,  1558,  1558,  1558,  1559,
    1559,  1559,  1559,  1560,  1560,  1560,  1560,  1561,  1561,  1561,
    1561,  1561,  1561,  1562,  1563,  1563,  1563,  1563,  1563,  1563,
    1563,  1564,  1564,  1564,  1565,  1565,  1566,  1567,  1567,  1568,
    1569,  1569,  1570,  1570,  1571,  1571,  1571,  1571,  1572,  1572,
    1572,  1572,  1572,  1572,  1572,  1574,  1573,  1573,  1575,  1575,
    1576,  1576,  1577,  1578,  1578,  1578,  1578,  1580,  1579,  1579,
    1581,  1582,  1583,  1584,  1584,  1584,  1585,  1585,  1585,  1585,
    1585,  1586,  1586,  1587,  1587,  1587,  1587,  1588,  1588,  1588,
    1588,  1588,  1589,  1589,  1590,  1589,  1589,  1589,  1591,  1591,
    1592,  1591,  1591,  1593,  1593,  1593,  1593,  1594,  1594,  1595,
    1595,  1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,
    1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,
    1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,  1596,
    1596,  1596,  1596,  1596,  1596,  1597,  1597,  1598,  1598,  1599,
    1599,  1600,  1600,  1600,  1601,  1601,  1601,  1601,  1601,  1602,
    1602,  1603,  1603,  1604,  1604,  1605,  1605,  1606,  1606,  1606,
    1606,  1606,  1606,  1606,  1607,  1607,  1607,  1607,  1607,  1607,
    1607,  1607,  1607,  1607,  1608,  1608,  1609,  1609,  1610,  1610,
    1611,  1611,  1612,  1612,  1612,  1612,  1612,  1613,  1613,  1614,
    1614,  1615,  1615,  1615,  1615,  1615,  1616,  1616,  1618,  1617,
    1619,  1619,  1620,  1620,  1620,  1621,  1621,  1621,  1622,  1622,
    1623,  1624,  1624,  1625,  1626,  1627,  1627,  1627,  1628,  1629,
    1630,  1631,  1631,  1631,  1631,  1631,  1631,  1631,  1631,  1632,
    1633,  1633,  1633,  1634,  1634,  1634,  1634,  1634,  1635,  1635,
    1635,  1635,  1635,  1635,  1636,  1636,  1637,  1638,  1639,  1639,
    1639,  1640,  1641,  1641,  1641,  1642,  1642,  1642,  1644,  1643,
    1645,  1646,  1646,  1646,  1646,  1647,  1647,  1648,  1648,  1650,
    1649,  1651,  1651,  1653,  1654,  1655,  1656,  1652,  1658,  1659,
    1660,  1661,  1657,  1662,  1662,  1662,  1662,  1662,  1662,  1663,
    1663,  1664,  1664,  1664,  1665,  1665,  1666,  1666,  1666,  1667,
    1667,  1668,  1668,  1668,  1669,  1669,  1670,  1670,  1671,  1671,
    1672,  1673,  1673,  1674,  1674,  1675,  1675,  1675,  1676,  1676,
    1677,  1677,  1678,  1678,  1679,  1679,  1680,  1680,  1681,  1681,
    1682,  1682,  1682,  1683,  1683
};

  /* YYR2[YYN] -- Number of symbols on the right hand side of rule YYN.  */
static const yytype_uint8 yyr2[] =
{
       0,     2,     1,     3,     3,     6,     3,     1,     0,     4,
       2,     0,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     4,
       1,     2,     0,     4,     0,     2,     3,     1,     2,     0,
       3,     0,     6,     0,     6,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     2,     3,     1,     3,     1,     2,
       3,     5,     7,     2,     3,     1,     3,     3,     2,     3,
       1,     3,     1,     1,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     5,     3,
       3,     3,     3,     3,     3,     1,     0,     1,     3,     1,
       1,     1,     1,     1,     1,     1,     1,     3,     3,     3,
       3,     0,     3,     9,     6,     7,     9,     4,    10,     0,
       6,     2,     8,     7,     6,     7,    11,     8,     7,     0,
       3,     3,     6,     3,     0,     3,    12,    11,    11,     1,
       3,     2,     2,     2,     2,     2,     2,     2,     0,    12,
       0,     6,     2,     0,     1,     3,     1,     0,     2,     0,
       2,     0,     1,     3,     4,     0,     2,     0,     2,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     3,     1,     0,     2,     0,     2,     2,     2,
       2,     2,     3,     3,     1,     1,     1,     2,     3,     3,
       3,     0,     3,     0,     1,     3,     1,     3,     0,     1,
       3,     1,     4,     0,     1,     1,     1,     0,     3,     2,
       3,     0,     3,     5,     5,     0,     7,     0,     6,     1,
       1,     1,     3,     1,     1,     1,     3,     0,     1,     1,
       1,     1,     2,     1,     3,     1,     1,     0,     1,     0,
       2,     3,     5,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     3,     4,
       0,     1,     1,     1,     3,     1,     3,     3,     1,     2,
       1,     1,     1,     1,     3,     3,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       3,     0,     2,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     5,     0,     2,
       0,     3,     0,     2,     2,     2,     2,     0,     6,     2,
       0,     2,     1,     1,     3,     0,     0,     0,     7,     0,
       2,     2,     1,     1,     0,     0,     8,     0,     6,     1,
       2,     1,     2,     0,     0,     6,     0,     0,     6,     0,
       2,     0,     5,     0,     1,     0,     5,     0,     2,     0,
       5,     4,     0,     0,     8,     0,     0,     8,     1,     1,
       1,     1,     1,     0,     2,     0,     4,     0,     1,     1,
       3,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     1,     1,     1,     1,
       1,     0,     1,     1,     3,     1,     0,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     1,     1,     1,     2,     1,     1,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     4,     3,     1,     1,
       3,     1,     1,     2,     1,     2,     1,     0,     2,     1,
       2,     1,     6,     6,     5,     4,     5,     4,     5,     0,
       1,     0,     3,     0,     2,     0,     8,     9,     0,     1,
       1,     3,     0,     2,     0,     3,     1,     3,     5,     0,
       4,     3,     1,     1,     1,     3,     1,     3,     0,     4,
       1,     3,     1,     1,     0,     3,     1,     3,     3,     0,
       1,     2,     1,     3,     4,     3,     3,     3,     4,     4,
       3,     0,     1,     1,     2,     1,     1,     1,     0,     3,
       1,     2,     1,     3,     0,     1,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     3,     3,
       3,     3,     3,     3,     3,     3,     5,     1,     1,     3,
       4,     4,     3,     2,     2,     3,     3,     1,     1,     4,
       4,     4,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     3,     1,     1,     3,
       0,     1,     6,     7,     7,     7,     8,     3,     4,     0,
       2,     0,     1,     0,     1,     2,     2,     9,     0,     2,
       0,     1,     1,     3,     3,     3,     1,     2,     1,     1,
       3,     2,     3,     2,     2,     1,     3,     3,     2,     3,
       1,     2,     2,     2,     1,     2,     1,     1,     1,     2,
       3,     2,     3,     2,     2,     5,     5,     2,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     2,
       2,     1,     2,     1,     2,     3,     2,     1,     1,     1,
       1,     1,     1,     2,     0,     1,     1,     1,     1,     1,
       0,     1,     0,     1,     1,     5,     0,     3,     0,     2,
       3,     0,     1,     2,     1,     1,     1,     1,     3,     3,
       3,     3,     0,     1,     0,     1,     0,     1,     2,     1,
       1,     2,     2,     2,     4,     3,     1,     3,     2,     1,
       2,     2,     2,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     2,     1,     1,     2,     1,     1,
       1,     0,     2,     1,     1,     1,     1,     1,     1,     0,
       2,     0,     1,     1,     2,     2,     1,     2,     2,     0,
       1,     1,     1,     3,     1,     3,     0,     1,     0,     4,
       0,     1,     5,     0,     3,     3,     1,     0,     2,     2,
       2,     0,     3,     3,     6,     6,     1,     1,     2,     2,
       2,     2,     2,     1,     1,     0,     1,     1,     1,     1,
       0,     1,     0,     1,     1,     2,     1,     3,     0,     1,
       1,     2,     1,     0,     1,     1,     2,     1,     1,     3,
       2,     1,     1,     3,     3,     0,     1,     2,     2,     1,
       1,     1,     1,     1,     3,     1,     2,     5,     3,     1,
       1,     4,     0,     1,     0,     2,     1,     3,     4,     4,
       0,     5,     0,     5,     0,     5,     0,     5,     0,     4,
       0,    10,     7,     6,     6,     6,     4,     7,     7,     5,
       8,     7,     5,     5,     5,     5,     0,     2,     8,     3,
       0,     1,     1,     2,     2,     2,     2,     5,     3,     3,
       3,     3,     5,     4,     3,     4,     4,     2,     2,     2,
       0,     2,     2,     1,     2,     2,     2,     2,     3,     0,
       3,     1,     4,     0,     3,     0,     2,     0,     1,     1,
       2,     1,     3,     1,     2,     0,     1,     1,     3,     2,
       2,     3,     6,     5,     3,     4,     4,     4,     4,     5,
       4,     3,     3,     8,     7,     4,     4,     1,     1,     0,
       1,     2,     2,     1,     1,     1,     3,     3,     1,     3,
       1,     3,     6,     5,     2,     6,     5,     4,     4,     3,
       3,     3,     3,     2,     2,     6,     8,     5,     4,     4,
       4,     3,     5,     5,     5,     5,     1,     3,     1,     1,
       1,     0,     1,     1,     2,     2,     3,     1,     1,     3,
       1,     1,     0,     1,     0,     1,     0,     1,     1,     0,
       2,     1,     0,     1,     1,     1,     2,     2,     2,     4,
       3,     0,     4,     3,     0,     1,     1,     3,     3,     2,
       2,     4,     0,     3,     0,     3,     0,     3,     0,     3,
       0,     1,     1,     3,     1,     1,     0,     2,     1,     3,
       3,     3,     1,     4,     0,     1,     1,     5,     0,     1,
       1,     2,     1,     1,     1,     5,     0,     3,     0,     5,
       4,     2,     4,     0,     1,     1,     2,     1,     1,     1,
       1,     1,     2,     4,     0,     1,     1,     0,     4,     3,
       3,     5,     1,     3,     3,     5,     7,     1,     3,     2,
       1,     1,     8,     5,     1,     3,     3,     4,     0,     4,
       0,     2,     1,     2,     1,     1,     3,     2,     3,     3,
       3,     4,     3,     4,     2,     3,     2,     1,     4,     4,
       4,     4,     3,     3,     4,     1,     1,     1,     9,     8,
       0,     1,     2,     1,     1,     1,     3,     2,     2,     0,
       1,     2,     1,     1,     1,     2,     1,     3,     4,     4,
       1,     1,     2,     0,     1,     2,     1,     3,     1,     1,
       1,     2,     0,     2,     2,     1,     1,     0,     2,     3,
       3,     3,     2,     3,     4,     3,     4,     3,     4,     1,
       3,     4,     3,     4,     1,     3,     4,     5,     7,     6,
       8,     6,     5,     6,     4,     3,     5,     4,     6,     3,
       4,     1,     1,     0,     3,     3,     3,     3,     3,     3,
       5,     5,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     3,     1,     1,     1,     1,     1,     3,     2,     2,
       2,     2,     1,     3,     5,     6,     2,     4,     7,     2,
       7,     5,     6,     6,     4,     4,     5,     3,     3,     0,
       1,     4,     6,     2,     4,     4,     4,    10,     6,     8,
       6,     4,     4,     6,     4,     4,     4,     6,     4,     7,
       7,     7,     6,     6,     6,     6,     3,     4,     6,     8,
       2,     2,     8,     8,     6,     6,     1,     6,     6,     8,
       8,     6,     8,     6,     2,     8,     8,     2,     2,     2,
       4,     4,     4,     4,     3,     8,     6,     8,     4,     6,
       4,     6,     8,     4,     3,     6,     4,     6,     4,     7,
       7,    10,     1,     4,     4,     4,     4,     4,     6,     4,
       4,     6,     2,     3,     0,     4,     0,     3,     0,     1,
       1,     3,     2,     1,     1,     5,     6,     5,     5,     5,
       7,     5,     6,     5,     6,     5,     6,     5,     6,     5,
       5,     5,     5,     5,     6,     8,     4,     4,     4,     4,
       4,     5,     7,     7,     6,     6,     9,     0,     3,     3,
       0,     2,     0,     2,     2,     0,     2,     2,     0,     1,
       2,     1,     1,     1,     3,     4,     0,     1,     0,     3,
       0,     3,     0,     3,     1,     1,     2,     2,     2,     4,
       2,     4,     1,     2,     2,     2,     4,     0,     3,     2,
       2,     3,     1,     1,     1,     4,     2,     3,     1,     4,
       0,     1,     0,     2,     0,     3,     3,     1,     2,     2,
       3,     2,     1,     2,     1,     2,     1,     2,     2,     2,
       1,     1,     2,     0,     1,     1,     3,     1,     3,     1,
       3,     0,     1,     0,     2,     4,     5,     1,     1,     4,
       1,     1,     5,     7,     5,     7,     3,     3,     3,     4,
       4,     1,     2,     2,     1,     3,     3,     0,     1,     0,
       1,     0,     1,     4,     1,     1,     1,     1,     1,     1,
       3,     5,     3,     3,     4,     3,     3,     3,     4,     8,
       4,     1,     3,     3,     7,     4,     0,     1,     0,     1,
       1,     2,     2,     3,     3,     1,     1,     2,     0,     2,
       3,     3,     1,     1,     6,     6,     1,     2,     0,     1,
       1,     0,     1,     1,     1,     1,     3,     1,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     1,     0,     2,     0,
       1,     0,     1,     2,     0,     2,     2,     3,     3,     1,
       4,     0,     3,     1,     3,     0,     2,     1,     3,     3,
       0,     4,     3,     1,     0,     1,     3,     1,     2,     0,
       1,     3,     3,     1,     0,     1,     1,     1,     0,     1,
       2,     1,     3,     3,     1,     1,     1,     1,     1,     0,
       2,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     2,
       5,     2,     1,     2,     6,     6,     4,     6,     4,     5,
       4,     4,     5,     4,     4,     4,     5,     5,     4,     6,
       4,     1,     3,     1,     3,     0,     2,     0,     1,     0,
       1,     1,     3,     1,     1,     9,    10,     8,     6,     7,
       6,     0,     1,     1,     1,     1,     1,     0,     1,     1,
       3,     4,     1,     3,     4,     3,     1,     2,     1,     2,
       1,     1,     1,     3,     1,     3,     1,     1,     1,     0,
       1,     3,     4,     0,     1,     3,     1,     1,     1,     0,
       3,     0,     5,    10,     0,     1,     3,     1,     3,     0,
       1,    10,     7,     8,     0,     2,     0,     2,     1,     1,
       1,     3,     0,     1,     0,     1,     1,     3,     1,     1,
       2,     2,     2,     1,     1,     1,     1,     0,     3,     0,
       3,     2,     4,     4,     3,     4,     4,     1,     3,     3,
       6,     2,     2,     0,     6,     0,     7,     6,     2,     5,
       5,     2,     2,     1,     4,     3,     2,     3,     2,     2,
       1,     1,     3,     5,     4,     3,     3,     2,     3,     3,
       3,     3,     3,     3,     3,     3,     3,     3,     1,     1,
       1,     1,     1,     0,     1,     0,     2,     0,     1,     0,
       1,     0,     1,     1,     2,     1,     1,     0,     2,     0,
       2,     0,     2,     1,     3,     3,     1,     1,     1,     1,
       1,     3,     1,     1,     0,     3,     1,     0,     1,     1,
       0,     4,     0,     4,     1,     0,     3,     0,     3,     3,
       1,     2,     2,     2,     2,     2,     3,     1,     1,     1,
       1,     1,     1,     0,     1,     0,     3,     3,     3,     1,
       0,     2,     0,     4,     0,     3,     0,     1,     0,     2,
       0,     3,     3,     2,     2,     3,     0,     1,     1,     2,
      18,     1,     1,     0,     1,     0,     1,     1,     0,     1,
       1,     1,     0,     2,     2,     1,     3,     4,     3,     3,
       0,     2,     2,     1,     3,     3,     0,     4,     0,     3,
       1,     1,     0,     3,     2,     3,     1,     1,     2,     0,
       2,     3,     1,     3,     1,     1,     2,     2,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       1,     1,     1,     2,     2,     1,     1,     1,     1,     1,
       2,     2,     2,     1,     1,     3,     5,     2,     1,     1,
       1,     1,     1,     3,     5,     1,     3,     2,     4,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     3,     1,     2,     1,     3,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     2,     2,     2,     2,     5,     5,
       7,     7,     3,     3,     3,     6,     6,     6,     4,     0,
       2,     4,     6,     1,     3,     1,     2,     2,     0,     2,
       1,     3,     2,     1,     1,     1,     1,     1,     1,     0,
       1,     1,     1,     0,     2,     2,     2,     0,     2,     2,
       2,     2,     2,     3,     3,     4,     6,     2,     3,     3,
       2,     1,     3,     3,     2,     2,     1,     0,     2,     3,
       0,     2,     2,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     0,     4,     4,     1,     1,
       1,     3,     3,     1,     1,     2,     2,     0,     3,     2,
       1,     1,     3,     4,     2,     6,     4,     3,     6,     7,
      10,     1,     1,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     4,     7,     0,     9,     8,     6,     5,     9,
       0,    11,     7,     0,     1,     1,     1,     0,     1,     1,
       3,     2,     3,     2,     2,     2,     2,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     2,     2,
       1,     3,     2,     2,     2,     2,     2,     2,     2,     2,
       1,     1,     2,     2,     2,     0,     3,     0,     1,     3,
       1,     2,     2,     2,     1,     3,     3,     1,     3,     1,
       3,     1,     3,     0,     3,     0,     3,     4,     5,     4,
       6,     6,     7,     1,     7,     9,     5,     6,     8,     4,
       7,     7,     8,     2,     1,     3,     1,     3,     0,     3,
       1,     3,     0,     2,     2,     2,     2,     0,     3,     0,
       3,     0,     3,     4,     3,     3,     0,     3,     0,     3,
       0,     1,     0,     3,     2,     0,     1,     2,     0,     1,
       4,     4,     5,     2,     3,     0,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     1,     1,     1,     0,
       3,     3,     4,     1,     1,     1,     1,     1,     1,     1,
       1,     1,     1,     1,     1,     1,     0,     3,     1,     2,
       1,     2,     3,     3,     3,     0,     3,     3,     0,     7,
       2,     0,     3,     4,     4,     1,     1,     0,     2,     0,
      12,     7,     6,     0,     0,     0,     0,    14,     0,     0,
       0,     0,    11,     4,     4,     3,     4,     3,     3,     0,
       2,     1,     3,     5,     1,     1,     0,     1,     1,     0,
       2,     0,     1,     3,     5,     3,     3,     3,     1,     3,
       4,     6,    10,     1,     5,     0,     2,     3,     1,     1,
       0,     3,     1,     3,     1,     3,     1,     2,     0,     3,
       0,     1,     1,     0,     1
};


#define yyerrok         (yyerrstatus = 0)
#define yyclearin       (yychar = YYEMPTY)
#define YYEMPTY         (-2)
#define YYEOF           0

#define YYACCEPT        goto yyacceptlab
#define YYABORT         goto yyabortlab
#define YYERROR         goto yyerrorlab


#define YYRECOVERING()  (!!yyerrstatus)

#define YYBACKUP(Token, Value)                                  \
do                                                              \
  if (yychar == YYEMPTY)                                        \
    {                                                           \
      yychar = (Token);                                         \
      yylval = (Value);                                         \
      YYPOPSTACK (yylen);                                       \
      yystate = *yyssp;                                         \
      goto yybackup;                                            \
    }                                                           \
  else                                                          \
    {                                                           \
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error: cannot back up")); \
      YYERROR;                                                  \
    }                                                           \
while (0)

/* Error token number */
#define YYTERROR        1
#define YYERRCODE       256


/* YYLLOC_DEFAULT -- Set CURRENT to span from RHS[1] to RHS[N].
   If N is 0, then set CURRENT to the empty location which ends
   the previous symbol: RHS[0] (always defined).  */

#ifndef YYLLOC_DEFAULT
# define YYLLOC_DEFAULT(Current, Rhs, N)                                \
    do                                                                  \
      if (N)                                                            \
        {                                                               \
          (Current).first_line   = YYRHSLOC (Rhs, 1).first_line;        \
          (Current).first_column = YYRHSLOC (Rhs, 1).first_column;      \
          (Current).last_line    = YYRHSLOC (Rhs, N).last_line;         \
          (Current).last_column  = YYRHSLOC (Rhs, N).last_column;       \
        }                                                               \
      else                                                              \
        {                                                               \
          (Current).first_line   = (Current).last_line   =              \
            YYRHSLOC (Rhs, 0).last_line;                                \
          (Current).first_column = (Current).last_column =              \
            YYRHSLOC (Rhs, 0).last_column;                              \
        }                                                               \
    while (0)
#endif

#define YYRHSLOC(Rhs, K) ((Rhs)[K])


/* Enable debugging if requested.  */
#if YYDEBUG

# ifndef YYFPRINTF
#  include <stdio.h> /* INFRINGES ON USER NAME SPACE */
#  define YYFPRINTF fprintf
# endif

# define YYDPRINTF(Args)                        \
do {                                            \
  if (yydebug)                                  \
    YYFPRINTF Args;                             \
} while (0)


/* YY_LOCATION_PRINT -- Print the location on the stream.
   This macro was not mandated originally: define only if we know
   we won't break user code: when these are the locations we know.  */

#ifndef YY_LOCATION_PRINT
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL

/* Print *YYLOCP on YYO.  Private, do not rely on its existence. */

YY_ATTRIBUTE_UNUSED
static unsigned
yy_location_print_ (FILE *yyo, YYLTYPE const * const yylocp)
{
  unsigned res = 0;
  int end_col = 0 != yylocp->last_column ? yylocp->last_column - 1 : 0;
  if (0 <= yylocp->first_line)
    {
      res += YYFPRINTF (yyo, "%d", yylocp->first_line);
      if (0 <= yylocp->first_column)
        res += YYFPRINTF (yyo, ".%d", yylocp->first_column);
    }
  if (0 <= yylocp->last_line)
    {
      if (yylocp->first_line < yylocp->last_line)
        {
          res += YYFPRINTF (yyo, "-%d", yylocp->last_line);
          if (0 <= end_col)
            res += YYFPRINTF (yyo, ".%d", end_col);
        }
      else if (0 <= end_col && yylocp->first_column < end_col)
        res += YYFPRINTF (yyo, "-%d", end_col);
    }
  return res;
 }

#  define YY_LOCATION_PRINT(File, Loc)          \
  yy_location_print_ (File, &(Loc))

# else
#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
# endif
#endif


# define YY_SYMBOL_PRINT(Title, Type, Value, Location)                    \
do {                                                                      \
  if (yydebug)                                                            \
    {                                                                     \
      YYFPRINTF (stderr, "%s ", Title);                                   \
      yy_symbol_print (stderr,                                            \
                  Type, Value, Location, YYTHD, parse_tree); \
      YYFPRINTF (stderr, "\n");                                           \
    }                                                                     \
} while (0)


/*----------------------------------------.
| Print this symbol's value on YYOUTPUT.  |
`----------------------------------------*/

static void
yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  FILE *yyo = yyoutput;
  YYUSE (yyo);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yyvaluep)
    return;
# ifdef YYPRINT
  if (yytype < YYNTOKENS)
    YYPRINT (yyoutput, yytoknum[yytype], *yyvaluep);
# endif
  YYUSE (yytype);
}


/*--------------------------------.
| Print this symbol on YYOUTPUT.  |
`--------------------------------*/

static void
yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, YYLTYPE const * const yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYFPRINTF (yyoutput, "%s %s (",
             yytype < YYNTOKENS ? "token" : "nterm", yytname[yytype]);

  YY_LOCATION_PRINT (yyoutput, *yylocationp);
  YYFPRINTF (yyoutput, ": ");
  yy_symbol_value_print (yyoutput, yytype, yyvaluep, yylocationp, YYTHD, parse_tree);
  YYFPRINTF (yyoutput, ")");
}

/*------------------------------------------------------------------.
| yy_stack_print -- Print the state stack from its BOTTOM up to its |
| TOP (included).                                                   |
`------------------------------------------------------------------*/

static void
yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
{
  YYFPRINTF (stderr, "Stack now");
  for (; yybottom <= yytop; yybottom++)
    {
      int yybot = *yybottom;
      YYFPRINTF (stderr, " %d", yybot);
    }
  YYFPRINTF (stderr, "\n");
}

# define YY_STACK_PRINT(Bottom, Top)                            \
do {                                                            \
  if (yydebug)                                                  \
    yy_stack_print ((Bottom), (Top));                           \
} while (0)


/*------------------------------------------------.
| Report that the YYRULE is going to be reduced.  |
`------------------------------------------------*/

static void
yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, YYLTYPE *yylsp, int yyrule, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  unsigned long int yylno = yyrline[yyrule];
  int yynrhs = yyr2[yyrule];
  int yyi;
  YYFPRINTF (stderr, "Reducing stack by rule %d (line %lu):\n",
             yyrule - 1, yylno);
  /* The symbols being reduced.  */
  for (yyi = 0; yyi < yynrhs; yyi++)
    {
      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
      yy_symbol_print (stderr,
                       yystos[yyssp[yyi + 1 - yynrhs]],
                       &(yyvsp[(yyi + 1) - (yynrhs)])
                       , &(yylsp[(yyi + 1) - (yynrhs)])                       , YYTHD, parse_tree);
      YYFPRINTF (stderr, "\n");
    }
}

# define YY_REDUCE_PRINT(Rule)          \
do {                                    \
  if (yydebug)                          \
    yy_reduce_print (yyssp, yyvsp, yylsp, Rule, YYTHD, parse_tree); \
} while (0)

/* Nonzero means print parse trace.  It is left uninitialized so that
   multiple parsers can coexist.  */
int yydebug;
#else /* !YYDEBUG */
# define YYDPRINTF(Args)
# define YY_SYMBOL_PRINT(Title, Type, Value, Location)
# define YY_STACK_PRINT(Bottom, Top)
# define YY_REDUCE_PRINT(Rule)
#endif /* !YYDEBUG */


/* YYINITDEPTH -- initial size of the parser's stacks.  */
#ifndef YYINITDEPTH
# define YYINITDEPTH 200
#endif

/* YYMAXDEPTH -- maximum size the stacks can grow to (effective only
   if the built-in stack extension method is used).

   Do not make this value too large; the results are undefined if
   YYSTACK_ALLOC_MAXIMUM < YYSTACK_BYTES (YYMAXDEPTH)
   evaluated with infinite-precision integer arithmetic.  */

#ifndef YYMAXDEPTH
# define YYMAXDEPTH 10000
#endif


#if YYERROR_VERBOSE

# ifndef yystrlen
#  if defined __GLIBC__ && defined _STRING_H
#   define yystrlen strlen
#  else
/* Return the length of YYSTR.  */
static YYSIZE_T
yystrlen (const char *yystr)
{
  YYSIZE_T yylen;
  for (yylen = 0; yystr[yylen]; yylen++)
    continue;
  return yylen;
}
#  endif
# endif

# ifndef yystpcpy
#  if defined __GLIBC__ && defined _STRING_H && defined _GNU_SOURCE
#   define yystpcpy stpcpy
#  else
/* Copy YYSRC to YYDEST, returning the address of the terminating '\0' in
   YYDEST.  */
static char *
yystpcpy (char *yydest, const char *yysrc)
{
  char *yyd = yydest;
  const char *yys = yysrc;

  while ((*yyd++ = *yys++) != '\0')
    continue;

  return yyd - 1;
}
#  endif
# endif

# ifndef yytnamerr
/* Copy to YYRES the contents of YYSTR after stripping away unnecessary
   quotes and backslashes, so that it's suitable for yyerror.  The
   heuristic is that double-quoting is unnecessary unless the string
   contains an apostrophe, a comma, or backslash (other than
   backslash-backslash).  YYSTR is taken from yytname.  If YYRES is
   null, do not copy; instead, return the length of what the result
   would have been.  */
static YYSIZE_T
yytnamerr (char *yyres, const char *yystr)
{
  if (*yystr == '"')
    {
      YYSIZE_T yyn = 0;
      char const *yyp = yystr;

      for (;;)
        switch (*++yyp)
          {
          case '\'':
          case ',':
            goto do_not_strip_quotes;

          case '\\':
            if (*++yyp != '\\')
              goto do_not_strip_quotes;
            /* Fall through.  */
          default:
            if (yyres)
              yyres[yyn] = *yyp;
            yyn++;
            break;

          case '"':
            if (yyres)
              yyres[yyn] = '\0';
            return yyn;
          }
    do_not_strip_quotes: ;
    }

  if (! yyres)
    return yystrlen (yystr);

  return yystpcpy (yyres, yystr) - yyres;
}
# endif

/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
   about the unexpected token YYTOKEN for the state stack whose top is
   YYSSP.

   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
   not large enough to hold the message.  In that case, also set
   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
   required number of bytes is too large to store.  */
static int
yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
                yytype_int16 *yyssp, int yytoken)
{
  YYSIZE_T yysize0 = yytnamerr (YY_NULLPTR, yytname[yytoken]);
  YYSIZE_T yysize = yysize0;
  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
  /* Internationalized format string. */
  const char *yyformat = YY_NULLPTR;
  /* Arguments of yyformat. */
  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
  /* Number of reported tokens (one for the "unexpected", one per
     "expected"). */
  int yycount = 0;

  /* There are many possibilities here to consider:
     - If this state is a consistent state with a default action, then
       the only way this function was invoked is if the default action
       is an error action.  In that case, don't check for expected
       tokens because there are none.
     - The only way there can be no lookahead present (in yychar) is if
       this state is a consistent state with a default action.  Thus,
       detecting the absence of a lookahead is sufficient to determine
       that there is no unexpected or expected token to report.  In that
       case, just report a simple "syntax error".
     - Don't assume there isn't a lookahead just because this state is a
       consistent state with a default action.  There might have been a
       previous inconsistent state, consistent state with a non-default
       action, or user semantic action that manipulated yychar.
     - Of course, the expected token list depends on states to have
       correct lookahead information, and it depends on the parser not
       to perform extra reductions after fetching a lookahead from the
       scanner and before detecting a syntax error.  Thus, state merging
       (from LALR or IELR) and default reductions corrupt the expected
       token list.  However, the list is correct for canonical LR with
       one exception: it will still contain any token that will not be
       accepted due to an error action in a later state.
  */
  if (yytoken != YYEMPTY)
    {
      int yyn = yypact[*yyssp];
      yyarg[yycount++] = yytname[yytoken];
      if (!yypact_value_is_default (yyn))
        {
          /* Start YYX at -YYN if negative to avoid negative indexes in
             YYCHECK.  In other words, skip the first -YYN actions for
             this state because they are default actions.  */
          int yyxbegin = yyn < 0 ? -yyn : 0;
          /* Stay within bounds of both yycheck and yytname.  */
          int yychecklim = YYLAST - yyn + 1;
          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
          int yyx;

          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
                && !yytable_value_is_error (yytable[yyx + yyn]))
              {
                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
                  {
                    yycount = 1;
                    yysize = yysize0;
                    break;
                  }
                yyarg[yycount++] = yytname[yyx];
                {
                  YYSIZE_T yysize1 = yysize + yytnamerr (YY_NULLPTR, yytname[yyx]);
                  if (! (yysize <= yysize1
                         && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
                    return 2;
                  yysize = yysize1;
                }
              }
        }
    }

  switch (yycount)
    {
# define YYCASE_(N, S)                      \
      case N:                               \
        yyformat = S;                       \
      break
      YYCASE_(0, YY_("syntax error"));
      YYCASE_(1, YY_("syntax error, unexpected %s"));
      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
# undef YYCASE_
    }

  {
    YYSIZE_T yysize1 = yysize + yystrlen (yyformat);
    if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
      return 2;
    yysize = yysize1;
  }

  if (*yymsg_alloc < yysize)
    {
      *yymsg_alloc = 2 * yysize;
      if (! (yysize <= *yymsg_alloc
             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
      return 1;
    }

  /* Avoid sprintf, as that infringes on the user's name space.
     Don't have undefined behavior even if the translation
     produced a string with the wrong number of "%s"s.  */
  {
    char *yyp = *yymsg;
    int yyi = 0;
    while ((*yyp = *yyformat) != '\0')
      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
        {
          yyp += yytnamerr (yyp, yyarg[yyi++]);
          yyformat += 2;
        }
      else
        {
          yyp++;
          yyformat++;
        }
  }
  return 0;
}
#endif /* YYERROR_VERBOSE */

/*-----------------------------------------------.
| Release the memory associated to this symbol.  |
`-----------------------------------------------*/

static void
yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, YYLTYPE *yylocationp, class THD *YYTHD, class Parse_tree_root **parse_tree)
{
  YYUSE (yyvaluep);
  YYUSE (yylocationp);
  YYUSE (YYTHD);
  YYUSE (parse_tree);
  if (!yymsg)
    yymsg = "Deleting";
  YY_SYMBOL_PRINT (yymsg, yytype, yyvaluep, yylocationp);

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  YYUSE (yytype);
  YY_IGNORE_MAYBE_UNINITIALIZED_END
}




/*----------.
| yyparse.  |
`----------*/

int
yyparse (class THD *YYTHD, class Parse_tree_root **parse_tree)
{
/* The lookahead symbol.  */
int yychar;


/* The semantic value of the lookahead symbol.  */
/* Default value used for initialization, for pacifying older GCCs
   or non-GCC compilers.  */
YY_INITIAL_VALUE (static YYSTYPE yyval_default;)
YYSTYPE yylval YY_INITIAL_VALUE (= yyval_default);

/* Location data for the lookahead symbol.  */
static YYLTYPE yyloc_default
# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
  = { 1, 1, 1, 1 }
# endif
;
YYLTYPE yylloc = yyloc_default;

    /* Number of syntax errors so far.  */
    int yynerrs;

    int yystate;
    /* Number of tokens to shift before error messages enabled.  */
    int yyerrstatus;

    /* The stacks and their tools:
       'yyss': related to states.
       'yyvs': related to semantic values.
       'yyls': related to locations.

       Refer to the stacks through separate pointers, to allow yyoverflow
       to reallocate them elsewhere.  */

    /* The state stack.  */
    yytype_int16 yyssa[YYINITDEPTH];
    yytype_int16 *yyss;
    yytype_int16 *yyssp;

    /* The semantic value stack.  */
    YYSTYPE yyvsa[YYINITDEPTH];
    YYSTYPE *yyvs;
    YYSTYPE *yyvsp;

    /* The location stack.  */
    YYLTYPE yylsa[YYINITDEPTH];
    YYLTYPE *yyls;
    YYLTYPE *yylsp;

    /* The locations where the error started and ended.  */
    YYLTYPE yyerror_range[3];

    YYSIZE_T yystacksize;

  int yyn;
  int yyresult;
  /* Lookahead token as an internal (translated) token number.  */
  int yytoken = 0;
  /* The variables used to return semantic value and location from the
     action routines.  */
  YYSTYPE yyval;
  YYLTYPE yyloc;

#if YYERROR_VERBOSE
  /* Buffer for error messages, and its allocated size.  */
  char yymsgbuf[128];
  char *yymsg = yymsgbuf;
  YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
#endif

#define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))

  /* The number of symbols on the RHS of the reduced rule.
     Keep to zero when no symbol should be popped.  */
  int yylen = 0;

  yyssp = yyss = yyssa;
  yyvsp = yyvs = yyvsa;
  yylsp = yyls = yylsa;
  yystacksize = YYINITDEPTH;

  YYDPRINTF ((stderr, "Starting parse\n"));

  yystate = 0;
  yyerrstatus = 0;
  yynerrs = 0;
  yychar = YYEMPTY; /* Cause a token to be read.  */
  yylsp[0] = yylloc;
  goto yysetstate;

/*------------------------------------------------------------.
| yynewstate -- Push a new state, which is found in yystate.  |
`------------------------------------------------------------*/
 yynewstate:
  /* In all cases, when you get here, the value and location stacks
     have just been pushed.  So pushing a state here evens the stacks.  */
  yyssp++;

 yysetstate:
  *yyssp = yystate;

  if (yyss + yystacksize - 1 <= yyssp)
    {
      /* Get the current used size of the three stacks, in elements.  */
      YYSIZE_T yysize = yyssp - yyss + 1;

#ifdef yyoverflow
      {
        /* Give user a chance to reallocate the stack.  Use copies of
           these so that the &'s don't force the real ones into
           memory.  */
        YYSTYPE *yyvs1 = yyvs;
        yytype_int16 *yyss1 = yyss;
        YYLTYPE *yyls1 = yyls;

        /* Each stack pointer address is followed by the size of the
           data in use in that stack, in bytes.  This used to be a
           conditional around just the two extra args, but that might
           be undefined if yyoverflow is a macro.  */
        yyoverflow (YY_("memory exhausted"),
                    &yyss1, yysize * sizeof (*yyssp),
                    &yyvs1, yysize * sizeof (*yyvsp),
                    &yyls1, yysize * sizeof (*yylsp),
                    &yystacksize);

        yyls = yyls1;
        yyss = yyss1;
        yyvs = yyvs1;
      }
#else /* no yyoverflow */
# ifndef YYSTACK_RELOCATE
      goto yyexhaustedlab;
# else
      /* Extend the stack our own way.  */
      if (YYMAXDEPTH <= yystacksize)
        goto yyexhaustedlab;
      yystacksize *= 2;
      if (YYMAXDEPTH < yystacksize)
        yystacksize = YYMAXDEPTH;

      {
        yytype_int16 *yyss1 = yyss;
        union yyalloc *yyptr =
          (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
        if (! yyptr)
          goto yyexhaustedlab;
        YYSTACK_RELOCATE (yyss_alloc, yyss);
        YYSTACK_RELOCATE (yyvs_alloc, yyvs);
        YYSTACK_RELOCATE (yyls_alloc, yyls);
#  undef YYSTACK_RELOCATE
        if (yyss1 != yyssa)
          YYSTACK_FREE (yyss1);
      }
# endif
#endif /* no yyoverflow */

      yyssp = yyss + yysize - 1;
      yyvsp = yyvs + yysize - 1;
      yylsp = yyls + yysize - 1;

      YYDPRINTF ((stderr, "Stack size increased to %lu\n",
                  (unsigned long int) yystacksize));

      if (yyss + yystacksize - 1 <= yyssp)
        YYABORT;
    }

  YYDPRINTF ((stderr, "Entering state %d\n", yystate));

  if (yystate == YYFINAL)
    YYACCEPT;

  goto yybackup;

/*-----------.
| yybackup.  |
`-----------*/
yybackup:

  /* Do appropriate processing given the current state.  Read a
     lookahead token if we need one and don't already have one.  */

  /* First try to decide what to do without reference to lookahead token.  */
  yyn = yypact[yystate];
  if (yypact_value_is_default (yyn))
    goto yydefault;

  /* Not known => get a lookahead token if don't already have one.  */

  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
  if (yychar == YYEMPTY)
    {
      YYDPRINTF ((stderr, "Reading a token: "));
      yychar = yylex (&yylval, &yylloc, YYTHD);
    }

  if (yychar <= YYEOF)
    {
      yychar = yytoken = YYEOF;
      YYDPRINTF ((stderr, "Now at end of input.\n"));
    }
  else
    {
      yytoken = YYTRANSLATE (yychar);
      YY_SYMBOL_PRINT ("Next token is", yytoken, &yylval, &yylloc);
    }

  /* If the proper action on seeing token YYTOKEN is to reduce or to
     detect an error, take that action.  */
  yyn += yytoken;
  if (yyn < 0 || YYLAST < yyn || yycheck[yyn] != yytoken)
    goto yydefault;
  yyn = yytable[yyn];
  if (yyn <= 0)
    {
      if (yytable_value_is_error (yyn))
        goto yyerrlab;
      yyn = -yyn;
      goto yyreduce;
    }

  /* Count tokens shifted since error; after three, turn off error
     status.  */
  if (yyerrstatus)
    yyerrstatus--;

  /* Shift the lookahead token.  */
  YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);

  /* Discard the shifted token.  */
  yychar = YYEMPTY;

  yystate = yyn;
  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END
  *++yylsp = yylloc;
  goto yynewstate;


/*-----------------------------------------------------------.
| yydefault -- do the default action for the current state.  |
`-----------------------------------------------------------*/
yydefault:
  yyn = yydefact[yystate];
  if (yyn == 0)
    goto yyerrlab;
  goto yyreduce;


/*-----------------------------.
| yyreduce -- Do a reduction.  |
`-----------------------------*/
yyreduce:
  /* yyn is the number of a rule to reduce with.  */
  yylen = yyr2[yyn];

  /* If YYLEN is nonzero, implement the default value of the action:
     '$$ = $1'.

     Otherwise, the following line sets YYVAL to garbage.
     This behavior is undocumented and Bison
     users should not rely upon it.  Assigning to YYVAL
     unconditionally makes the parser a bit smaller, and it avoids a
     GCC warning that YYVAL may be used uninitialized.  */
  yyval = yyvsp[1-yylen];

  /* Default location.  */
  YYLLOC_DEFAULT (yyloc, (yylsp - yylen), yylen);
  YY_REDUCE_PRINT (yyn);
  switch (yyn)
    {
        case 3:
#line 1988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));
            static_cast<Expression_parser_state *>(YYP)->result= (yyvsp[-1].item);
          }
#line 23149 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 4:
#line 1993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating partition info string into
              partition_info data structure.
            */
            CONTEXTUALIZE((yyvsp[-1].partition_clause));
            static_cast<Partition_expr_parser_state *>(YYP)->result=
              &(yyvsp[-1].partition_clause)->part_info;
          }
#line 23163 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 5:
#line 2003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We enter here when translating generated column info string into
              partition_info data structure.
            */

            // Check gcol expression for the "PARSE_GCOL_EXPR" prefix:
            if (!is_identifier((yyvsp[-4].lexer.lex_str), "PARSE_GCOL_EXPR"))
              MYSQL_YYABORT;

            auto gcol_info= NEW_PTN Value_generator;
            if (gcol_info == NULL)
              MYSQL_YYABORT; // OOM
            ITEMIZE((yyvsp[-2].item), &(yyvsp[-2].item));
            gcol_info->expr_item= (yyvsp[-2].item);
            static_cast<Gcol_expr_parser_state *>(YYP)->result= gcol_info;
          }
#line 23185 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 6:
#line 2021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            static_cast<Common_table_expr_parser_state *>(YYP)->result= (yyvsp[-1].subquery);
          }
#line 23193 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 7:
#line 2028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            if (!thd->is_bootstrap_system_thread() &&
                !thd->m_parser_state->has_comment())
            {
              my_error(ER_EMPTY_QUERY, MYF(0));
              MYSQL_YYABORT;
            }
            thd->lex->sql_command= SQLCOM_EMPTY_QUERY;
            YYLIP->found_semicolon= NULL;
          }
#line 23209 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 8:
#line 2040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip = YYLIP;

            if (YYTHD->get_protocol()->has_client_capability(CLIENT_MULTI_QUERIES) &&
                lip->multi_statements &&
                ! lip->eof())
            {
              /*
                We found a well formed query, and multi queries are allowed:
                - force the parser to stop after the ';'
                - mark the start of the next query for the next invocation
                  of the parser.
              */
              lip->next_state= MY_LEX_END;
              lip->found_semicolon= lip->get_ptr();
            }
            else
            {
              /* Single query, terminated. */
              lip->found_semicolon= NULL;
            }
          }
#line 23236 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 10:
#line 2065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Single query, not terminated. */
            YYLIP->found_semicolon= NULL;
          }
#line 23245 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 13:
#line 2077 "sql_yacc.yy" /* yacc.c:1646  */
    { *parse_tree= (yyvsp[0].top_level_node); }
#line 23251 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 15:
#line 2083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23257 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 16:
#line 2084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23263 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 17:
#line 2085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23269 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 19:
#line 2087 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23275 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 20:
#line 2088 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23281 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 22:
#line 2090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23287 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 23:
#line 2091 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23293 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 24:
#line 2092 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23299 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 26:
#line 2094 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23305 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 27:
#line 2095 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23311 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 29:
#line 2097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23317 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 31:
#line 2099 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23323 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 33:
#line 2101 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23329 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 34:
#line 2102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23335 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 35:
#line 2103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23341 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 36:
#line 2104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23347 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 42:
#line 2110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23353 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 46:
#line 2114 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23359 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 47:
#line 2115 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23365 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 48:
#line 2116 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23371 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 50:
#line 2118 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23377 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 51:
#line 2119 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23383 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 54:
#line 2122 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23389 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 56:
#line 2124 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23395 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 57:
#line 2125 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23401 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 58:
#line 2126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23407 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 59:
#line 2127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23413 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 60:
#line 2128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23419 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 61:
#line 2129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23425 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 62:
#line 2130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23431 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 64:
#line 2132 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23437 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 65:
#line 2133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23443 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 66:
#line 2134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23449 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 67:
#line 2135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23455 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 69:
#line 2137 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23461 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 70:
#line 2138 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23467 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 72:
#line 2140 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23473 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 73:
#line 2141 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23479 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 75:
#line 2143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23485 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 79:
#line 2147 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23491 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 80:
#line 2148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23497 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 81:
#line 2149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23503 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 82:
#line 2150 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23509 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 85:
#line 2153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23515 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 86:
#line 2154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23521 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 88:
#line 2156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23527 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 89:
#line 2157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23533 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 90:
#line 2158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23539 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 92:
#line 2160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; CONTEXTUALIZE((yyvsp[0].set)); }
#line 23545 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 95:
#line 2163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23551 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 96:
#line 2164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23557 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 98:
#line 2166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23563 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 99:
#line 2167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23569 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 101:
#line 2169 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23575 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 102:
#line 2170 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23581 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 104:
#line 2172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23587 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 105:
#line 2173 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.top_level_node)= nullptr; }
#line 23593 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 106:
#line 2178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_DEALLOCATE_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23604 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 109:
#line 2193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_PREPARE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[-2].lexer.lex_str));
            /*
              We don't know know at this time whether there's a password
              in prepare_src, so we err on the side of caution.  Setting
              the flag will force a rewrite which will obscure all of
              prepare_src in the "Query" log line.  We'll see the actual
              query (with just the passwords obscured, if any) immediately
              afterwards in the "Prepare" log lines anyway, and then again
              in the "Execute" log line if and when prepare_src is executed.
            */
            lex->contains_plaintext_password= true;
          }
#line 23625 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 110:
#line 2213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= false;
          }
#line 23636 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 111:
#line 2220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->prepared_stmt_code= (yyvsp[0].lexer.lex_str);
            lex->prepared_stmt_code_is_varref= true;
          }
#line 23647 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 112:
#line 2230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_EXECUTE;
            lex->prepared_stmt_name= to_lex_cstring((yyvsp[0].lexer.lex_str));
          }
#line 23658 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 113:
#line 2237 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23664 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 118:
#line 2252 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            LEX_STRING *lexstr= (LEX_STRING*)sql_memdup(&(yyvsp[0].lexer.lex_str), sizeof(LEX_STRING));
            if (!lexstr || lex->prepared_stmt_params.push_back(lexstr))
              MYSQL_YYABORT;
          }
#line 23675 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 119:
#line 2264 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "HELP");
              MYSQL_YYABORT;
            }
          }
#line 23687 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 120:
#line 2272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_HELP;
            lex->help_arg= (yyvsp[0].lexer.lex_str).str;
          }
#line 23697 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 121:
#line 2283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex = Lex;
            lex->sql_command = SQLCOM_CHANGE_MASTER;
            /*
              Clear LEX_MASTER_INFO struct. repl_ignore_server_ids is cleared
              in THD::cleanup_after_query. So it is guaranteed to be empty here.
            */
            DBUG_ASSERT(Lex->mi.repl_ignore_server_ids.empty());
            lex->mi.set_unspecified();
          }
#line 23712 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 122:
#line 2294 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23718 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 123:
#line 2296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX* lex= thd->lex;
            DBUG_ASSERT(!lex->m_sql_cmd);
            lex->sql_command = SQLCOM_CHANGE_REPLICATION_FILTER;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_change_repl_filter();
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 23732 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 124:
#line 2306 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 23738 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 127:
#line 2315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_DB);
          }
#line 23749 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 128:
#line 2322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_DB);
          }
#line 23760 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 129:
#line 2329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
           filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_DO_TABLE);
          }
#line 23771 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 130:
#line 2336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_IGNORE_TABLE);
          }
#line 23782 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 131:
#line 2343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_WILD_DO_TABLE);
          }
#line 23793 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 132:
#line 2350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list),
                                             OPT_REPLICATE_WILD_IGNORE_TABLE);
          }
#line 23805 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 133:
#line 2358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Sql_cmd_change_repl_filter * filter_sql_cmd=
              (Sql_cmd_change_repl_filter*) Lex->m_sql_cmd;
            DBUG_ASSERT(filter_sql_cmd);
            filter_sql_cmd->set_filter_value((yyvsp[0].item_list), OPT_REPLICATE_REWRITE_DB);
          }
#line 23816 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 134:
#line 2367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23826 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 135:
#line 2373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23834 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 136:
#line 2380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23845 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 137:
#line 2387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23854 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 138:
#line 2395 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *db_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                               thd->charset());
            (yyval.item)= db_item;
          }
#line 23865 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 139:
#line 2404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23875 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 140:
#line 2410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23883 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 141:
#line 2416 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-3].item));
            (yyval.item_list)->push_back((yyvsp[-1].item));
          }
#line 23895 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 142:
#line 2424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].item_list)->push_back((yyvsp[-3].item));
            (yyvsp[-6].item_list)->push_back((yyvsp[-1].item));
            (yyval.item_list)= (yyvsp[-6].item_list);
          }
#line 23905 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 143:
#line 2432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23915 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 144:
#line 2438 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23923 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 145:
#line 2445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23934 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 146:
#line 2452 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23943 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 147:
#line 2460 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item_string *table_item= NEW_PTN Item_string((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length,
                                                         thd->charset());
            table_item->append(thd->strmake(".", 1), 1);
            table_item->append((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.item)= table_item;
          }
#line 23956 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 148:
#line 2472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
          }
#line 23966 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 149:
#line 2478 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= (yyvsp[-1].item_list);
          }
#line 23974 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 150:
#line 2485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= NEW_PTN List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 23985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 151:
#line 2492 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-2].item_list);
          }
#line 23994 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 152:
#line 2500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            Item *string_item= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                                   thd->charset());
            (yyval.item)= string_item;
          }
#line 24005 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 155:
#line 2515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.host = (yyvsp[0].lexer.lex_str).str;
          }
#line 24013 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 156:
#line 2519 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.network_namespace = (yyvsp[0].lexer.lex_str).str;
          }
#line 24021 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 157:
#line 2523 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.bind_addr = (yyvsp[0].lexer.lex_str).str;
          }
#line 24029 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 158:
#line 2527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.user = (yyvsp[0].lexer.lex_str).str;
          }
#line 24037 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 159:
#line 2531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.password = (yyvsp[0].lexer.lex_str).str;
            if (strlen((yyvsp[0].lexer.lex_str).str) > 32)
            {
              my_error(ER_CHANGE_MASTER_PASSWORD_LENGTH, MYF(0));
              MYSQL_YYABORT;
            }
            Lex->contains_plaintext_password= true;
          }
#line 24051 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 160:
#line 2541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.port = (yyvsp[0].ulong_num);
          }
#line 24059 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 161:
#line 2545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.connect_retry = (yyvsp[0].ulong_num);
          }
#line 24067 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 162:
#line 2549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.retry_count= (yyvsp[0].ulong_num);
            Lex->mi.retry_count_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24076 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 163:
#line 2554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) > MASTER_DELAY_MAX)
            {
              const char *msg= YYTHD->strmake((yylsp[0]).cpp.start, (yylsp[0]).cpp.end - (yylsp[0]).cpp.start);
              my_error(ER_MASTER_DELAY_VALUE_OUT_OF_RANGE, MYF(0),
                       msg, MASTER_DELAY_MAX);
            }
            else
              Lex->mi.sql_delay = (yyvsp[0].ulong_num);
          }
#line 24091 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 164:
#line 2565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24100 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 165:
#line 2570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_ca= (yyvsp[0].lexer.lex_str).str;
          }
#line 24108 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 166:
#line 2574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_capath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24116 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 167:
#line 2578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_version= (yyvsp[0].lexer.lex_str).str;
          }
#line 24124 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 169:
#line 2583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cert= (yyvsp[0].lexer.lex_str).str;
          }
#line 24132 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 170:
#line 2587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_cipher= (yyvsp[0].lexer.lex_str).str;
          }
#line 24140 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 171:
#line 2591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_key= (yyvsp[0].lexer.lex_str).str;
          }
#line 24148 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 172:
#line 2595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_verify_server_cert= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE : LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24157 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 173:
#line 2600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crl= (yyvsp[0].lexer.lex_str).str;
          }
#line 24165 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 174:
#line 2604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.ssl_crlpath= (yyvsp[0].lexer.lex_str).str;
          }
#line 24173 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 175:
#line 2608 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.public_key_path= (yyvsp[0].lexer.lex_str).str;
          }
#line 24181 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 176:
#line 2612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.get_public_key= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24191 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 177:
#line 2618 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *num= (yyvsp[0].item_num);
            ITEMIZE(num, &num);

            Lex->mi.heartbeat_period= (float) num->val_real();
            if (Lex->mi.heartbeat_period > SLAVE_MAX_HEARTBEAT_PERIOD ||
                Lex->mi.heartbeat_period < 0.0)
            {
               const char format[]= "%d";
               char buf[4*sizeof(SLAVE_MAX_HEARTBEAT_PERIOD) + sizeof(format)];
               sprintf(buf, format, SLAVE_MAX_HEARTBEAT_PERIOD);
               my_error(ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE, MYF(0), buf);
               MYSQL_YYABORT;
            }
            if (Lex->mi.heartbeat_period > slave_net_timeout)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX,
                           ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MAX));
            }
            if (Lex->mi.heartbeat_period < 0.001)
            {
              if (Lex->mi.heartbeat_period != 0.0)
              {
                push_warning(YYTHD, Sql_condition::SL_WARNING,
                             ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN,
                             ER_THD(YYTHD, ER_SLAVE_HEARTBEAT_VALUE_OUT_OF_RANGE_MIN));
                Lex->mi.heartbeat_period= 0.0;
              }
              Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_DISABLE;
            }
            Lex->mi.heartbeat_opt=  LEX_MASTER_INFO::LEX_MI_ENABLE;
          }
#line 24229 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 178:
#line 2652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids_opt= LEX_MASTER_INFO::LEX_MI_ENABLE;
           }
#line 24237 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 179:
#line 2656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.compression_algorithm = (yyvsp[0].lexer.lex_str).str;
           }
#line 24245 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 180:
#line 2660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.zstd_compression_level = (yyvsp[0].ulong_num);
           }
#line 24253 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 181:
#line 2664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.auto_position= (yyvsp[0].ulong_num) ?
              LEX_MASTER_INFO::LEX_MI_ENABLE :
              LEX_MASTER_INFO::LEX_MI_DISABLE;
          }
#line 24263 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 183:
#line 2671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) != 0 && (yyvsp[0].ulong_num) != 1) {
              const char* wrong_value = YYTHD->strmake((yylsp[0]).raw.start, (yylsp[0]).raw.length());
              my_error(ER_REQUIRE_ROW_FORMAT_INVALID_VALUE, MYF(0), wrong_value);
            }
            else {
              Lex->mi.require_row_format = (yyvsp[0].ulong_num);
            }
          }
#line 24277 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 189:
#line 2692 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.repl_ignore_server_ids.push_back((yyvsp[0].ulong_num));
          }
#line 24285 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 190:
#line 2698 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= false;
            Lex->mi.privilege_checks_username= (yyvsp[0].lex_user)->user.str;
            Lex->mi.privilege_checks_hostname= (yyvsp[0].lex_user)->host.str;
          }
#line 24295 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 191:
#line 2704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.privilege_checks_none= true;
            Lex->mi.privilege_checks_username= NULL;
            Lex->mi.privilege_checks_hostname= NULL;
          }
#line 24305 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 192:
#line 2713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_STREAM;
          }
#line 24313 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 193:
#line 2717 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_ON;
          }
#line 24321 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 194:
#line 2721 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.require_table_primary_key_check= LEX_MASTER_INFO::LEX_MI_PK_CHECK_OFF;
          }
#line 24329 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 195:
#line 2728 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_STRING;
            Lex->mi.tls_ciphersuites_string= (yyvsp[0].lexer.lex_str).str;
          }
#line 24338 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 196:
#line 2733 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.tls_ciphersuites = LEX_MASTER_INFO::SPECIFIED_NULL;
            Lex->mi.tls_ciphersuites_string = NULL;
          }
#line 24347 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 197:
#line 2741 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24355 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 198:
#line 2745 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.pos = (yyvsp[0].ulonglong_number);
            /*
               If the user specified a value < BIN_LOG_HEADER_SIZE, adjust it
               instead of causing subsequent errors.
               We need to do it in this file, because only there we know that
               MASTER_LOG_POS has been explicitely specified. On the contrary
               in change_master() (sql_repl.cc) we cannot distinguish between 0
               (MASTER_LOG_POS explicitely specified as 0) and 0 (unspecified),
               whereas we want to distinguish (specified 0 means "read the binlog
               from 0" (4 in fact), unspecified means "don't change the position
               (keep the preceding value)").
            */
            Lex->mi.pos = max<ulonglong>(BIN_LOG_HEADER_SIZE, Lex->mi.pos);
          }
#line 24375 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 199:
#line 2761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_name = (yyvsp[0].lexer.lex_str).str;
          }
#line 24383 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 200:
#line 2765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.relay_log_pos = (yyvsp[0].ulong_num);
            /* Adjust if < BIN_LOG_HEADER_SIZE (same comment as Lex->mi.pos) */
            Lex->mi.relay_log_pos = max<ulong>(BIN_LOG_HEADER_SIZE,
                                               Lex->mi.relay_log_pos);
          }
#line 24394 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 201:
#line 2775 "sql_yacc.yy" /* yacc.c:1646  */
    {
         Lex->mi.channel= "";
         Lex->mi.for_channel= false;
       }
#line 24403 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 202:
#line 2780 "sql_yacc.yy" /* yacc.c:1646  */
    {
         /*
           channel names are case insensitive. This means, even the results
           displayed to the user are converted to lower cases.
           system_charset_info is utf8_general_ci as required by channel name
           restrictions
         */
         my_casedn_str(system_charset_info, (yyvsp[0].lexer.lex_str).str);
         Lex->mi.channel= (yyvsp[0].lexer.lex_str).str;
         Lex->mi.for_channel= true;
       }
#line 24419 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 203:
#line 2796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table),
                                             (yyvsp[-2].table_element_list),
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24432 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 204:
#line 2806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-4].is_not_empty), (yyvsp[-2].is_not_empty), (yyvsp[-1].table),
                                             NULL,
                                             (yyvsp[0].create_table_tail).opt_create_table_options,
                                             (yyvsp[0].create_table_tail).opt_partitioning,
                                             (yyvsp[0].create_table_tail).on_duplicate,
                                             (yyvsp[0].create_table_tail).opt_query_expression);
          }
#line 24445 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 205:
#line 2816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-5].is_not_empty), (yyvsp[-3].is_not_empty), (yyvsp[-2].table), (yyvsp[0].table));
          }
#line 24453 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 206:
#line 2821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_table_stmt(YYMEM_ROOT, (yyvsp[-7].is_not_empty), (yyvsp[-5].is_not_empty), (yyvsp[-4].table), (yyvsp[-1].table));
          }
#line 24461 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 207:
#line 2828 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_role(!!(yyvsp[-1].is_not_empty), (yyvsp[0].user_list));
          }
#line 24469 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 208:
#line 2838 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_resource_group(to_lex_cstring((yyvsp[-6].lexer.lex_str)), (yyvsp[-3].resource_group_type), (yyvsp[-2].resource_group_vcpu_list_type), (yyvsp[-1].resource_group_priority_type),
                                                 (yyvsp[0].resource_group_state_type).is_default ? true :
                                                 (yyvsp[0].resource_group_state_type).value);
          }
#line 24479 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 209:
#line 2847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 24491 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 210:
#line 2855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CREATE_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            lex->create_info->options= (yyvsp[-3].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24502 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 211:
#line 2862 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 24508 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 212:
#line 2866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CREATE_USER;
            lex->default_roles= (yyvsp[-3].user_list);
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            lex->create_info->options= (yyvsp[-5].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
          }
#line 24522 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 213:
#line 2877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{CREATE_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24545 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 214:
#line 2897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_tablespace{(yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24567 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 215:
#line 2916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_create_undo_tablespace{
              CREATE_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 24590 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 216:
#line 2936 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CREATE_SERVER;
            if ((yyvsp[-8].lexer.lex_str).length == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "server name", "");
              MYSQL_YYABORT;
            }
            Lex->server_options.m_server_name= (yyvsp[-8].lexer.lex_str);
            Lex->server_options.set_scheme((yyvsp[-4].lexer.lex_str));
            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_create_server(&Lex->server_options);
          }
#line 24607 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 217:
#line 2953 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), true, false);
          }
#line 24615 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 218:
#line 2958 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_srs((yyvsp[-1].ulonglong_number), *(yyvsp[0].sql_cmd_srs_attributes), false, (yyvsp[-2].is_not_empty));
          }
#line 24623 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 219:
#line 2965 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sql_cmd_srs_attributes) = NEW_PTN Sql_cmd_srs_attributes();
            if (!(yyval.sql_cmd_srs_attributes))
              MYSQL_YYABORT_ERROR(ER_DA_OOM, MYF(0)); /* purecov: inspected */
          }
#line 24633 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 220:
#line 2971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->srs_name.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "NAME");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->srs_name= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24649 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 221:
#line 2983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->definition.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DEFINITION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->definition= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24665 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 222:
#line 2996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-5].sql_cmd_srs_attributes)->organization.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "ORGANIZATION");
            }
            else
            {
              (yyvsp[-5].sql_cmd_srs_attributes)->organization= (yyvsp[-3].lexer.lex_str);
              (yyvsp[-5].sql_cmd_srs_attributes)->organization_coordsys_id= (yyvsp[0].ulonglong_number);
            }
          }
#line 24682 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 223:
#line 3009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].sql_cmd_srs_attributes)->description.str != nullptr)
            {
              MYSQL_YYABORT_ERROR(ER_SRS_MULTIPLE_ATTRIBUTE_DEFINITIONS, MYF(0),
                                  "DESCRIPTION");
            }
            else
            {
              (yyvsp[-2].sql_cmd_srs_attributes)->description= (yyvsp[0].lexer.lex_str);
            }
          }
#line 24698 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 224:
#line 3024 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= 0;
          }
#line 24706 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 225:
#line 3029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[0].user_list);
          }
#line 24714 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 226:
#line 3038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, (yyvsp[-10].key_type), (yyvsp[-8].lexer.lex_str), (yyvsp[-7].index_option),
                                             (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24725 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 227:
#line 3046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_FULLTEXT, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24736 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 228:
#line 3054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_create_index_stmt(YYMEM_ROOT, KEYTYPE_SPATIAL, (yyvsp[-7].lexer.lex_str),
                                             NULL, (yyvsp[-5].table), (yyvsp[-3].index_column_list), (yyvsp[-1].index_options),
                                             (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                             (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 24747 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 231:
#line 3069 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_username((yyvsp[0].lexer.lex_str));
          }
#line 24755 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 232:
#line 3073 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_host((yyvsp[0].lexer.lex_str));
          }
#line 24763 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 233:
#line 3077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_db((yyvsp[0].lexer.lex_str));
          }
#line 24771 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 234:
#line 3081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_owner((yyvsp[0].lexer.lex_str));
          }
#line 24779 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 235:
#line 3085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_password((yyvsp[0].lexer.lex_str));
            Lex->contains_plaintext_password= true;
          }
#line 24788 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 236:
#line 3090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_socket((yyvsp[0].lexer.lex_str));
          }
#line 24796 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 237:
#line 3094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->server_options.set_port((yyvsp[0].ulong_num));
          }
#line 24804 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 238:
#line 3101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex=Lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            if (!(lex->event_parse_data= new (thd->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            lex->event_parse_data->identifier= (yyvsp[0].spname);
            lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;

            lex->sql_command= SQLCOM_CREATE_EVENT;
            /* We need that for disallowing subqueries */
          }
#line 24824 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 239:
#line 3121 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_CREATE_EVENT;
          }
#line 24836 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 240:
#line 3132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[-1].item), &(yyvsp[-1].item));

            Lex->event_parse_data->item_expression= (yyvsp[-1].item);
            Lex->event_parse_data->interval= (yyvsp[0].interval);
          }
#line 24847 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 242:
#line 3141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_execute_at= (yyvsp[0].item);
          }
#line 24857 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 243:
#line 3149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24863 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 244:
#line 3151 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::ENABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24873 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 245:
#line 3157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::SLAVESIDE_DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24883 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 246:
#line 3163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->status= Event_parse_data::DISABLED;
            Lex->event_parse_data->status_changed= true;
            (yyval.num)= 1;
          }
#line 24893 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 247:
#line 3172 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_func_now_local(0);
            if (item == NULL)
              MYSQL_YYABORT;
            Lex->event_parse_data->item_starts= item;
          }
#line 24904 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 248:
#line 3179 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_starts= (yyvsp[0].item);
          }
#line 24914 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 250:
#line 3189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            Lex->event_parse_data->item_ends= (yyvsp[0].item);
          }
#line 24924 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 251:
#line 3197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24930 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 253:
#line 3203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_PRESERVE;
            (yyval.num)= 1;
          }
#line 24940 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 254:
#line 3209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->on_completion=
                                  Event_parse_data::ON_COMPLETION_DROP;
            (yyval.num)= 1;
          }
#line 24950 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 255:
#line 3217 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 24956 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 256:
#line 3219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->event_parse_data->comment= (yyvsp[0].lexer.lex_str);
            (yyval.num)= 1;
          }
#line 24965 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 257:
#line 3226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            /*
              This stops the following :
              - CREATE EVENT ... DO CREATE EVENT ...;
              - ALTER  EVENT ... DO CREATE EVENT ...;
              - CREATE EVENT ... DO ALTER EVENT DO ....;
              - CREATE PROCEDURE ... BEGIN CREATE EVENT ... END|
              This allows:
              - CREATE EVENT ... DO DROP EVENT yyy;
              - CREATE EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO ALTER EVENT yyy;
                (the nested ALTER EVENT can have anything but DO clause)
              - ALTER  EVENT ... DO DROP EVENT yyy;
              - CREATE PROCEDURE ... BEGIN ALTER EVENT ... END|
                (the nested ALTER EVENT can have anything but DO clause)
              - CREATE PROCEDURE ... BEGIN DROP EVENT ... END|
            */
            if (lex->sphead)
            {
              my_error(ER_EVENT_RECURSION_FORBIDDEN, MYF(0));
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd,
                                          enum_sp_type::EVENT,
                                          lex->event_parse_data->identifier);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;

            /*
              Set a body start to the end of the last preprocessed token
              before ev_sql_stmt:
            */
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 25015 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 258:
#line 3272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            sp_finish_parsing(thd);

            lex->sp_chistics.suid= SP_IS_SUID;  //always the definer!
            lex->event_parse_data->body_changed= true;
          }
#line 25029 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 272:
#line 3301 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!(yyvsp[-2].lexer.lex_str).str ||
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            (yyval.spname)= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(YYTHD);
          }
#line 25047 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 273:
#line 3315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_CSTRING db;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }
            if (lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            (yyval.spname)= new (YYMEM_ROOT) sp_name(db, (yyvsp[0].lexer.lex_str), false);
            if ((yyval.spname) == NULL)
              MYSQL_YYABORT;
            (yyval.spname)->init_qname(thd);
          }
#line 25067 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 274:
#line 3333 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25073 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 275:
#line 3334 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25079 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 276:
#line 3338 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25085 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 277:
#line 3339 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25091 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 278:
#line 3345 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.comment= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 25097 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 279:
#line 3347 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Just parse it, we only have one language for now. */ }
#line 25103 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 280:
#line 3349 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_NO_SQL; }
#line 25109 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 281:
#line 3351 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_CONTAINS_SQL; }
#line 25115 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 282:
#line 3353 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_READS_SQL_DATA; }
#line 25121 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 283:
#line 3355 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.daccess= SP_MODIFIES_SQL_DATA; }
#line 25127 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 284:
#line 3357 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25133 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 285:
#line 3362 "sql_yacc.yy" /* yacc.c:1646  */
    { }
#line 25139 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 286:
#line 3363 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= true; }
#line 25145 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 287:
#line 3364 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sp_chistics.detistic= false; }
#line 25151 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 288:
#line 3369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_SUID;
          }
#line 25159 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 289:
#line 3373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sp_chistics.suid= SP_IS_NOT_SUID;
          }
#line 25167 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 290:
#line 3380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_call((yyvsp[-1].spname), (yyvsp[0].item_list2));
          }
#line 25175 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 291:
#line 3386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 25181 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 292:
#line 3388 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.item_list2)= (yyvsp[-1].item_list2);
            }
#line 25189 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 297:
#line 3406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   sp_variable::MODE_IN);

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25241 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 302:
#line 3468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (sp_check_name(&(yyvsp[-2].lexer.lex_str)))
              MYSQL_YYABORT;

            if (pctx->find_variable((yyvsp[-2].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_PARAM, MYF(0), (yyvsp[-2].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            sp_variable *spvar= pctx->add_variable(thd,
                                                   (yyvsp[-2].lexer.lex_str),
                                                   field_type,
                                                   (sp_variable::enum_mode) (yyvsp[-3].num));

            if (spvar->field_def.init(thd, "", field_type,
                                      (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                      (yyvsp[-1].type)->get_type_flags(),
                                      NULL, NULL, &NULL_CSTR, 0,
                                      (yyvsp[-1].type)->get_interval_list(),
                                      cs ? cs : thd->variables.collation_database,
                                      (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                      nullptr, nullptr, {},
                                      dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(thd,
                                        &spvar->field_def))
            {
              MYSQL_YYABORT;
            }
            spvar->field_def.field_name= spvar->name.str;
            spvar->field_def.is_nullable= true;
          }
#line 25292 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 303:
#line 3517 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25298 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 304:
#line 3518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_IN; }
#line 25304 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 305:
#line 3519 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_OUT; }
#line 25310 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 306:
#line 3520 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_variable::MODE_INOUT; }
#line 25316 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 307:
#line 3524 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25322 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 309:
#line 3529 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25328 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 311:
#line 3535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25336 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 312:
#line 3539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* We check for declarations out of (standard) order this way
              because letting the grammar rules reflect it caused tricky
               shift/reduce conflicts with the wrong result. (And we get
               better error handling this way.) */
            if (((yyvsp[-1].spblock).vars || (yyvsp[-1].spblock).conds) && ((yyvsp[-2].spblock).curs || (yyvsp[-2].spblock).hndlrs))
            { /* Variable or condition following cursor or handler */
              my_error(ER_SP_VARCOND_AFTER_CURSHNDLR, MYF(0));
              MYSQL_YYABORT;
            }
            if ((yyvsp[-1].spblock).curs && (yyvsp[-2].spblock).hndlrs)
            { /* Cursor following handler */
              my_error(ER_SP_CURSOR_AFTER_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spblock).vars= (yyvsp[-2].spblock).vars + (yyvsp[-1].spblock).vars;
            (yyval.spblock).conds= (yyvsp[-2].spblock).conds + (yyvsp[-1].spblock).conds;
            (yyval.spblock).hndlrs= (yyvsp[-2].spblock).hndlrs + (yyvsp[-1].spblock).hndlrs;
            (yyval.spblock).curs= (yyvsp[-2].spblock).curs + (yyvsp[-1].spblock).curs;
          }
#line 25361 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 313:
#line 3567 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->reset_lex(thd);
            lex= thd->lex;

            pctx->declare_var_boundary((yyvsp[-3].num));

            CONTEXTUALIZE((yyvsp[-2].type));
            enum enum_field_types var_type= (yyvsp[-2].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-2].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[-1].lexer.charset), &cs))
              MYSQL_YYABORT;

            uint num_vars= pctx->context_var_count();
            Item *dflt_value_item= (yyvsp[0].sp_default).expr;

            LEX_CSTRING dflt_value_query= EMPTY_CSTR;

            if (dflt_value_item)
            {
              ITEMIZE(dflt_value_item, &dflt_value_item);
              const char *expr_start_ptr= (yyvsp[0].sp_default).expr_start;
              if (lex->is_metadata_used())
              {
                dflt_value_query= make_string(thd, expr_start_ptr,
                                              (yylsp[0]).raw.end);
                if (!dflt_value_query.str)
                  MYSQL_YYABORT;
              }
            }
            else
            {
              dflt_value_item= NEW_PTN Item_null();

              if (dflt_value_item == NULL)
                MYSQL_YYABORT;
            }

            // We can have several variables in DECLARE statement.
            // We need to create an sp_instr_set instruction for each variable.

            for (uint i = num_vars-(yyvsp[-3].num) ; i < num_vars ; i++)
            {
              uint var_idx= pctx->var_context2runtime(i);
              sp_variable *spvar= pctx->find_variable(var_idx);

              if (!spvar)
                MYSQL_YYABORT;

              spvar->type= var_type;
              spvar->default_value= dflt_value_item;

              if (spvar->field_def.init(thd, "", var_type,
                                        (yyvsp[-2].type)->get_length(), (yyvsp[-2].type)->get_dec(),
                                        (yyvsp[-2].type)->get_type_flags(),
                                        NULL, NULL, &NULL_CSTR, 0,
                                        (yyvsp[-2].type)->get_interval_list(),
                                        cs ? cs : thd->variables.collation_database,
                                        (yyvsp[-1].lexer.charset) != nullptr, (yyvsp[-2].type)->get_uint_geom_type(),
                                        nullptr, nullptr, {},
                                        dd::Column::enum_hidden_type::HT_VISIBLE))
              {
                MYSQL_YYABORT;
              }

              if (prepare_sp_create_field(thd, &spvar->field_def))
                MYSQL_YYABORT;

              spvar->field_def.field_name= spvar->name.str;
              spvar->field_def.is_nullable= true;

              /* The last instruction is responsible for freeing LEX. */

              sp_instr_set *is= NEW_PTN sp_instr_set(sp->instructions(),
                                                     lex,
                                                     var_idx,
                                                     dflt_value_item,
                                                     dflt_value_query,
                                                     (i == num_vars - 1));

              if (!is || sp->add_instr(thd, is))
                MYSQL_YYABORT;
            }

            pctx->declare_var_boundary(0);
            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
            (yyval.spblock).vars= (yyvsp[-3].num);
            (yyval.spblock).conds= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
          }
#line 25460 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 314:
#line 3662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_condition((yyvsp[-3].lexer.lex_str), true))
            {
              my_error(ER_SP_DUP_COND, MYF(0), (yyvsp[-3].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if(pctx->add_condition(thd, (yyvsp[-3].lexer.lex_str), (yyvsp[0].spcondvalue)))
              MYSQL_YYABORT;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECLARE COND FOR
            (yyval.spblock).vars= (yyval.spblock).hndlrs= (yyval.spblock).curs= 0;
            (yyval.spblock).conds= 1;
          }
#line 25481 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 315:
#line 3679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *handler_pctx=
              parent_pctx->push_context(thd, sp_pcontext::HANDLER_SCOPE);

            sp_handler *h=
              parent_pctx->add_handler(thd, (sp_handler::enum_type) (yyvsp[-2].num));

            lex->set_sp_current_parsing_ctx(handler_pctx);

            sp_instr_hpush_jump *i=
              NEW_PTN sp_instr_hpush_jump(sp->instructions(), handler_pctx, h);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            if ((yyvsp[-2].num) == sp_handler::CONTINUE)
            {
              // Mark the end of CONTINUE handler scope.

              if (sp->m_parser_data.add_backpatch_entry(
                    i, handler_pctx->last_label()))
              {
                MYSQL_YYABORT;
              }
            }

            if (sp->m_parser_data.add_backpatch_entry(
                  i, handler_pctx->push_label(thd, EMPTY_CSTR, 0)))
            {
              MYSQL_YYABORT;
            }

            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // DECL HANDLER FOR
          }
#line 25526 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 316:
#line 3720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *hlab= pctx->pop_label(); /* After this hdlr */

            if ((yyvsp[-5].num) == sp_handler::CONTINUE)
            {
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }
            else
            {  /* EXIT or UNDO handler, just jump to the end of the block */
              sp_instr_hreturn *i=
                NEW_PTN sp_instr_hreturn(sp->instructions(), pctx);

              if (i == NULL ||
                  sp->add_instr(thd, i) ||
                  sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()))
                MYSQL_YYABORT;
            }

            sp->m_parser_data.do_backpatch(hlab, sp->instructions());

            lex->set_sp_current_parsing_ctx(pctx->pop_context());

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).curs= 0;
            (yyval.spblock).hndlrs= 1;
          }
#line 25564 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 317:
#line 3757 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$5*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr((yylsp[0]).raw.end);
          }
#line 25577 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 318:
#line 3766 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$7*/
            MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *cursor_lex= Lex;
            sp_head *sp= cursor_lex->sphead;

            DBUG_ASSERT(cursor_lex->sql_command == SQLCOM_SELECT);

            if (cursor_lex->result)
            {
              my_error(ER_SP_BAD_CURSOR_SELECT, MYF(0));
              MYSQL_YYABORT;
            }

            cursor_lex->sp_lex_in_use= true;

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;

            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            uint offp;

            if (pctx->find_cursor((yyvsp[-4].lexer.lex_str), &offp, true))
            {
              my_error(ER_SP_DUP_CURS, MYF(0), (yyvsp[-4].lexer.lex_str).str);
              delete cursor_lex;
              MYSQL_YYABORT;
            }

            LEX_CSTRING cursor_query= EMPTY_CSTR;

            if (cursor_lex->is_metadata_used())
            {
              cursor_query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!cursor_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_cpush *i=
              NEW_PTN sp_instr_cpush(sp->instructions(), pctx,
                                     cursor_lex, cursor_query,
                                     pctx->current_cursor_count());

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                pctx->add_cursor((yyvsp[-4].lexer.lex_str)))
            {
              MYSQL_YYABORT;
            }

            (yyval.spblock).vars= (yyval.spblock).conds= (yyval.spblock).hndlrs= 0;
            (yyval.spblock).curs= 1;
          }
#line 25642 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 319:
#line 3829 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::EXIT; }
#line 25648 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 320:
#line 3830 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= sp_handler::CONTINUE; }
#line 25654 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 321:
#line 3836 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 25660 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 322:
#line 3838 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)+= 1; }
#line 25666 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 323:
#line 3843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_pcontext *parent_pctx= pctx->parent_context();

            if (parent_pctx->check_duplicate_handler((yyvsp[0].spcondvalue)))
            {
              my_error(ER_SP_DUP_HANDLER, MYF(0));
              MYSQL_YYABORT;
            }
            else
            {
              sp_instr_hpush_jump *i=
                (sp_instr_hpush_jump *)sp->last_instruction();

              i->add_condition((yyvsp[0].spcondvalue));
            }
          }
#line 25690 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 324:
#line 3866 "sql_yacc.yy" /* yacc.c:1646  */
    { /* mysql errno */
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_WRONG_VALUE, MYF(0), "CONDITION", "0");
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].ulong_num));
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25705 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 326:
#line 3881 "sql_yacc.yy" /* yacc.c:1646  */
    { /* SQLSTATE */

            /*
              An error is triggered:
                - if the specified string is not a valid SQLSTATE,
                - or if it represents the completion condition -- it is not
                  allowed to SIGNAL, or declare a handler for the completion
                  condition.
            */
            if (!is_sqlstate_valid(&(yyvsp[0].lexer.lex_str)) || is_sqlstate_completion((yyvsp[0].lexer.lex_str).str))
            {
              my_error(ER_SP_BAD_SQLSTATE, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= NEW_PTN sp_condition_value((yyvsp[0].lexer.lex_str).str);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25728 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 327:
#line 3902 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25734 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 328:
#line 3903 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 25740 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 329:
#line 3908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= (yyvsp[0].spcondvalue);
          }
#line 25748 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 330:
#line 3912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            (yyval.spcondvalue)= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if ((yyval.spcondvalue) == NULL)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 25765 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 331:
#line 3925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::WARNING);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25775 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 332:
#line 3931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::NOT_FOUND);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25785 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 333:
#line 3937 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.spcondvalue)= NEW_PTN sp_condition_value(sp_condition_value::EXCEPTION);
            if ((yyval.spcondvalue) == NULL)
              MYSQL_YYABORT;
          }
#line 25795 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 334:
#line 3946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_SIGNAL;
            lex->m_sql_cmd= NEW_PTN Sql_cmd_signal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 25809 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 335:
#line 3959 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (!pctx)
            {
              /* SIGNAL foo cannot be used outside of stored programs */
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_condition_value *cond= pctx->find_condition((yyvsp[0].lexer.lex_str), false);

            if (!cond)
            {
              my_error(ER_SP_COND_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            if (cond->type != sp_condition_value::SQLSTATE)
            {
              my_error(ER_SIGNAL_BAD_CONDITION_TYPE, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.spcondvalue)= cond;
          }
#line 25839 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 336:
#line 3985 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25845 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 337:
#line 3990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= NULL; }
#line 25851 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 338:
#line 3992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.spcondvalue)= (yyvsp[0].spcondvalue); }
#line 25857 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 339:
#line 3997 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= NEW_PTN Set_signal_information(); }
#line 25863 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 340:
#line 3999 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.signal_item_list)= (yyvsp[0].signal_item_list); }
#line 25869 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 341:
#line 4004 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= NEW_PTN Set_signal_information();
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 25879 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 342:
#line 4011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.signal_item_list)= (yyvsp[-4].signal_item_list);
            if ((yyval.signal_item_list)->set_item((yyvsp[-2].da_condition_item_name), (yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 25889 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 343:
#line 4023 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 25895 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 344:
#line 4025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            if ((yyvsp[0].item)->type() == Item::FUNC_ITEM)
            {
              Item_func *item= (Item_func*) (yyvsp[0].item);
              if (item->functype() == Item_func::SUSERVAR_FUNC)
              {
                /*
                  Don't allow the following syntax:
                    SIGNAL/RESIGNAL ...
                    SET <signal condition item name> = @foo := expr
                */
                YYTHD->syntax_error();
                MYSQL_YYABORT;
              }
            }
            (yyval.item)= (yyvsp[0].item);
          }
#line 25919 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 345:
#line 4045 "sql_yacc.yy" /* yacc.c:1646  */
    { ITEMIZE((yyvsp[0].item), &(yyval.item)); }
#line 25925 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 346:
#line 4051 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CLASS_ORIGIN; }
#line 25931 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 347:
#line 4053 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SUBCLASS_ORIGIN; }
#line 25937 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 348:
#line 4055 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_CATALOG; }
#line 25943 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 349:
#line 4057 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_SCHEMA; }
#line 25949 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 350:
#line 4059 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CONSTRAINT_NAME; }
#line 25955 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 351:
#line 4061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CATALOG_NAME; }
#line 25961 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 352:
#line 4063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_SCHEMA_NAME; }
#line 25967 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 353:
#line 4065 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_TABLE_NAME; }
#line 25973 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 354:
#line 4067 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_COLUMN_NAME; }
#line 25979 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 355:
#line 4069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_CURSOR_NAME; }
#line 25985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 356:
#line 4071 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MESSAGE_TEXT; }
#line 25991 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 357:
#line 4073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.da_condition_item_name)= CIN_MYSQL_ERRNO; }
#line 25997 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 358:
#line 4078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sql_command= SQLCOM_RESIGNAL;
            lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // RESIGNAL doesn't clear diagnostics
            lex->m_sql_cmd= NEW_PTN Sql_cmd_resignal((yyvsp[-1].spcondvalue), (yyvsp[0].signal_item_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26012 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 359:
#line 4092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Diagnostics_information *info= (yyvsp[0].diag_info);

            info->set_which_da((yyvsp[-2].diag_area));

            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // GET DIAGS doesn't clear them.
            Lex->sql_command= SQLCOM_GET_DIAGNOSTICS;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_get_diagnostics(info);

            if (Lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
          }
#line 26029 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 360:
#line 4108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26035 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 361:
#line 4110 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::CURRENT_AREA; }
#line 26041 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 362:
#line 4112 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.diag_area)= Diagnostics_information::STACKED_AREA; }
#line 26047 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 363:
#line 4117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Statement_information((yyvsp[0].stmt_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26057 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 364:
#line 4123 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.diag_info)= NEW_PTN Condition_information((yyvsp[-1].item), (yyvsp[0].cond_info_list));
            if ((yyval.diag_info) == NULL)
              MYSQL_YYABORT;
          }
#line 26067 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 365:
#line 4132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_list)= NEW_PTN List<Statement_information_item>;
            if ((yyval.stmt_info_list) == NULL || (yyval.stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
          }
#line 26077 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 366:
#line 4138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].stmt_info_list)->push_back((yyvsp[0].stmt_info_item)))
              MYSQL_YYABORT;
            (yyval.stmt_info_list)= (yyvsp[-2].stmt_info_list);
          }
#line 26087 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 367:
#line 4147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.stmt_info_item)= NEW_PTN Statement_information_item((yyvsp[0].stmt_info_item_name), (yyvsp[-2].item));
            if ((yyval.stmt_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26097 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 368:
#line 4155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /*
              NOTE: lex->sphead is NULL if we're parsing something like
              'GET DIAGNOSTICS v' outside a stored program. We should throw
              ER_SP_UNDECLARED_VAR in such cases.
            */

            if (!sp)
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            (yyval.item)=
              create_item_for_sp_var(
                thd, to_lex_cstring((yyvsp[0].lexer.lex_str)), NULL,
                sp->m_parser_data.get_current_stmt_start_ptr(),
                (yylsp[0]).raw.start,
                (yylsp[0]).raw.end);

            if ((yyval.item) == NULL)
              MYSQL_YYABORT;
          }
#line 26129 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 369:
#line 4183 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_user_var((yyloc), (yyvsp[0].lexer.lex_str));
            ITEMIZE((yyval.item), &(yyval.item));
          }
#line 26138 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 370:
#line 4191 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::NUMBER; }
#line 26144 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 371:
#line 4193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.stmt_info_item_name)= Statement_information_item::ROW_COUNT; }
#line 26150 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 372:
#line 4202 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 26156 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 373:
#line 4207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_list)= NEW_PTN List<Condition_information_item>;
            if ((yyval.cond_info_list) == NULL || (yyval.cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
          }
#line 26166 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 374:
#line 4213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].cond_info_list)->push_back((yyvsp[0].cond_info_item)))
              MYSQL_YYABORT;
            (yyval.cond_info_list)= (yyvsp[-2].cond_info_list);
          }
#line 26176 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 375:
#line 4222 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cond_info_item)= NEW_PTN Condition_information_item((yyvsp[0].cond_info_item_name), (yyvsp[-2].item));
            if ((yyval.cond_info_item) == NULL)
              MYSQL_YYABORT;
          }
#line 26186 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 376:
#line 4230 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CLASS_ORIGIN; }
#line 26192 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 377:
#line 4232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SUBCLASS_ORIGIN; }
#line 26198 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 378:
#line 4234 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_CATALOG; }
#line 26204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 379:
#line 4236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_SCHEMA; }
#line 26210 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 380:
#line 4238 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CONSTRAINT_NAME; }
#line 26216 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 381:
#line 4240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CATALOG_NAME; }
#line 26222 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 382:
#line 4242 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::SCHEMA_NAME; }
#line 26228 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 383:
#line 4244 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::TABLE_NAME; }
#line 26234 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 384:
#line 4246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::COLUMN_NAME; }
#line 26240 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 385:
#line 4248 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::CURSOR_NAME; }
#line 26246 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 386:
#line 4250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MESSAGE_TEXT; }
#line 26252 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 387:
#line 4252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::MYSQL_ERRNO; }
#line 26258 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 388:
#line 4254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.cond_info_item_name)= Condition_information_item::RETURNED_SQLSTATE; }
#line 26264 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 389:
#line 4259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= 1;
          }
#line 26288 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 390:
#line 4279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* NOTE: field definition is filled in sp_decl section. */

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            if (pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, true))
            {
              my_error(ER_SP_DUP_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            pctx->add_variable(thd,
                               (yyvsp[0].lexer.lex_str),
                               MYSQL_TYPE_DECIMAL,
                               sp_variable::MODE_IN);
            (yyval.num)= (yyvsp[-2].num) + 1;
          }
#line 26312 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 391:
#line 4302 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= NULL;
            (yyval.sp_default).expr = NULL;
          }
#line 26321 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 392:
#line 4307 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sp_default).expr_start= (yylsp[-1]).raw.end;
            (yyval.sp_default).expr= (yyvsp[0].item);
          }
#line 26330 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 406:
#line 4331 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sphead->m_parser_data.new_cont_backpatch(); }
#line 26336 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 407:
#line 4333 "sql_yacc.yy" /* yacc.c:1646  */
    {
            sp_head *sp= Lex->sphead;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 26346 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 408:
#line 4341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
            sp->m_parser_data.set_current_stmt_start_ptr(yylloc.raw.start);
          }
#line 26359 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 409:
#line 4350 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].top_level_node) != nullptr)
              MAKE_CMD((yyvsp[0].top_level_node));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->m_flags|= sp_get_flags_for_command(lex);
            if (lex->sql_command == SQLCOM_CHANGE_DB)
            { /* "USE db" doesn't work in a procedure */
              my_error(ER_SP_BADSTATEMENT, MYF(0), "USE");
              MYSQL_YYABORT;
            }
            /*
              Don't add an instruction for SET statements, since all
              instructions for them were already added during processing
              of "set" rule.
            */
            DBUG_ASSERT((lex->sql_command != SQLCOM_SET_OPTION &&
                         lex->sql_command != SQLCOM_SET_PASSWORD) ||
                        lex->var_list.is_empty());
            if (lex->sql_command != SQLCOM_SET_OPTION &&
                lex->sql_command != SQLCOM_SET_PASSWORD)
            {
              /* Extract the query statement from the tokenizer. */

              LEX_CSTRING query=
                make_string(thd,
                            sp->m_parser_data.get_current_stmt_start_ptr(),
                            (yylsp[0]).raw.end);

              if (!query.str)
                MYSQL_YYABORT;

              /* Add instruction. */

              sp_instr_stmt *i=
                NEW_PTN sp_instr_stmt(sp->instructions(), lex, query);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if (sp->restore_lex(thd))
              MYSQL_YYABORT;
          }
#line 26411 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 410:
#line 4401 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26423 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 411:
#line 4409 "sql_yacc.yy" /* yacc.c:1646  */
    {             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;

            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Check that this is a stored function. */

            if (sp->m_type != enum_sp_type::FUNCTION)
            {
              my_error(ER_SP_BADRETURN, MYF(0));
              MYSQL_YYABORT;
            }

            /* Indicate that we've reached RETURN statement. */

            sp->m_flags|= sp_head::HAS_RETURN;

            /* Add instruction. */

            sp_instr_freturn *i=
              NEW_PTN sp_instr_freturn(sp->instructions(), lex, (yyvsp[0].item), expr_query,
                                       sp->m_return_field_def.sql_type);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26473 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 412:
#line 4457 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled controls get a secret label. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            pctx->push_label(thd,
                             EMPTY_CSTR,
                             sp->instructions());
          }
#line 26488 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 413:
#line 4468 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26501 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 414:
#line 4480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp = lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "LEAVE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /*
              When jumping to a BEGIN-END block end, the target jump
              points to the block hpop/cpop cleanup instructions,
              so we should exclude the block context here.
              When jumping to something else (i.e., sp_label::ITERATION),
              there are no hpop/cpop at the jump destination,
              so we should include the block context here for cleanup.
            */
            bool exclusive= (lab->type == sp_label::BEGIN);

            size_t n= pctx->diff_handlers(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            n= pctx->diff_cursors(lab->ctx, exclusive);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx);

            if (!i ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, lab) ||
                sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26559 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 415:
#line 4537 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[0].lex_cstr));

            if (! lab || lab->type != sp_label::ITERATION)
            {
              my_error(ER_SP_LILABEL_MISMATCH, MYF(0), "ITERATE", (yyvsp[0].lex_cstr).str);
              MYSQL_YYABORT;
            }

            uint ip= sp->instructions();

            /* Inclusive the dest. */
            size_t n= pctx->diff_handlers(lab->ctx, false);

            if (n)
            {
              sp_instr_hpop *hpop= NEW_PTN sp_instr_hpop(ip++, pctx);

              if (!hpop || sp->add_instr(thd, hpop))
                MYSQL_YYABORT;
            }

            /* Inclusive the dest. */
            n= pctx->diff_cursors(lab->ctx, false);

            if (n)
            {
              sp_instr_cpop *cpop= NEW_PTN sp_instr_cpop(ip++, pctx, n);

              if (!cpop || sp->add_instr(thd, cpop))
                MYSQL_YYABORT;
            }

            /* Jump back */
            sp_instr_jump *i= NEW_PTN sp_instr_jump(ip, pctx, lab->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26607 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 416:
#line 4584 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_copen *i= NEW_PTN sp_instr_copen(sp->instructions(), pctx,
                                                      offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26631 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 417:
#line 4607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[-1].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[-1].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cfetch *i= NEW_PTN sp_instr_cfetch(sp->instructions(),
                                                        pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26655 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 418:
#line 4627 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 26661 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 419:
#line 4632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint offset;

            if (! pctx->find_cursor((yyvsp[0].lexer.lex_str), &offset, false))
            {
              my_error(ER_SP_CURSOR_MISMATCH, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            sp_instr_cclose *i=
              NEW_PTN sp_instr_cclose(sp->instructions(), pctx, offset);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 26685 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 423:
#line 4661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26707 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 424:
#line 4679 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_variable *spv;

            if (!pctx || !(spv= pctx->find_variable((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, false)))
            {
              my_error(ER_SP_UNDECLARED_VAR, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            /* An SP local variable */
            sp_instr_cfetch *i= (sp_instr_cfetch *)sp->last_instruction();

            i->add_to_varlist(spv);
          }
#line 26729 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 425:
#line 4699 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$1*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26741 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 426:
#line 4707 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            sp_instr_jump_if_not *i =
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex,
                                           (yyvsp[0].item), expr_query);

            /* Add jump instruction. */

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26782 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 427:
#line 4745 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$6*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i = NEW_PTN sp_instr_jump(sp->instructions(), pctx);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());

            sp->m_parser_data.add_backpatch_entry(
              i, pctx->push_label(thd, EMPTY_CSTR, 0));
          }
#line 26804 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 428:
#line 4763 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp->m_parser_data.do_backpatch(pctx->pop_label(),
                                           sp->instructions());
          }
#line 26817 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 434:
#line 4786 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            case_stmt_action_case(thd);

            sp->reset_lex(thd); /* For CASE-expr $3 */
          }
#line 26831 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 435:
#line 4796 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            /* Extract CASE-expression string. */

            LEX_CSTRING case_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              case_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!case_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Register new CASE-expression and get its id. */

            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            int case_expr_id= pctx->push_case_expr_id();

            if (case_expr_id < 0)
              MYSQL_YYABORT;

            /* Add CASE-set instruction. */

            sp_instr_set_case_expr *i=
              NEW_PTN sp_instr_set_case_expr(sp->instructions(), lex,
                                             case_expr_id, (yyvsp[0].item), case_expr_query);

            if (i == NULL ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26877 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 436:
#line 4841 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$9*/
            case_stmt_action_end_case(Lex, true);
          }
#line 26885 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 437:
#line 4848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_case(YYTHD);
          }
#line 26893 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 438:
#line 4855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            case_stmt_action_end_case(Lex, false);
          }
#line 26901 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 443:
#line 4872 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26913 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 444:
#line 4880 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            /* Simple case: <caseval> = <whenval> */

            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add CASE-when-jump instruction. */

            sp_instr_jump_case_when *i =
              NEW_PTN sp_instr_jump_case_when(sp->instructions(), lex,
                                              pctx->get_current_case_expr_id(),
                                              (yyvsp[0].item), when_expr_query);

            if (i == NULL ||
                i->on_after_expr_parsing(thd) ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 26958 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 445:
#line 4922 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$7*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 26967 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 446:
#line 4930 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 26979 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 447:
#line 4938 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING when_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              when_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!when_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item),
                                           when_query);

            if (i == NULL ||
                sp->m_parser_data.add_backpatch_entry(
                  i, pctx->push_label(thd, EMPTY_CSTR, 0)) ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27020 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 448:
#line 4976 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$8*/
            if (case_stmt_action_then(YYTHD, Lex))
              MYSQL_YYABORT;
          }
#line 27029 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 449:
#line 4984 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_error *i=
              NEW_PTN
                sp_instr_error(sp->instructions(), pctx, ER_SP_CASE_NOT_FOUND);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27047 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 451:
#line 5002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }
            else
            {
              lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
              lab->type= sp_label::ITERATION;
            }
          }
#line 27069 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 452:
#line 5020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
            sp->m_parser_data.do_backpatch(lab, sp->instructions());
          }
#line 27090 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 453:
#line 5039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= NULL_CSTR; }
#line 27096 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 454:
#line 5040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= (yyvsp[0].lex_cstr); }
#line 27102 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 455:
#line 5045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->find_label((yyvsp[-1].lex_cstr));

            if (lab)
            {
              my_error(ER_SP_LABEL_REDEFINE, MYF(0), (yyvsp[-1].lex_cstr).str);
              MYSQL_YYABORT;
            }

            lab= pctx->push_label(YYTHD, (yyvsp[-1].lex_cstr), sp->instructions());
            lab->type= sp_label::BEGIN;
          }
#line 27122 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 456:
#line 5061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            sp_label *lab= pctx->pop_label();

            if ((yyvsp[0].lex_cstr).str)
            {
              if (my_strcasecmp(system_charset_info, (yyvsp[0].lex_cstr).str, lab->name.str) != 0)
              {
                my_error(ER_SP_LABEL_MISMATCH, MYF(0), (yyvsp[0].lex_cstr).str);
                MYSQL_YYABORT;
              }
            }
          }
#line 27141 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 457:
#line 5078 "sql_yacc.yy" /* yacc.c:1646  */
    { /* Unlabeled blocks get a secret label. */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_label *lab=
              pctx->push_label(YYTHD, EMPTY_CSTR, sp->instructions());

            lab->type= sp_label::BEGIN;
          }
#line 27156 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 458:
#line 5089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->get_sp_current_parsing_ctx()->pop_label();
          }
#line 27165 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 459:
#line 5097 "sql_yacc.yy" /* yacc.c:1646  */
    { /* QQ This is just a dummy for grouping declarations and statements
              together. No [[NOT] ATOMIC] yet, and we need to figure out how
              make it coexist with the existing BEGIN COMMIT/ROLLBACK. */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_pcontext *parent_pctx= lex->get_sp_current_parsing_ctx();

            sp_pcontext *child_pctx=
              parent_pctx->push_context(thd, sp_pcontext::REGULAR_SCOPE);

            lex->set_sp_current_parsing_ctx(child_pctx);
          }
#line 27182 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 460:
#line 5112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            // We always have a label.
            sp->m_parser_data.do_backpatch(pctx->last_label(),
                                           sp->instructions());

            if ((yyvsp[-2].spblock).hndlrs)
            {
              sp_instr *i= NEW_PTN sp_instr_hpop(sp->instructions(), pctx);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            if ((yyvsp[-2].spblock).curs)
            {
              sp_instr *i= NEW_PTN sp_instr_cpop(sp->instructions(), pctx,
                                                 (yyvsp[-2].spblock).curs);

              if (!i || sp->add_instr(thd, i))
                MYSQL_YYABORT;
            }

            lex->set_sp_current_parsing_ctx(pctx->pop_context());
          }
#line 27216 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 461:
#line 5146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;
          }
#line 27233 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 462:
#line 5159 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$2*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27245 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 463:
#line 5167 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN
                sp_instr_jump_if_not(sp->instructions(), lex, (yyvsp[0].item), expr_query);

            if (i == NULL ||
                /* Jumping forward */
                sp->m_parser_data.add_backpatch_entry(i, pctx->last_label()) ||
                sp->m_parser_data.new_cont_backpatch() ||
                sp->m_parser_data.add_cont_backpatch_entry(i) ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }
          }
#line 27287 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 464:
#line 5208 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$14*/
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();

            sp_instr_jump *i= NEW_PTN sp_instr_jump(sp->instructions(), pctx,
                                                    pctx->last_label()->ip);

            if (!i || sp->add_instr(thd, i))
              MYSQL_YYABORT;

            sp->m_parser_data.do_cont_backpatch(sp->instructions());
          }
#line 27306 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 465:
#line 5225 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$4*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            sp->reset_lex(thd);
          }
#line 27318 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 466:
#line 5233 "sql_yacc.yy" /* yacc.c:1646  */
    {                             /*$6*/
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;
            sp_pcontext *pctx= lex->get_sp_current_parsing_ctx();
            uint ip= sp->instructions();

            /* Extract expression string. */

            LEX_CSTRING expr_query= EMPTY_CSTR;
            const char *expr_start_ptr= (yylsp[-2]).raw.end;

            if (lex->is_metadata_used())
            {
              expr_query= make_string(thd, expr_start_ptr, (yylsp[0]).raw.end);
              if (!expr_query.str)
                MYSQL_YYABORT;
            }

            /* Add jump instruction. */

            sp_instr_jump_if_not *i=
              NEW_PTN sp_instr_jump_if_not(ip, lex, (yyvsp[0].item), expr_query,
                                           pctx->last_label()->ip);

            if (i == NULL ||
                sp->add_instr(thd, i) ||
                sp->restore_lex(thd))
            {
              MYSQL_YYABORT;
            }

            /* We can shortcut the cont_backpatch here */
            i->set_cont_dest(ip + 1);
          }
#line 27360 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 468:
#line 5276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_BEFORE; }
#line 27366 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 469:
#line 5278 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_ACTION_AFTER; }
#line 27372 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 470:
#line 5283 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_INSERT; }
#line 27378 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 471:
#line 5285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_UPDATE; }
#line 27384 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 472:
#line 5287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TRG_EVENT_DELETE; }
#line 27390 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 473:
#line 5301 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27396 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 474:
#line 5303 "sql_yacc.yy" /* yacc.c:1646  */
    {
        (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
      }
#line 27404 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 475:
#line 5309 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= { nullptr, 0}; }
#line 27410 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 476:
#line 5311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
          }
#line 27418 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 477:
#line 5317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27424 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 479:
#line 5323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27434 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 480:
#line 5329 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27444 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 491:
#line 5350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27450 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 493:
#line 5356 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27460 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 494:
#line 5362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27470 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 501:
#line 5379 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27476 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 503:
#line 5385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27486 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 504:
#line 5391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; // OOM
          }
#line 27496 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 506:
#line 5403 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27502 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 508:
#line 5409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27512 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 509:
#line 5415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27522 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 517:
#line 5433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 27528 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 519:
#line 5439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27538 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 520:
#line 5445 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 27548 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 524:
#line 5459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27554 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 525:
#line 5463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_ACTIVE; }
#line 27560 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 526:
#line 5464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_tablespace_type)= ALTER_UNDO_TABLESPACE_SET_INACTIVE; }
#line 27566 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 527:
#line 5468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 27572 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 528:
#line 5473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_initial_size((yyvsp[0].ulonglong_number));
          }
#line 27580 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 529:
#line 5480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_autoextend_size((yyvsp[0].ulonglong_number));
          }
#line 27588 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 530:
#line 5487 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_max_size((yyvsp[0].ulonglong_number));
          }
#line 27596 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 531:
#line 5494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_extent_size((yyvsp[0].ulonglong_number));
          }
#line 27604 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 532:
#line 5501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_undo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27612 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 533:
#line 5508 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_redo_buffer_size((yyvsp[0].ulonglong_number));
          }
#line 27620 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 534:
#line 5515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_nodegroup((yyvsp[0].ulong_num));
          }
#line 27628 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 535:
#line 5522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_comment((yyvsp[0].lexer.lex_str));
          }
#line 27636 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 536:
#line 5529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_engine(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 27644 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 537:
#line 5536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_file_block_size((yyvsp[0].ulonglong_number));
          }
#line 27652 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 538:
#line 5543 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(true);
          }
#line 27660 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 539:
#line 5547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_wait_until_completed(false);
          }
#line 27668 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 540:
#line 5554 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_option)= NEW_PTN PT_alter_tablespace_option_encryption((yyvsp[0].lexer.lex_str));
          }
#line 27676 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 541:
#line 5560 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (yyvsp[0].ulonglong_number);}
#line 27682 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 542:
#line 5562 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ulonglong number;
            uint text_shift_number= 0;
            longlong prefix_number;
            const char *start_ptr= (yyvsp[0].lexer.lex_str).str;
            size_t str_len= (yyvsp[0].lexer.lex_str).length;
            const char *end_ptr= start_ptr + str_len;
            int error;
            prefix_number= my_strtoll10(start_ptr, &end_ptr, &error);
            if ((start_ptr + str_len - 1) == end_ptr)
            {
              switch (end_ptr[0])
              {
                case 'g':
                case 'G':
                  text_shift_number+=10;
                  // Fall through.
                case 'm':
                case 'M':
                  text_shift_number+=10;
                  // Fall through.
                case 'k':
                case 'K':
                  text_shift_number+=10;
                  break;
                default:
                {
                  my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
                  MYSQL_YYABORT;
                }
              }
              if (prefix_number >> 31)
              {
                my_error(ER_SIZE_OVERFLOW_ERROR, MYF(0));
                MYSQL_YYABORT;
              }
              number= prefix_number << text_shift_number;
            }
            else
            {
              my_error(ER_WRONG_SIZE_NUMBER, MYF(0));
              MYSQL_YYABORT;
            }
            (yyval.ulonglong_number)= number;
          }
#line 27732 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 543:
#line 5638 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_create_table_options= (yyvsp[-1].create_table_options);
          }
#line 27741 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 545:
#line 5647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail)= (yyvsp[0].create_table_tail);
            (yyval.create_table_tail).opt_partitioning= (yyvsp[-1].partition_clause);
          }
#line 27750 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 547:
#line 5656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= NULL;
          }
#line 27761 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 548:
#line 5664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= (yyvsp[-1].on_duplicate);
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27772 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 549:
#line 5671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_tail).opt_create_table_options= NULL;
            (yyval.create_table_tail).opt_partitioning= NULL;
            (yyval.create_table_tail).on_duplicate= On_duplicate::ERROR;
            (yyval.create_table_tail).opt_query_expression= (yyvsp[0].query_primary);
          }
#line 27783 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 550:
#line 5680 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 27789 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 551:
#line 5681 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 27795 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 552:
#line 5697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_clause)= NEW_PTN PT_partition((yyvsp[-3].part_type_def), (yyvsp[-2].ulong_num), (yyvsp[-1].opt_sub_part), (yylsp[0]), (yyvsp[0].part_def_list));
          }
#line 27803 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 553:
#line 5704 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_key((yyvsp[-5].is_not_empty), (yyvsp[-3].opt_key_algo), (yyvsp[-1].name_list));
          }
#line 27811 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 554:
#line 5708 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_hash((yyvsp[-4].is_not_empty), (yylsp[-1]), (yyvsp[-1].item));
          }
#line 27819 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 555:
#line 5712 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 27827 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 556:
#line 5716 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_range_columns((yyvsp[-1].name_list));
          }
#line 27835 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 557:
#line 5720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_expr((yylsp[-1]), (yyvsp[-1].item));
          }
#line 27843 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 558:
#line 5724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_type_def)= NEW_PTN PT_part_type_def_list_columns((yyvsp[-1].name_list));
          }
#line 27851 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 559:
#line 5730 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 27857 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 560:
#line 5731 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 27863 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 561:
#line 5736 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_NONE; }
#line 27869 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 562:
#line 5738 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch ((yyvsp[0].ulong_num)) {
            case 1:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_51;
              break;
            case 2:
              (yyval.opt_key_algo)= enum_key_algorithm::KEY_ALGORITHM_55;
              break;
            default:
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
          }
#line 27887 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 563:
#line 5755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 27893 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 564:
#line 5757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "partitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 27906 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 565:
#line 5768 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_sub_part)= NULL; }
#line 27912 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 566:
#line 5771 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_hash((yyvsp[-5].is_not_empty), (yylsp[-2]), (yyvsp[-2].item), (yyvsp[0].ulong_num));
          }
#line 27920 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 567:
#line 5776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_sub_part)= NEW_PTN PT_sub_partition_by_key((yyvsp[-6].is_not_empty), (yyvsp[-4].opt_key_algo), (yyvsp[-2].name_list), (yyvsp[0].ulong_num));
          }
#line 27928 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 568:
#line 5783 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.name_list)= NULL; }
#line 27934 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 570:
#line 5790 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= NEW_PTN List<char>;
            if ((yyval.name_list) == NULL || (yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 27944 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 571:
#line 5796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.name_list)= (yyvsp[-2].name_list);
            if ((yyval.name_list)->push_back((yyvsp[0].lexer.lex_str).str))
              MYSQL_YYABORT;
          }
#line 27954 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 572:
#line 5805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 27960 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 573:
#line 5807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulong_num) == 0)
            {
              my_error(ER_NO_PARTS_ERROR, MYF(0), "subpartitions");
              MYSQL_YYABORT;
            }
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 27973 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 574:
#line 5818 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= NULL; }
#line 27979 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 575:
#line 5819 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_def_list)= (yyvsp[-1].part_def_list); }
#line 27985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 576:
#line 5824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= NEW_PTN Mem_root_array<PT_part_definition*>(YYMEM_ROOT);
            if ((yyval.part_def_list) == NULL || (yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 27995 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 577:
#line 5830 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_def_list)= (yyvsp[-2].part_def_list);
            if ((yyval.part_def_list)->push_back((yyvsp[0].part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28005 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 578:
#line 5839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_definition)= NEW_PTN PT_part_definition((yylsp[-5]), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].opt_part_values).type, (yyvsp[-2].opt_part_values).values, (yylsp[-2]),
                                           (yyvsp[-1].partition_option_list), (yyvsp[0].sub_part_list), (yylsp[0]));
          }
#line 28014 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 579:
#line 5847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::HASH;
          }
#line 28022 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 580:
#line 5851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::RANGE;
            (yyval.opt_part_values).values= (yyvsp[0].part_value_item_list_paren);
          }
#line 28031 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 581:
#line 5856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_part_values).type= partition_type::LIST;
            (yyval.opt_part_values).values= (yyvsp[0].part_values);
          }
#line 28040 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 582:
#line 5863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item_list_paren)= NULL; }
#line 28046 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 584:
#line 5869 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_item((yylsp[0]), (yyvsp[0].part_value_item_list_paren));
          }
#line 28054 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 585:
#line 5873 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_values)= NEW_PTN PT_part_values_in_list((yylsp[0]), (yyvsp[-1].part_value_list));
          }
#line 28062 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 586:
#line 5880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= NEW_PTN
              Mem_root_array<PT_part_value_item_list_paren *>(YYMEM_ROOT);
            if ((yyval.part_value_list) == NULL || (yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28073 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 587:
#line 5887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_list)= (yyvsp[-2].part_value_list);
            if ((yyval.part_value_list)->push_back((yyvsp[0].part_value_item_list_paren)))
              MYSQL_YYABORT; // OOM
          }
#line 28083 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 588:
#line 5896 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              This empty action is required because it resolves 2 reduce/reduce
              conflicts with an anonymous row expression:

              simple_expr:
                        ...
                      | '(' expr ',' expr_list ')'
            */
          }
#line 28098 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 589:
#line 5907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list_paren)= NEW_PTN PT_part_value_item_list_paren((yyvsp[-1].part_value_item_list), (yylsp[0]));
          }
#line 28106 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 590:
#line 5914 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= NEW_PTN Mem_root_array<PT_part_value_item *>(YYMEM_ROOT);
            if ((yyval.part_value_item_list) == NULL || (yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28116 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 591:
#line 5920 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.part_value_item_list)= (yyvsp[-2].part_value_item_list);
            if ((yyval.part_value_item_list)->push_back((yyvsp[0].part_value_item)))
              MYSQL_YYABORT; // OOM
          }
#line 28126 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 592:
#line 5928 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_max((yylsp[0])); }
#line 28132 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 593:
#line 5929 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.part_value_item)= NEW_PTN PT_part_value_item_expr((yylsp[0]), (yyvsp[0].item)); }
#line 28138 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 594:
#line 5934 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= NULL; }
#line 28144 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 595:
#line 5935 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.sub_part_list)= (yyvsp[-1].sub_part_list); }
#line 28150 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 596:
#line 5940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= NEW_PTN Mem_root_array<PT_subpartition *>(YYMEM_ROOT);
            if ((yyval.sub_part_list) == NULL || (yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28160 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 597:
#line 5946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_list)= (yyvsp[-2].sub_part_list);
            if ((yyval.sub_part_list)->push_back((yyvsp[0].sub_part_definition)))
              MYSQL_YYABORT; // OOM
          }
#line 28170 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 598:
#line 5955 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.sub_part_definition)= NEW_PTN PT_subpartition((yylsp[-2]), (yyvsp[-1].lexer.lex_str).str, (yyvsp[0].partition_option_list));
          }
#line 28178 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 599:
#line 5961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option_list)= NULL; }
#line 28184 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 601:
#line 5967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= (yyvsp[-1].partition_option_list);
            if ((yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28194 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 602:
#line 5973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.partition_option_list)= NEW_PTN Mem_root_array<PT_partition_option *>(YYMEM_ROOT);
            if ((yyval.partition_option_list) == NULL || (yyval.partition_option_list)->push_back((yyvsp[0].partition_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 603:
#line 5982 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_tablespace((yyvsp[0].lexer.lex_str).str); }
#line 28210 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 604:
#line 5984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_engine(to_lex_cstring((yyvsp[0].lexer.lex_str))); }
#line 28216 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 605:
#line 5986 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_nodegroup((yyvsp[0].ulong_num)); }
#line 28222 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 606:
#line 5988 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_max_rows((yyvsp[0].ulonglong_number)); }
#line 28228 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 607:
#line 5990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_min_rows((yyvsp[0].ulonglong_number)); }
#line 28234 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 608:
#line 5992 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_data_directory((yyvsp[0].lexer.lex_str).str); }
#line 28240 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 609:
#line 5994 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_index_directory((yyvsp[0].lexer.lex_str).str); }
#line 28246 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 610:
#line 5996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.partition_option)= NEW_PTN PT_partition_comment((yyvsp[0].lexer.lex_str).str); }
#line 28252 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 611:
#line 6004 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28258 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 612:
#line 6005 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28264 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 613:
#line 6009 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28270 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 614:
#line 6010 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 28276 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 615:
#line 6015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_collation(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28285 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 616:
#line 6020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (set_default_charset(Lex->create_info, (yyvsp[0].lexer.charset)))
              MYSQL_YYABORT;
          }
#line 28294 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 617:
#line 6025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Validate if we have either 'y|Y' or 'n|N'
            if (my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "Y") != 0 &&
                my_strcasecmp(system_charset_info, (yyvsp[0].lexer.lex_str).str, "N") != 0) {
              my_error(ER_WRONG_VALUE, MYF(0), "argument (should be Y or N)", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }

            Lex->create_info->encrypt_type= (yyvsp[0].lexer.lex_str);
            Lex->create_info->used_fields |= HA_CREATE_USED_DEFAULT_ENCRYPTION;
          }
#line 28310 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 618:
#line 6039 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28316 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 619:
#line 6040 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28322 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 620:
#line 6045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.space_separated_alter_table_opts) == NULL || (yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28332 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 621:
#line 6051 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.space_separated_alter_table_opts)= (yyvsp[-1].space_separated_alter_table_opts);
            if ((yyval.space_separated_alter_table_opts)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28342 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 622:
#line 6060 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= NEW_PTN Mem_root_array<PT_create_table_option *>(YYMEM_ROOT);
            if ((yyval.create_table_options) == NULL || (yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28352 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 623:
#line 6066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_options)= (yyvsp[-2].create_table_options);
            if ((yyval.create_table_options)->push_back((yyvsp[0].create_table_option)))
              MYSQL_YYABORT; // OOM
          }
#line 28362 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 626:
#line 6080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28370 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 627:
#line 6084 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option();
          }
#line 28378 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 628:
#line 6088 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_secondary_engine_option(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 28386 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 629:
#line 6092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_max_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28394 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 630:
#line 6096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_min_rows_option((yyvsp[0].ulonglong_number));
          }
#line 28402 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 631:
#line 6100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_avg_row_length_option((yyvsp[0].ulong_num));
          }
#line 28410 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 632:
#line 6104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_password_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28418 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 633:
#line 6108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_commen_option((yyvsp[0].lexer.lex_str));
          }
#line 28426 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 634:
#line 6112 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_compress_option((yyvsp[0].lexer.lex_str));
	  }
#line 28434 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 635:
#line 6116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_encryption_option((yyvsp[0].lexer.lex_str));
	  }
#line 28442 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 636:
#line 6120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_auto_increment_option((yyvsp[0].ulonglong_number));
          }
#line 28450 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 637:
#line 6124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_pack_keys_option((yyvsp[0].ternary_option));
          }
#line 28458 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 638:
#line 6128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_auto_recalc_option((yyvsp[0].ternary_option));
          }
#line 28466 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 639:
#line 6132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_persistent_option((yyvsp[0].ternary_option));
          }
#line 28474 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 640:
#line 6136 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* From user point of view STATS_SAMPLE_PAGES can be specified as
            STATS_SAMPLE_PAGES=N (where 0<N<=65535, it does not make sense to
            scan 0 pages) or STATS_SAMPLE_PAGES=default. Internally we record
            =default as 0. See create_frm() in sql/table.cc, we use only two
            bytes for stats_sample_pages and this is why we do not allow
            larger values. 65535 pages, 16kb each means to sample 1GB, which
            is impractical. If at some point this needs to be extended, then
            we can store the higher bits from stats_sample_pages in .frm too. */
            if ((yyvsp[0].ulong_num) == 0 || (yyvsp[0].ulong_num) > 0xffff)
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages((yyvsp[0].ulong_num));
          }
#line 28495 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 641:
#line 6153 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_stats_stable_pages;
          }
#line 28503 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 642:
#line 6157 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28511 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 643:
#line 6161 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_checksum_option((yyvsp[0].ulong_num));
          }
#line 28519 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 644:
#line 6165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_delay_key_write_option((yyvsp[0].ulong_num));
          }
#line 28527 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 645:
#line 6169 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_row_format_option((yyvsp[0].row_type));
          }
#line 28535 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 646:
#line 6173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_union_option((yyvsp[-1].table_list));
          }
#line 28543 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 647:
#line 6177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_charset((yyvsp[0].lexer.charset));
          }
#line 28551 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 648:
#line 6181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_table_default_collation((yyvsp[0].lexer.charset));
          }
#line 28559 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 649:
#line 6185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_insert_method_option((yyvsp[0].ulong_num));
          }
#line 28567 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 650:
#line 6189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_data_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28575 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 651:
#line 6193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_index_directory_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28583 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 652:
#line 6197 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_tablespace_option((yyvsp[0].lexer.lex_str).str);
          }
#line 28591 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 653:
#line 6201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_DISK);
          }
#line 28599 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 654:
#line 6205 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_storage_option(HA_SM_MEMORY);
          }
#line 28607 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 655:
#line 6209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_connection_option((yyvsp[0].lexer.lex_str));
          }
#line 28615 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 656:
#line 6213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.create_table_option)= NEW_PTN PT_create_key_block_size_option((yyvsp[0].ulong_num));
          }
#line 28623 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 657:
#line 6220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            switch((yyvsp[0].ulong_num)) {
            case 0:
                (yyval.ternary_option)= Ternary_option::OFF;
                break;
            case 1:
                (yyval.ternary_option)= Ternary_option::ON;
                break;
            default:
                YYTHD->syntax_error();
                MYSQL_YYABORT;
            }
          }
#line 28641 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 658:
#line 6233 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ternary_option)= Ternary_option::DEFAULT; }
#line 28647 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 659:
#line 6237 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 28653 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 660:
#line 6241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset);}
#line 28659 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 661:
#line 6245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);}
#line 28665 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 662:
#line 6249 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DEFAULT; }
#line 28671 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 663:
#line 6250 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_FIXED; }
#line 28677 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 664:
#line 6251 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_DYNAMIC; }
#line 28683 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 665:
#line 6252 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPRESSED; }
#line 28689 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 666:
#line 6253 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_REDUNDANT; }
#line 28695 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 667:
#line 6254 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.row_type)= ROW_TYPE_COMPACT; }
#line 28701 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 668:
#line 6258 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_DISABLED; }
#line 28707 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 669:
#line 6259 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_FIRST; }
#line 28713 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 670:
#line 6260 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= MERGE_INSERT_TO_LAST; }
#line 28719 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 671:
#line 6264 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) STRING_RESULT; }
#line 28725 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 672:
#line 6265 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) REAL_RESULT; }
#line 28731 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 673:
#line 6266 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) DECIMAL_RESULT; }
#line 28737 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 674:
#line 6267 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.num) = (int) INT_RESULT; }
#line 28743 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 675:
#line 6272 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= NEW_PTN Mem_root_array<PT_table_element *>(YYMEM_ROOT);
            if ((yyval.table_element_list) == NULL || (yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28753 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 676:
#line 6278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_element_list)= (yyvsp[-2].table_element_list);
            if ((yyval.table_element_list)->push_back((yyvsp[0].table_element)))
              MYSQL_YYABORT; // OOM
          }
#line 28763 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 677:
#line 6286 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].column_def); }
#line 28769 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 678:
#line 6287 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_element)= (yyvsp[0].table_constraint_def); }
#line 28775 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 679:
#line 6292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_def)= NEW_PTN PT_column_def((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].table_constraint_def));
          }
#line 28783 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 680:
#line 6298 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_constraint_def)= NULL; }
#line 28789 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 681:
#line 6300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Currently we ignore FK references here: */
            (yyval.table_constraint_def)= NULL;
          }
#line 28798 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 682:
#line 6309 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_MULTIPLE,
                                                   (yyvsp[-4].index_name_and_type).name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28807 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 683:
#line 6315 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_FULLTEXT, (yyvsp[-4].lexer.lex_str), NULL,
                                                   (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28816 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 684:
#line 6321 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition(KEYTYPE_SPATIAL, (yyvsp[-4].lexer.lex_str), NULL, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28824 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 685:
#line 6326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Constraint-implementing indexes are named by the constraint type
              by default.
            */
            LEX_STRING name= (yyvsp[-4].index_name_and_type).name.str != NULL ? (yyvsp[-4].index_name_and_type).name : (yyvsp[-6].lexer.lex_str);
            (yyval.table_constraint_def)= NEW_PTN PT_inline_index_definition((yyvsp[-5].key_type), name, (yyvsp[-4].index_name_and_type).type, (yyvsp[-2].index_column_list), (yyvsp[0].index_options));
          }
#line 28837 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 686:
#line 6335 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_foreign_key_definition((yyvsp[-7].lexer.lex_str), (yyvsp[-4].lexer.lex_str), (yyvsp[-2].index_column_list), (yyvsp[0].fk_references).table_name,
                                                  (yyvsp[0].fk_references).reference_list,
                                                  (yyvsp[0].fk_references).fk_match_option,
                                                  (yyvsp[0].fk_references).fk_update_opt,
                                                  (yyvsp[0].fk_references).fk_delete_opt);
          }
#line 28849 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 687:
#line 6343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_constraint_def)= NEW_PTN PT_check_constraint((yyvsp[-2].lexer.lex_str), (yyvsp[-1].item), (yyvsp[0].is_not_empty));
            if ((yyval.table_constraint_def) == nullptr) MYSQL_YYABORT; // OOM
          }
#line 28858 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 688:
#line 6350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 28864 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 689:
#line 6354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 28870 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 690:
#line 6355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 28876 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 691:
#line 6359 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 28882 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 692:
#line 6360 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28888 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 693:
#line 6364 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 28894 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 694:
#line 6365 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= (yyvsp[0].is_not_empty); }
#line 28900 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 695:
#line 6369 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= !((yyvsp[-1].is_not_empty)); }
#line 28906 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 696:
#line 6374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_def)= NEW_PTN PT_field_def((yyvsp[-1].type), (yyvsp[0].col_attr_list));
          }
#line 28914 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 697:
#line 6380 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *opt_attrs= (yyvsp[0].col_attr_list);
            if ((yyvsp[-7].lexer.charset) != NULL)
            {
              if (opt_attrs == NULL)
              {
                opt_attrs= NEW_PTN
                  Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
              }
              auto *collation= NEW_PTN PT_collate_column_attr((yylsp[-7]), (yyvsp[-7].lexer.charset));
              if (opt_attrs == nullptr || collation == nullptr ||
                  opt_attrs->push_back(collation))
                MYSQL_YYABORT; // OOM
            }
            (yyval.field_def)= NEW_PTN PT_generated_field_def((yyvsp[-8].type), (yyvsp[-3].item), (yyvsp[-1].virtual_or_stored), opt_attrs);
          }
#line 28935 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 700:
#line 6404 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 28941 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 701:
#line 6405 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::VIRTUAL; }
#line 28947 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 702:
#line 6406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.virtual_or_stored)= Virtual_or_stored::STORED; }
#line 28953 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 703:
#line 6411 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].int_type), (yyvsp[-1].c_str), (yyvsp[0].field_option));
          }
#line 28961 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 704:
#line 6415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 28969 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 705:
#line 6419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_numeric_type(YYTHD, (yyvsp[-2].numeric_type), (yyvsp[-1].precision).length, (yyvsp[-1].precision).dec, (yyvsp[0].field_option));
          }
#line 28977 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 706:
#line 6423 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type;
          }
#line 28985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 707:
#line 6427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_bit_type((yyvsp[0].c_str));
          }
#line 28993 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 708:
#line 6431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29001 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 709:
#line 6435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_boolean_type;
          }
#line 29009 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 710:
#line 6439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29018 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 711:
#line 6444 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29027 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 712:
#line 6449 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29040 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 713:
#line 6458 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29053 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 714:
#line 6467 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29061 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 715:
#line 6471 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::CHAR, &my_charset_bin);
          }
#line 29069 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 716:
#line 6475 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29078 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 717:
#line 6480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const CHARSET_INFO *cs= (yyvsp[0].is_not_empty) ?
              get_bin_collation(national_charset_info) : national_charset_info;
            if (cs == NULL)
              MYSQL_YYABORT;
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[-1].c_str), cs);
            warn_about_deprecated_national(YYTHD);
          }
#line 29091 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 718:
#line 6489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::VARCHAR, (yyvsp[0].c_str), &my_charset_bin);
          }
#line 29099 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 719:
#line 6493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].c_str))
            {
              errno= 0;
              ulong length= strtoul((yyvsp[-1].c_str), NULL, 10);
              if (errno != 0 || length != 4)
              {
                /* Only support length is 4 */
                my_error(ER_INVALID_YEAR_COLUMN_LENGTH, MYF(0), "YEAR");
                MYSQL_YYABORT;
              }
              push_deprecated_warn(YYTHD, "YEAR(4)", "YEAR");
            }
            if ((yyvsp[0].field_option) == UNSIGNED_FLAG)
            {
              push_warning(YYTHD, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                           ER_THD(YYTHD, ER_WARN_DEPRECATED_YEAR_UNSIGNED));
            }
            // We can ignore field length and UNSIGNED/ZEROFILL attributes here.
            (yyval.type)= NEW_PTN PT_year_type;
          }
#line 29126 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 720:
#line 6516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_date_type;
          }
#line 29134 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 721:
#line 6520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::TIME, (yyvsp[0].c_str));
          }
#line 29142 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 722:
#line 6524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_timestamp_type((yyvsp[0].c_str));
          }
#line 29150 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 723:
#line 6528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_time_type(Time_type::DATETIME, (yyvsp[0].c_str));
          }
#line 29158 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 724:
#line 6532 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, &my_charset_bin);
          }
#line 29166 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 725:
#line 6536 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type((yyvsp[0].c_str));
          }
#line 29174 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 727:
#line 6541 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29182 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 728:
#line 6545 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, &my_charset_bin);
          }
#line 29190 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 729:
#line 6549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, &my_charset_bin);
          }
#line 29198 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 730:
#line 6553 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29207 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 731:
#line 6558 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::TINY, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29216 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 732:
#line 6563 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_char_type(Char_type::TEXT, (yyvsp[-1].c_str), (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29225 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 733:
#line 6568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29234 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 734:
#line 6573 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::LONG, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29243 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 735:
#line 6578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_enum_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29251 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 736:
#line 6582 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_set_type((yyvsp[-2].string_list), (yyvsp[0].charset_with_opt_binary).charset, (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29259 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 737:
#line 6586 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_blob_type(Blob_type::MEDIUM, (yyvsp[0].charset_with_opt_binary).charset,
                                     (yyvsp[0].charset_with_opt_binary).force_binary);
          }
#line 29268 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 738:
#line 6591 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_serial_type;
          }
#line 29276 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 739:
#line 6595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.type)= NEW_PTN PT_json_type;
          }
#line 29284 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 740:
#line 6602 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRY); }
#line 29290 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 741:
#line 6604 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_GEOMETRYCOLLECTION); }
#line 29296 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 742:
#line 6606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POINT); }
#line 29302 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 743:
#line 6608 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOINT); }
#line 29308 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 744:
#line 6610 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_LINESTRING); }
#line 29314 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 745:
#line 6612 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTILINESTRING); }
#line 29320 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 746:
#line 6614 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_POLYGON); }
#line 29326 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 747:
#line 6616 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.type)= NEW_PTN PT_spacial_type(Field::GEOM_MULTIPOLYGON); }
#line 29332 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 748:
#line 6620 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29338 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 749:
#line 6621 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29344 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 750:
#line 6625 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29350 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 751:
#line 6626 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29356 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 752:
#line 6630 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29362 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 753:
#line 6631 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29368 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 754:
#line 6632 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29374 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 755:
#line 6633 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29380 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 756:
#line 6634 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29386 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 757:
#line 6638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::INT; }
#line 29392 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 758:
#line 6639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::TINYINT; }
#line 29398 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 759:
#line 6640 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::SMALLINT; }
#line 29404 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 760:
#line 6641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::MEDIUMINT; }
#line 29410 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 761:
#line 6642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.int_type)=Int_type::BIGINT; }
#line 29416 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 762:
#line 6647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.numeric_type)= YYTHD->variables.sql_mode & MODE_REAL_AS_FLOAT ?
              Numeric_type::FLOAT : Numeric_type::DOUBLE;
          }
#line 29425 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 763:
#line 6652 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DOUBLE; }
#line 29431 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 766:
#line 6661 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::FLOAT; }
#line 29437 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 767:
#line 6662 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29443 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 768:
#line 6663 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29449 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 769:
#line 6664 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.numeric_type)= Numeric_type::DECIMAL; }
#line 29455 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 770:
#line 6669 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = nullptr;
            (yyval.precision).dec = nullptr;
          }
#line 29464 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 771:
#line 6674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length = (yyvsp[0].c_str);
            (yyval.precision).dec = nullptr;
          }
#line 29473 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 772:
#line 6682 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec= NULL;
          }
#line 29482 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 773:
#line 6687 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[0].c_str);
            (yyval.precision).dec= NULL;
          }
#line 29491 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 775:
#line 6696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= (yyvsp[-3].lexer.lex_str).str;
            (yyval.precision).dec= (yyvsp[-1].lexer.lex_str).str;
          }
#line 29500 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 776:
#line 6704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 29506 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 777:
#line 6705 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29512 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 778:
#line 6709 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29518 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 779:
#line 6710 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 29524 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 780:
#line 6712 "sql_yacc.yy" /* yacc.c:1646  */
    {
             int error;
             (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[-1].lexer.lex_str).str, NULL, &error);
           }
#line 29533 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 781:
#line 6719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29539 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 783:
#line 6725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = (yyvsp[-1].field_option) | (yyvsp[0].field_option);
          }
#line 29547 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 785:
#line 6732 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = 0; }
#line 29553 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 786:
#line 6733 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_option) = UNSIGNED_FLAG; }
#line 29559 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 787:
#line 6734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_option) = ZEROFILL_FLAG;
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX_NO_REPLACEMENT,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_ZEROFILL));
          }
#line 29570 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 788:
#line 6743 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29576 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 789:
#line 6744 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29582 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 790:
#line 6745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29588 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 791:
#line 6746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[-1].lexer.lex_str).str; }
#line 29594 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 792:
#line 6749 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; /* use default length */ }
#line 29600 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 794:
#line 6755 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.precision).length= NULL;
            (yyval.precision).dec = NULL;
          }
#line 29609 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 796:
#line 6763 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.col_attr_list)= NULL; }
#line 29615 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 798:
#line 6769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr_list)= (yyvsp[-1].col_attr_list);
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // $2 is `[NOT] ENFORCED`
              if ((yyvsp[-1].col_attr_list)->back()->set_constraint_enforcement(
                      (yyvsp[0].col_attr)->is_constraint_enforced())) {
                // $1 is not `CHECK(...)`
                YYTHD->syntax_error_at((yylsp[0]));
                MYSQL_YYABORT;
              }
            } else {
              if ((yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
                MYSQL_YYABORT; // OOM
            }
          }
#line 29638 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 799:
#line 6788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].col_attr) == nullptr)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].col_attr)->has_constraint_enforcement()) {
              // [NOT] ENFORCED doesn't follow the CHECK clause
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }

            (yyval.col_attr_list)=
              NEW_PTN Mem_root_array<PT_column_attr_base *>(YYMEM_ROOT);
            if ((yyval.col_attr_list) == NULL || (yyval.col_attr_list)->push_back((yyvsp[0].col_attr)))
              MYSQL_YYABORT; // OOM
          }
#line 29658 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 800:
#line 6807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_null_column_attr;
          }
#line 29666 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 801:
#line 6811 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_not_null_column_attr;
          }
#line 29674 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 802:
#line 6815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_secondary_column_attr;
          }
#line 29682 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 803:
#line 6819 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_default_column_attr((yyvsp[0].item));
          }
#line 29690 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 804:
#line 6823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_generated_default_val_column_attr((yyvsp[-1].item));
          }
#line 29698 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 805:
#line 6827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_on_update_column_attr(static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 29706 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 806:
#line 6831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_auto_increment_column_attr;
          }
#line 29714 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 807:
#line 6835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_serial_default_value_column_attr;
          }
#line 29722 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 808:
#line 6839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_primary_key_column_attr;
          }
#line 29730 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 809:
#line 6843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 29738 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 810:
#line 6847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_unique_key_column_attr;
          }
#line 29746 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 811:
#line 6851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_comment_column_attr(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 29754 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 812:
#line 6855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_collate_column_attr((yylsp[0]), (yyvsp[0].lexer.charset));
          }
#line 29762 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 813:
#line 6859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_column_format_column_attr((yyvsp[0].column_format));
          }
#line 29770 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 814:
#line 6863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_storage_media_column_attr((yyvsp[0].storage_media));
          }
#line 29778 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 815:
#line 6867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) > std::numeric_limits<gis::srid_t>::max())
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "SRID", "SRID");
              MYSQL_YYABORT;
            }
            (yyval.col_attr)= NEW_PTN PT_srid_column_attr(static_cast<gis::srid_t>((yyvsp[0].ulonglong_number)));
          }
#line 29791 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 816:
#line 6877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr)= NEW_PTN PT_check_constraint_column_attr((yyvsp[-1].lexer.lex_str), (yyvsp[0].item));
          }
#line 29799 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 817:
#line 6890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.col_attr) = NEW_PTN PT_constraint_enforcement_attr((yyvsp[0].is_not_empty));
          }
#line 29807 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 818:
#line 6896 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DEFAULT; }
#line 29813 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 819:
#line 6897 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_FIXED; }
#line 29819 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 820:
#line 6898 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.column_format)= COLUMN_FORMAT_TYPE_DYNAMIC; }
#line 29825 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 821:
#line 6902 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DEFAULT; }
#line 29831 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 822:
#line 6903 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_DISK; }
#line 29837 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 823:
#line 6904 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.storage_media)= HA_SM_MEMORY; }
#line 29843 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 824:
#line 6909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ulong_num)= (yyvsp[0].ulong_num);
          }
#line 29851 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 825:
#line 6915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 29859 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 829:
#line 6928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            YYLIP->warn_on_deprecated_charset((yyval.lexer.charset), (yyvsp[0].lexer.lex_str).str);
          }
#line 29872 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 830:
#line 6936 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 29878 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 831:
#line 6940 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= NULL; }
#line 29884 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 832:
#line 6941 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29890 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 833:
#line 6946 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)=get_charset_by_csname((yyvsp[0].lexer.lex_str).str,MY_CS_PRIMARY,MYF(0))) &&
                !((yyval.lexer.charset)=get_old_charset_by_name((yyvsp[0].lexer.lex_str).str)))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 29903 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 834:
#line 6954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 29909 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 835:
#line 6958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=(yyvsp[0].lexer.charset);   }
#line 29915 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 836:
#line 6959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)=NULL; }
#line 29921 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 837:
#line 6964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name((yyvsp[0].lexer.lex_str).str)))
              MYSQL_YYABORT;
            YYLIP->warn_on_deprecated_collation((yyval.lexer.charset));
          }
#line 29931 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 838:
#line 6969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_bin; }
#line 29937 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 839:
#line 6973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = nullptr; }
#line 29943 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 840:
#line 6974 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset) = (yyvsp[0].lexer.charset); }
#line 29949 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 841:
#line 6978 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29955 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 842:
#line 6979 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 29961 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 843:
#line 6984 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.charset)= &my_charset_latin1; }
#line 29967 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 844:
#line 6985 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 29976 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 845:
#line 6989 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.lexer.charset)= &my_charset_latin1_bin;
        }
#line 29985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 846:
#line 6997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lexer.charset)= get_charset_by_csname("ucs2", MY_CS_PRIMARY,MYF(0))))
            {
              my_error(ER_UNKNOWN_CHARACTER_SET, MYF(0), "ucs2");
              MYSQL_YYABORT;
            }
          }
#line 29997 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 847:
#line 7005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              MYSQL_YYABORT;
          }
#line 30007 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 848:
#line 7011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            if (!((yyval.lexer.charset)= mysqld_collation_get_by_name("ucs2_bin")))
              my_error(ER_UNKNOWN_COLLATION, MYF(0), "ucs2_bin");
          }
#line 30017 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 849:
#line 7020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30026 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 850:
#line 7025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30035 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 851:
#line 7030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].lexer.charset);
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30044 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 852:
#line 7035 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= &my_charset_bin;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30053 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 853:
#line 7040 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.charset_with_opt_binary).charset= (yyvsp[0].is_not_empty) ? get_bin_collation((yyvsp[-1].lexer.charset)) : (yyvsp[-1].lexer.charset);
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30064 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 854:
#line 7047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= NULL;
            (yyval.charset_with_opt_binary).force_binary= true;
          }
#line 30074 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 855:
#line 7053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.charset_with_opt_binary).charset= get_bin_collation((yyvsp[0].lexer.charset));
            if ((yyval.charset_with_opt_binary).charset == NULL)
              MYSQL_YYABORT;
            (yyval.charset_with_opt_binary).force_binary= false;
          }
#line 30086 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 856:
#line 7063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 30092 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 857:
#line 7064 "sql_yacc.yy" /* yacc.c:1646  */
    {
            warn_about_deprecated_binary(YYTHD);
            (yyval.is_not_empty)= true;
          }
#line 30101 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 858:
#line 7072 "sql_yacc.yy" /* yacc.c:1646  */
    {
          if ((yyvsp[0].ulong_num) == 0)
          {
            YYTHD->syntax_error();
            MYSQL_YYABORT;
          }
        }
#line 30113 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 859:
#line 7080 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (yyvsp[-2].ulong_num); }
#line 30119 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 862:
#line 7094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_references).table_name= (yyvsp[-3].table);
            (yyval.fk_references).reference_list= (yyvsp[-2].reference_list);
            (yyval.fk_references).fk_match_option= (yyvsp[-1].opt_match_clause);
            (yyval.fk_references).fk_update_opt= (yyvsp[0].fk_options).fk_update_opt;
            (yyval.fk_references).fk_delete_opt= (yyvsp[0].fk_options).fk_delete_opt;
          }
#line 30131 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 863:
#line 7104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= NULL; }
#line 30137 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 864:
#line 7105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.reference_list)= (yyvsp[-1].reference_list); }
#line 30143 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 865:
#line 7110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= (yyvsp[-2].reference_list);
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if (key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30154 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 866:
#line 7117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.reference_list)= NEW_PTN List<Key_part_spec>;
            auto key= NEW_PTN Key_part_spec(to_lex_cstring((yyvsp[0].lexer.lex_str)), 0, ORDER_ASC);
            if ((yyval.reference_list) == NULL || key == NULL || (yyval.reference_list)->push_back(key))
              MYSQL_YYABORT;
          }
#line 30165 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 867:
#line 7126 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_UNDEF; }
#line 30171 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 868:
#line 7127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_FULL; }
#line 30177 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 869:
#line 7128 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_PARTIAL; }
#line 30183 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 870:
#line 7129 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_match_clause)= FK_MATCH_SIMPLE; }
#line 30189 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 871:
#line 7134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30198 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 872:
#line 7139 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= FK_OPTION_UNDEF;
          }
#line 30207 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 873:
#line 7144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= FK_OPTION_UNDEF;
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30216 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 874:
#line 7150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[-3].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[0].m_fk_option);
          }
#line 30225 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 875:
#line 7156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.fk_options).fk_update_opt= (yyvsp[0].m_fk_option);
            (yyval.fk_options).fk_delete_opt= (yyvsp[-3].m_fk_option);
          }
#line 30234 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 876:
#line 7163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_RESTRICT; }
#line 30240 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 877:
#line 7164 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_CASCADE; }
#line 30246 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 878:
#line 7165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_SET_NULL; }
#line 30252 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 879:
#line 7166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_NO_ACTION; }
#line 30258 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 880:
#line 7167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_fk_option)= FK_OPTION_DEFAULT;  }
#line 30264 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 881:
#line 7171 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_PRIMARY; }
#line 30270 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 882:
#line 7172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 30276 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 883:
#line 7176 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30282 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 884:
#line 7177 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30288 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 885:
#line 7181 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30294 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 887:
#line 7186 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30300 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 888:
#line 7187 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30306 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 889:
#line 7188 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30312 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 890:
#line 7192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_MULTIPLE; }
#line 30318 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 891:
#line 7193 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_type)= KEYTYPE_UNIQUE; }
#line 30324 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 892:
#line 7197 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30330 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 894:
#line 7203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30340 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 895:
#line 7209 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30350 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 897:
#line 7219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING plugin_name= {(yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length};
            if (!plugin_is_ready(plugin_name, MYSQL_FTPARSER_PLUGIN))
            {
              my_error(ER_FUNCTION_NOT_DEFINED, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            else
              (yyval.index_option)= NEW_PTN PT_fulltext_index_parser_name(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30365 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 898:
#line 7232 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30371 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 900:
#line 7238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30381 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 901:
#line 7244 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30391 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 903:
#line 7256 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_options).init(YYMEM_ROOT); }
#line 30397 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 905:
#line 7262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_options).init(YYMEM_ROOT);
            if ((yyval.index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
          }
#line 30407 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 906:
#line 7268 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].index_options).push_back((yyvsp[0].index_option)))
              MYSQL_YYABORT; // OOM
            (yyval.index_options)= (yyvsp[-1].index_options);
          }
#line 30417 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 907:
#line 7276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30423 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 908:
#line 7277 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= (yyvsp[0].index_option); }
#line 30429 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 909:
#line 7282 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_block_size((yyvsp[0].ulong_num)); }
#line 30435 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 910:
#line 7284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_comment(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 30443 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 911:
#line 7288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.index_option)= NEW_PTN PT_index_visibility((yyvsp[0].visibility));
          }
#line 30451 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 912:
#line 7311 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[0].lexer.lex_str), NULL}; }
#line 30457 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 913:
#line 7312 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30463 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 914:
#line 7313 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_name_and_type)= {(yyvsp[-2].lexer.lex_str), NEW_PTN PT_index_type((yyvsp[0].key_alg))}; }
#line 30469 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 915:
#line 7317 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option) = nullptr; }
#line 30475 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 917:
#line 7322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30481 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 918:
#line 7323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_option)= NEW_PTN PT_index_type((yyvsp[0].key_alg)); }
#line 30487 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 919:
#line 7327 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= true; }
#line 30493 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 920:
#line 7328 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.visibility)= false; }
#line 30499 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 921:
#line 7332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_BTREE; }
#line 30505 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 922:
#line 7333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_RTREE; }
#line 30511 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 923:
#line 7334 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_alg)= HA_KEY_ALG_HASH; }
#line 30517 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 924:
#line 7339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30527 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 925:
#line 7345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; // OOM
          }
#line 30538 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 926:
#line 7355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].order_direction), 0);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30548 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 927:
#line 7361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int key_part_length= atoi((yyvsp[-2].lexer.lex_str).str);
            if (!key_part_length)
            {
              my_error(ER_KEY_PART_0, MYF(0), (yyvsp[-4].lexer.lex_str).str);
            }
            (yyval.key_part)= NEW_PTN PT_key_part_specification(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[0].order_direction),
                                                  key_part_length);
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30564 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 928:
#line 7376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
            (yyval.index_column_list)= (yyvsp[-2].index_column_list);
          }
#line 30574 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 929:
#line 7382 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // The order is ignored.
            (yyval.index_column_list)= NEW_PTN List<PT_key_part_specification>;
            if ((yyval.index_column_list) == NULL || (yyval.index_column_list)->push_back((yyvsp[0].key_part)))
              MYSQL_YYABORT; /* purecov: deadcode */
          }
#line 30585 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 931:
#line 7393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_part)= NEW_PTN PT_key_part_specification((yyvsp[-2].item), (yyvsp[0].order_direction));
            if ((yyval.key_part) == NULL)
              MYSQL_YYABORT;
          }
#line 30595 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 932:
#line 7401 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= NULL_STR; }
#line 30601 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 934:
#line 7406 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= null_lex_str; }
#line 30607 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 935:
#line 7407 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 30613 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 936:
#line 7412 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            if ((yyval.string_list) == NULL || (yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT; // OOM
          }
#line 30623 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 937:
#line 7418 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.string_list)->push_back((yyvsp[0].string)))
              MYSQL_YYABORT;
          }
#line 30632 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 938:
#line 7430 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].alter_list).actions,
                  (yyvsp[0].alter_list).flags.algo.get_or_default(),
                  (yyvsp[0].alter_list).flags.lock.get_or_default(),
                  (yyvsp[0].alter_list).flags.validation.get_or_default());
          }
#line 30646 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 939:
#line 7440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_table_standalone_stmt(
                  YYMEM_ROOT,
                  (yyvsp[-1].table),
                  (yyvsp[0].standalone_alter_table_action).action,
                  (yyvsp[0].standalone_alter_table_action).flags.algo.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.lock.get_or_default(),
                  (yyvsp[0].standalone_alter_table_action).flags.validation.get_or_default());
          }
#line 30660 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 940:
#line 7453 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
            Lex->create_info->default_table_charset= NULL;
            Lex->create_info->used_fields= 0;
          }
#line 30672 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 941:
#line 7461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_ALTER_DB;
            lex->name= (yyvsp[-2].lexer.lex_str);
            if (lex->name.str == NULL &&
                lex->copy_db_to(&lex->name.str, &lex->name.length))
              MYSQL_YYABORT;
          }
#line 30685 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 942:
#line 7473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 30700 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 943:
#line 7484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_PROCEDURE;
            lex->spname= (yyvsp[-2].spname);
          }
#line 30711 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 944:
#line 7494 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 30726 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 945:
#line 7505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;

            lex->sql_command= SQLCOM_ALTER_FUNCTION;
            lex->spname= (yyvsp[-2].spname);
          }
#line 30737 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 946:
#line 7515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 30752 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 947:
#line 7526 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30758 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 948:
#line 7533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "ALTER VIEW");
              MYSQL_YYABORT;
            }
            lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED;
            lex->create_view_mode= enum_view_create_mode::VIEW_ALTER;
          }
#line 30774 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 949:
#line 7545 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 30780 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 950:
#line 7550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is safe to use Lex->spname because
              ALTER EVENT xxx RENATE TO yyy DO ALTER EVENT RENAME TO
              is not allowed. Lex->spname is used in the case of RENAME TO
              If it had to be supported spname had to be added to
              Event_parse_data.
            */

            if (!(Lex->event_parse_data= new (YYTHD->mem_root) Event_parse_data()))
              MYSQL_YYABORT;
            Lex->event_parse_data->identifier= (yyvsp[0].spname);

            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 30800 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 951:
#line 7570 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyvsp[-4].num) || (yyvsp[-3].num) || (yyvsp[-2].num) || (yyvsp[-1].num) || (yyvsp[0].num)))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            /*
              sql_command is set here because some rules in ev_sql_stmt
              can overwrite it
            */
            Lex->sql_command= SQLCOM_ALTER_EVENT;
          }
#line 30817 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 952:
#line 7587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_logfile_group{ALTER_LOGFILE_GROUP,
                                                          (yyvsp[-3].lexer.lex_str), pc, (yyvsp[-1].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ //OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30840 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 953:
#line 7609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_add_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30862 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 954:
#line 7628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace_drop_datafile{(yyvsp[-3].lexer.lex_str), (yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30885 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 955:
#line 7647 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_alter_tablespace_rename{(yyvsp[-3].lexer.lex_str), (yyvsp[0].lexer.lex_str)};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30897 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 956:
#line 7655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            Lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!Lex->m_sql_cmd)
              MYSQL_YYABORT; // OOM

            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30920 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 957:
#line 7678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_alter_undo_tablespace{
              ALTER_UNDO_TABLESPACE, (yyvsp[-3].lexer.lex_str),
              {nullptr, 0}, pc, (yyvsp[-1].alter_tablespace_type)};
            if (!cmd)
              MYSQL_YYABORT; //OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 30944 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 958:
#line 7701 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_SERVER;
            lex->server_options.m_server_name= (yyvsp[-4].lexer.lex_str);
            lex->m_sql_cmd=
              NEW_PTN Sql_cmd_alter_server(&Lex->server_options);
          }
#line 30956 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 960:
#line 7715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-6].lex_user)->auth.str= nullptr;
            (yyvsp[-6].lex_user)->auth.length= 0;
            (yyvsp[-6].lex_user)->has_password_generator= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-6].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-6].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 30974 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 961:
#line 7730 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            if ((yyvsp[-1].lex_cstr).str != nullptr) {
              (yyvsp[-5].lex_user)->current_auth= (yyvsp[-1].lex_cstr);
              (yyvsp[-5].lex_user)->uses_replace_clause= true;
            }
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
          }
#line 30991 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 962:
#line 7743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-3].lex_user)->discard_old_password= true;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->auth= NULL_CSTR;
          }
#line 31001 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 963:
#line 7749 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_ALL);
              MAKE_CMD(tmp);
          }
#line 31017 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 964:
#line 7761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            List<LEX_USER> *role_list= new (YYMEM_ROOT) List<LEX_USER>;
            auto *tmp=
                NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                   users, role_list,
                                                   role_enum::ROLE_NONE);
              MAKE_CMD(tmp);
          }
#line 31033 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 965:
#line 7773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            List<LEX_USER> *users= new (YYMEM_ROOT) List<LEX_USER>;
            if (users == NULL || users->push_back((yyvsp[-3].lex_user)))
              MYSQL_YYABORT;
            auto *tmp=
              NEW_PTN PT_alter_user_default_role(Lex->drop_if_exists,
                                                 users, (yyvsp[0].user_list),
                                                 role_enum::ROLE_NAME);
            MAKE_CMD(tmp);
          }
#line 31048 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 966:
#line 7786 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = LEX_CSTRING{nullptr, 0}; }
#line 31054 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 967:
#line 7787 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 31060 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 968:
#line 7794 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_resource_group(to_lex_cstring((yyvsp[-4].lexer.lex_str)),
                                                (yyvsp[-3].resource_group_vcpu_list_type), (yyvsp[-2].resource_group_priority_type), (yyvsp[-1].resource_group_state_type), (yyvsp[0].resource_group_flag_type));
          }
#line 31069 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 969:
#line 7802 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_ALTER_USER;
            lex->drop_if_exists= (yyvsp[0].num);
          }
#line 31079 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 970:
#line 7810 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31085 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 974:
#line 7821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= false;
          }
#line 31095 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 975:
#line 7827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->alter_password.update_account_locked_column= true;
            lex->alter_password.account_locked= true;
          }
#line 31105 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 976:
#line 7833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= true;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31117 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 977:
#line 7841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[-1].ulong_num) == 0 || (yyvsp[-1].ulong_num) > UINT_MAX16)
            {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[-1].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "DAY", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.expire_after_days= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31136 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 978:
#line 7856 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= false;
          }
#line 31148 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 979:
#line 7864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.expire_after_days= 0;
            lex->alter_password.update_password_expired_column= false;
            Lex->alter_password.update_password_expired_fields= true;
            lex->alter_password.use_default_password_lifetime= true;
          }
#line 31160 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 980:
#line 7872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= (yyvsp[0].ulong_num);
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= false;
          }
#line 31171 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 981:
#line 7879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_history_length= 0;
            lex->alter_password.update_password_history= true;
            lex->alter_password.use_default_password_history= true;
          }
#line 31182 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 982:
#line 7886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= (yyvsp[-1].ulong_num);
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= false;
          }
#line 31193 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 983:
#line 7893 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.password_reuse_interval= 0;
            lex->alter_password.update_password_reuse_interval= true;
            lex->alter_password.use_default_password_reuse_interval= true;
          }
#line 31204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 984:
#line 7900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::YES;
          }
#line 31214 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 985:
#line 7906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::DEFAULT;
          }
#line 31224 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 986:
#line 7912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_require_current=
                Lex_acl_attrib_udyn::NO;
          }
#line 31234 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 987:
#line 7918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "FAILED_LOGIN_ATTEMPTS", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_failed_login_attempts= true;
            lex->alter_password.failed_login_attempts= (yyvsp[0].ulong_num);
          }
#line 31250 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 988:
#line 7930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if ((yyvsp[0].ulong_num) > INT_MAX16) {
              char buf[MAX_BIGINT_WIDTH + 1];
              snprintf(buf, sizeof(buf), "%lu", (yyvsp[0].ulong_num));
              my_error(ER_WRONG_VALUE, MYF(0), "PASSWORD_LOCK_TIME", buf);
              MYSQL_YYABORT;
            }
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= (yyvsp[0].ulong_num);
          }
#line 31266 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 989:
#line 7942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->alter_password.update_password_lock_time= true;
            lex->alter_password.password_lock_time= -1;
          }
#line 31276 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 990:
#line 7950 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31282 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 992:
#line 7955 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31288 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 993:
#line 7956 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 31294 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 994:
#line 7961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.questions=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::QUERIES_PER_HOUR;
          }
#line 31304 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 995:
#line 7967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.updates=(yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::UPDATES_PER_HOUR;
          }
#line 31314 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 996:
#line 7973 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.conn_per_hour= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::CONNECTIONS_PER_HOUR;
          }
#line 31324 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 997:
#line 7979 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->mqh.user_conn= (yyvsp[0].ulong_num);
            lex->mqh.specified_limits|= USER_RESOURCES::USER_CONNECTIONS;
          }
#line 31334 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 998:
#line 7988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty LEX_USER means current_user */
            LEX_USER *curr_user;
            if (!(curr_user= (LEX_USER*) Lex->thd->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;

            memset(curr_user, 0, sizeof(LEX_USER));
            Lex->users_list.push_back(curr_user);
            (yyval.lex_user)= curr_user;
          }
#line 31349 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 999:
#line 8001 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31355 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1000:
#line 8002 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31361 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1001:
#line 8003 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31367 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1002:
#line 8004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31373 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1003:
#line 8008 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31379 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1004:
#line 8010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Use lex's spname to hold the new name.
              The original name is in the Event_parse_data object
            */
            Lex->spname= (yyvsp[0].spname);
            (yyval.num)= 1;
          }
#line 31392 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1005:
#line 8021 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;}
#line 31398 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1006:
#line 8022 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 31404 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1007:
#line 8026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str).str= 0; (yyval.lexer.lex_str).length= 0; }
#line 31410 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1008:
#line 8027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 31416 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1010:
#line 8033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list)= (yyvsp[-1].alter_list);
            if ((yyval.alter_list).actions == NULL)
            {
              (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
              if ((yyval.alter_list).actions == NULL)
                MYSQL_YYABORT; // OOM
            }
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31432 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1011:
#line 8048 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags.init();
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31441 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1012:
#line 8053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.standalone_alter_table_action).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.standalone_alter_table_action).action= (yyvsp[0].alter_table_standalone_action);
          }
#line 31450 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1013:
#line 8061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_partition_by((yyvsp[0].partition_clause));
          }
#line 31458 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1014:
#line 8065 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_remove_partitioning;
          }
#line 31466 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1015:
#line 8072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NULL;
          }
#line 31475 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1016:
#line 8077 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[0].algo_and_lock_and_validation);
            (yyval.alter_list).actions= NULL;
          }
#line 31484 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1018:
#line 8083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.alter_list).flags.merge((yyvsp[0].alter_list).flags);
            (yyval.alter_list).actions= (yyvsp[0].alter_list).actions;
          }
#line 31494 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1019:
#line 8092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_tablespace;
          }
#line 31502 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1020:
#line 8096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_tablespace;
          }
#line 31510 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1021:
#line 8107 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition((yyvsp[0].num));
          }
#line 31518 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1022:
#line 8111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_def_list((yyvsp[-3].num), (yyvsp[-1].part_def_list));
          }
#line 31526 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1023:
#line 8115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_add_partition_num((yyvsp[-2].num), (yyvsp[0].ulong_num));
          }
#line 31534 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1024:
#line 8119 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_drop_partition(*(yyvsp[0].string_list));
          }
#line 31542 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1025:
#line 8124 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_rebuild_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31550 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1026:
#line 8129 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_optimize_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31558 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1027:
#line 8134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_analyze_partition((yyvsp[-1].num), (yyvsp[0].string_list));
          }
#line 31566 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1028:
#line 8138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_check_partition((yyvsp[-1].string_list),
                                                       (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31575 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1029:
#line 8145 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_repair_partition((yyvsp[-2].num), (yyvsp[-1].string_list),
                                                        (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 31584 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1030:
#line 8150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_coalesce_partition((yyvsp[-1].num), (yyvsp[0].ulong_num));
          }
#line 31592 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1031:
#line 8154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_truncate_partition((yyvsp[0].string_list));
          }
#line 31600 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1032:
#line 8158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition((yyvsp[0].num));
          }
#line 31608 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1033:
#line 8163 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_reorganize_partition_into((yyvsp[-5].num), *(yyvsp[-4].string_list), (yyvsp[-1].part_def_list));
          }
#line 31616 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1034:
#line 8168 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_exchange_partition((yyvsp[-4].lexer.lex_str), (yyvsp[-1].table), (yyvsp[0].with_validation));
          }
#line 31624 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1035:
#line 8173 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_discard_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31632 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1036:
#line 8178 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_import_partition_tablespace((yyvsp[-1].string_list));
          }
#line 31640 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1037:
#line 8182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_load;
          }
#line 31648 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1038:
#line 8186 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_standalone_action)= NEW_PTN PT_alter_table_secondary_unload;
          }
#line 31656 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1039:
#line 8192 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_validation)= Alter_info::ALTER_VALIDATION_DEFAULT; }
#line 31662 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1041:
#line 8198 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITH_VALIDATION;
          }
#line 31670 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1042:
#line 8202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_validation)= Alter_info::ALTER_WITHOUT_VALIDATION;
          }
#line 31678 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1043:
#line 8208 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 31684 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1045:
#line 8218 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= NEW_PTN Mem_root_array<PT_ddl_table_option *>(YYMEM_ROOT);
            if ((yyval.alter_list).actions == NULL || (yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31695 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1046:
#line 8225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.alter_list).actions->push_back((yyvsp[0].alter_table_action)))
              MYSQL_YYABORT; // OOM
          }
#line 31704 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1047:
#line 8230 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 31712 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1048:
#line 8234 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_list).flags.init();
            (yyval.alter_list).actions= (yyvsp[0].space_separated_alter_table_opts);
          }
#line 31721 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1049:
#line 8239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            for (auto *option : *(yyvsp[0].space_separated_alter_table_opts))
            {
              if ((yyvsp[-2].alter_list).actions->push_back(option))
                MYSQL_YYABORT; // OOM
            }
          }
#line 31733 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1051:
#line 8251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation)= (yyvsp[-2].algo_and_lock_and_validation);
            (yyval.algo_and_lock_and_validation).merge((yyvsp[0].algo_and_lock_and_validation));
          }
#line 31742 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1052:
#line 8259 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].field_def), (yyvsp[-1].table_constraint_def), (yyvsp[0].c_str));
          }
#line 31750 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1053:
#line 8263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_columns((yyvsp[-1].table_element_list));
          }
#line 31758 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1054:
#line 8267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_add_constraint((yyvsp[0].table_constraint_def));
          }
#line 31766 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1055:
#line 8271 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 31774 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1056:
#line 8275 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_change_column((yyvsp[-2].lexer.lex_str), (yyvsp[-1].field_def), (yyvsp[0].c_str));
          }
#line 31782 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1057:
#line 8279 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($4) is ignored!
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_column((yyvsp[-1].lexer.lex_str).str);
          }
#line 31791 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1058:
#line 8284 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_foreign_key((yyvsp[0].lexer.lex_str).str);
          }
#line 31799 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1059:
#line 8288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key(primary_key_name);
          }
#line 31807 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1060:
#line 8292 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_key((yyvsp[0].lexer.lex_str).str);
          }
#line 31815 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1061:
#line 8296 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_check_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 31823 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1062:
#line 8300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_drop_constraint((yyvsp[0].lexer.lex_str).str);
          }
#line 31831 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1063:
#line 8304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(false);
          }
#line 31839 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1064:
#line 8308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_enable_keys(true);
          }
#line 31847 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1065:
#line 8312 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-3].lexer.lex_str).str, (yyvsp[0].item));
          }
#line 31855 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1066:
#line 8316 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-5].lexer.lex_str).str, (yyvsp[-1].item));
          }
#line 31863 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1067:
#line 8320 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_set_default((yyvsp[-2].lexer.lex_str).str, NULL);
          }
#line 31871 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1068:
#line 8324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_index_visible((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].visibility));
          }
#line 31879 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1069:
#line 8328 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_check_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 31887 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1070:
#line 8332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_enforce_constraint((yyvsp[-1].lexer.lex_str).str, (yyvsp[0].is_not_empty));
          }
#line 31895 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1071:
#line 8336 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename((yyvsp[0].table));
          }
#line 31903 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1072:
#line 8340 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_key((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 31911 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1073:
#line 8344 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_rename_column((yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 31919 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1074:
#line 8348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_convert_to_charset((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 31927 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1075:
#line 8352 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action) = NEW_PTN PT_alter_table_convert_to_charset(
                YYTHD->variables.collation_database,
                (yyvsp[0].lexer.charset) ? (yyvsp[0].lexer.charset) : YYTHD->variables.collation_database);
          }
#line 31937 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1076:
#line 8358 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_force;
          }
#line 31945 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1077:
#line 8362 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_action)= NEW_PTN PT_alter_table_order((yyvsp[0].order_list));
          }
#line 31953 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1078:
#line 8369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 31962 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1079:
#line 8374 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).lock.set((yyvsp[0].alter_table_lock));
          }
#line 31971 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1080:
#line 8379 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.algo_and_lock_and_validation).init();
            (yyval.algo_and_lock_and_validation).validation.set((yyvsp[0].with_validation));
          }
#line 31980 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1081:
#line 8386 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_index_lock_and_algorithm).init(); }
#line 31986 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1082:
#line 8388 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 31995 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1083:
#line 8393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32004 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1084:
#line 8398 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[-1].alter_table_lock));
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[0].alter_table_algorithm));
          }
#line 32014 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1085:
#line 8404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.opt_index_lock_and_algorithm).init();
            (yyval.opt_index_lock_and_algorithm).algo.set((yyvsp[-1].alter_table_algorithm));
            (yyval.opt_index_lock_and_algorithm).lock.set((yyvsp[0].alter_table_lock));
          }
#line 32024 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1086:
#line 8412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_algorithm)= (yyvsp[0].alter_table_algorithm); }
#line 32030 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1087:
#line 8417 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_DEFAULT;
          }
#line 32038 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1088:
#line 8421 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "INPLACE"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INPLACE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "INSTANT"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_INSTANT;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "COPY"))
              (yyval.alter_table_algorithm)= Alter_info::ALTER_TABLE_ALGORITHM_COPY;
            else
            {
              my_error(ER_UNKNOWN_ALTER_ALGORITHM, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32056 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1089:
#line 8437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.alter_table_lock)= (yyvsp[0].alter_table_lock); }
#line 32062 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1090:
#line 8442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_DEFAULT;
          }
#line 32070 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1091:
#line 8446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "NONE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_NONE;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "SHARED"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_SHARED;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "EXCLUSIVE"))
              (yyval.alter_table_lock)= Alter_info::ALTER_TABLE_LOCK_EXCLUSIVE;
            else
            {
              my_error(ER_UNKNOWN_ALTER_LOCK, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 32088 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1094:
#line 8467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32094 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1095:
#line 8468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32100 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1096:
#line 8472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_DEFAULT; }
#line 32106 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1097:
#line 8473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_RESTRICT; }
#line 32112 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1098:
#line 8474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_restrict)= DROP_CASCADE; }
#line 32118 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1099:
#line 8478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= NULL; }
#line 32124 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1100:
#line 8479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= (yyvsp[0].lexer.lex_str).str; }
#line 32130 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1101:
#line 8480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.c_str)= first_keyword; }
#line 32136 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1102:
#line 8484 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32142 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1103:
#line 8485 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32148 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1104:
#line 8486 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32154 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1105:
#line 8487 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32160 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1106:
#line 8492 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_START_GROUP_REPLICATION;
                 }
#line 32169 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1107:
#line 8497 "sql_yacc.yy" /* yacc.c:1646  */
    {
                   LEX *lex=Lex;
                   lex->sql_command = SQLCOM_STOP_GROUP_REPLICATION;
                 }
#line 32178 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1108:
#line 8504 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32184 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1109:
#line 8506 "sql_yacc.yy" /* yacc.c:1646  */
    {
          LEX *lex=Lex;
          lex->sql_command = SQLCOM_SLAVE_STOP;
          lex->type = 0;
          lex->slave_thd_opt= (yyvsp[-1].num);
        }
#line 32195 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1110:
#line 8516 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            /* Clean previous slave connection values */
            lex->slave_connection.reset();
            lex->sql_command = SQLCOM_SLAVE_START;
            lex->type = 0;
            /* We'll use mi structure for UNTIL options */
            lex->mi.set_unspecified();
            lex->slave_thd_opt= (yyvsp[0].num);
          }
#line 32210 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1111:
#line 8531 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              It is not possible to set user's information when
              one is trying to start the SQL Thread.
            */
            if ((Lex->slave_thd_opt & SLAVE_SQL) == SLAVE_SQL &&
                (Lex->slave_thd_opt & SLAVE_IO) != SLAVE_IO &&
                (Lex->slave_connection.user ||
                 Lex->slave_connection.password ||
                 Lex->slave_connection.plugin_auth ||
                 Lex->slave_connection.plugin_dir))
            {
              my_error(ER_SQLTHREAD_WITH_SECURE_SLAVE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 32231 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1113:
#line 8552 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_BEGIN;
            /* READ ONLY and READ WRITE are mutually exclusive. */
            if (((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_WRITE) &&
                ((yyvsp[0].num) & MYSQL_START_TRANS_OPT_READ_ONLY))
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->start_transaction_opt= (yyvsp[0].num);
          }
#line 32248 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1114:
#line 8568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32256 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1115:
#line 8572 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32264 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1116:
#line 8579 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32272 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1117:
#line 8583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32280 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1118:
#line 8590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_WITH_CONS_SNAPSHOT;
          }
#line 32288 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1119:
#line 8594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_ONLY;
          }
#line 32296 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1120:
#line 8598 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= MYSQL_START_TRANS_OPT_READ_WRITE;
          }
#line 32304 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1122:
#line 8609 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32312 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1123:
#line 8613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.user= (yyvsp[0].lexer.lex_str).str;
          }
#line 32320 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1124:
#line 8619 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32328 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1125:
#line 8623 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.password= (yyvsp[0].lexer.lex_str).str;
            Lex->contains_plaintext_password= true;
          }
#line 32337 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1126:
#line 8629 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32345 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1127:
#line 8633 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_auth= (yyvsp[0].lexer.lex_str).str;
          }
#line 32353 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1128:
#line 8639 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* empty */
          }
#line 32361 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1129:
#line 8643 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->slave_connection.plugin_dir= (yyvsp[0].lexer.lex_str).str;
          }
#line 32369 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1130:
#line 8650 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= 0;
          }
#line 32377 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1131:
#line 8654 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32385 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1132:
#line 8661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[0].num);
          }
#line 32393 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1133:
#line 8665 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= (yyvsp[-2].num) | (yyvsp[0].num);
          }
#line 32401 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1134:
#line 8672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_SQL;
          }
#line 32409 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1135:
#line 8676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= SLAVE_IO;
          }
#line 32417 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1136:
#line 8683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->mi.slave_until= false;
          }
#line 32426 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1137:
#line 8688 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (((lex->mi.log_file_name || lex->mi.pos) &&
                lex->mi.gtid) ||
               ((lex->mi.relay_log_name || lex->mi.relay_log_pos) &&
                lex->mi.gtid) ||
                !((lex->mi.log_file_name && lex->mi.pos) ||
                  (lex->mi.relay_log_name && lex->mi.relay_log_pos) ||
                  lex->mi.gtid ||
                  lex->mi.until_after_gaps) ||
                /* SQL_AFTER_MTS_GAPS is meaningless in combination */
                /* with any other coordinates related options       */
                ((lex->mi.log_file_name || lex->mi.pos || lex->mi.relay_log_name
                  || lex->mi.relay_log_pos || lex->mi.gtid)
                 && lex->mi.until_after_gaps))
            {
               my_error(ER_BAD_SLAVE_UNTIL_COND, MYF(0));
               MYSQL_YYABORT;
            }
            lex->mi.slave_until= true;
          }
#line 32452 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1140:
#line 8715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_BEFORE_GTIDS;
          }
#line 32461 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1141:
#line 8720 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.gtid= (yyvsp[0].lexer.lex_str).str;
            Lex->mi.gtid_until_condition= LEX_MASTER_INFO::UNTIL_SQL_AFTER_GTIDS;
          }
#line 32470 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1142:
#line 8725 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->mi.until_after_gaps= true;
          }
#line 32478 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1143:
#line 8732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_CHECKSUM;
            /* Will be overriden during execution. */
            YYPS->m_lock_type= TL_UNLOCK;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
            Lex->check_opt.flags= (yyvsp[0].ulong_num);
          }
#line 32493 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1144:
#line 8745 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 32499 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1145:
#line 8746 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_QUICK; }
#line 32505 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1146:
#line 8747 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= T_EXTEND; }
#line 32511 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1147:
#line 8753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_repair_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                             (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32520 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1148:
#line 8760 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32526 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1151:
#line 8767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32535 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1152:
#line 8774 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;  (yyval.mi_type).sql_flags= 0; }
#line 32541 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1153:
#line 8775 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND; (yyval.mi_type).sql_flags= 0; }
#line 32547 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1154:
#line 8776 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;        (yyval.mi_type).sql_flags= TT_USEFRM; }
#line 32553 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1155:
#line 8782 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_analyze_table_stmt(YYMEM_ROOT, (yyvsp[-3].num), (yyvsp[-1].table_list),
                                              (yyvsp[0].histogram).command, (yyvsp[0].histogram).num_buckets,
                                              (yyvsp[0].histogram).columns);
          }
#line 32563 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1156:
#line 8790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= DEFAULT_NUMBER_OF_HISTOGRAM_BUCKETS; }
#line 32569 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1157:
#line 8792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            int error;
            longlong num= my_strtoll10((yyvsp[-1].lexer.lex_str).str, nullptr, &error);
            MYSQL_YYABORT_UNLESS(error <= 0);

            if (num < 1 || num > MAX_NUMBER_OF_HISTOGRAM_BUCKETS)
            {
              my_error(ER_DATA_OUT_OF_RANGE, MYF(0), "Number of buckets",
                       "ANALYZE TABLE");
              MYSQL_YYABORT;
            }

            (yyval.num)= num;
          }
#line 32588 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1158:
#line 8810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command= Sql_cmd_analyze_table::Histogram_command::NONE;
            (yyval.histogram).columns= nullptr;
            (yyval.histogram).num_buckets= 0;
          }
#line 32598 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1159:
#line 8816 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::UPDATE_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[-1].string_list);
            (yyval.histogram).num_buckets= (yyvsp[0].num);
          }
#line 32609 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1160:
#line 8823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.histogram).command=
              Sql_cmd_analyze_table::Histogram_command::DROP_HISTOGRAM;
            (yyval.histogram).columns= (yyvsp[0].string_list);
            (yyval.histogram).num_buckets= 0;
          }
#line 32620 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1161:
#line 8833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_BINLOG_BASE64_EVENT;
            Lex->binlog_stmt_arg= (yyvsp[0].lexer.lex_str);
          }
#line 32629 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1162:
#line 8841 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_check_table_stmt(YYMEM_ROOT, (yyvsp[-1].table_list),
                                            (yyvsp[0].mi_type).flags, (yyvsp[0].mi_type).sql_flags);
          }
#line 32638 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1163:
#line 8848 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags = T_MEDIUM; (yyval.mi_type).sql_flags= 0; }
#line 32644 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1166:
#line 8855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.mi_type).flags= (yyvsp[-1].mi_type).flags | (yyvsp[0].mi_type).flags;
            (yyval.mi_type).sql_flags= (yyvsp[-1].mi_type).sql_flags | (yyvsp[0].mi_type).sql_flags;
          }
#line 32653 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1167:
#line 8863 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_QUICK;              (yyval.mi_type).sql_flags= 0; }
#line 32659 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1168:
#line 8865 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_FAST;               (yyval.mi_type).sql_flags= 0; }
#line 32665 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1169:
#line 8867 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_MEDIUM;             (yyval.mi_type).sql_flags= 0; }
#line 32671 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1170:
#line 8869 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_EXTEND;             (yyval.mi_type).sql_flags= 0; }
#line 32677 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1171:
#line 8871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= T_CHECK_ONLY_CHANGED; (yyval.mi_type).sql_flags= 0; }
#line 32683 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1172:
#line 8873 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.mi_type).flags= 0;                    (yyval.mi_type).sql_flags= TT_FOR_UPGRADE; }
#line 32689 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1173:
#line 8878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_optimize_table_stmt(YYMEM_ROOT, (yyvsp[-2].num), (yyvsp[0].table_list));
          }
#line 32697 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1174:
#line 8884 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 32703 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1175:
#line 8885 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32709 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1176:
#line 8886 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 32715 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1177:
#line 8891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_RENAME_TABLE;
          }
#line 32723 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1178:
#line 8895 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 32729 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1179:
#line 8897 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_RENAME_USER;
          }
#line 32737 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1180:
#line 8904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 32746 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1181:
#line 8909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[-2].lex_user)) || Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 32755 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1184:
#line 8922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            SELECT_LEX *sl= Select;
            if (!sl->add_table_to_list(lex->thd, (yyvsp[-2].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE) ||
                !sl->add_table_to_list(lex->thd, (yyvsp[0].table),NULL,TL_OPTION_UPDATING,
                                       TL_IGNORE, MDL_EXCLUSIVE))
              MYSQL_YYABORT;
          }
#line 32769 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1185:
#line 8935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_stmt(YYMEM_ROOT, (yyvsp[-2].keycache_list), (yyvsp[0].lex_cstr));
          }
#line 32777 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1186:
#line 8940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_cache_index_partitions_stmt(YYMEM_ROOT,
                                                       (yyvsp[-4].table), (yyvsp[-3].adm_partition), (yyvsp[-2].key_usage_list), (yyvsp[0].lex_cstr));
          }
#line 32786 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1187:
#line 8948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= NEW_PTN Mem_root_array<PT_assign_to_keycache *>(YYMEM_ROOT);
            if ((yyval.keycache_list) == NULL || (yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 32796 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1188:
#line 8954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.keycache_list)= (yyvsp[-2].keycache_list);
            if ((yyval.keycache_list)->push_back((yyvsp[0].assign_to_keycache)))
              MYSQL_YYABORT; // OOM
          }
#line 32806 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1189:
#line 8963 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.assign_to_keycache)= NEW_PTN PT_assign_to_keycache((yyvsp[-1].table), (yyvsp[0].key_usage_list));
          }
#line 32814 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1190:
#line 8969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)= to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 32820 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1191:
#line 8970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = default_key_cache_base; }
#line 32826 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1192:
#line 8976 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_partitions_stmt(YYMEM_ROOT, (yyvsp[-3].table),(yyvsp[-2].adm_partition), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 32834 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1193:
#line 8980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_index_stmt(YYMEM_ROOT, (yyvsp[0].preload_list));
          }
#line 32842 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1194:
#line 8987 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= NEW_PTN Mem_root_array<PT_preload_keys *>(YYMEM_ROOT);
            if ((yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 32852 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1195:
#line 8993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_list)= (yyvsp[-2].preload_list);
            if ((yyval.preload_list) == NULL || (yyval.preload_list)->push_back((yyvsp[0].preload_keys)))
              MYSQL_YYABORT; // OOM
          }
#line 32862 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1196:
#line 9002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.preload_keys)= NEW_PTN PT_preload_keys((yyvsp[-2].table), (yyvsp[-1].key_usage_list), (yyvsp[0].is_not_empty));
          }
#line 32870 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1197:
#line 9009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.adm_partition)= NEW_PTN PT_adm_partition((yyvsp[-1].string_list));
          }
#line 32878 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1198:
#line 9015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 32884 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1199:
#line 9017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE,
                             old_mode ? INDEX_HINT_MASK_JOIN
                                      : INDEX_HINT_MASK_ALL);
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 32895 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1200:
#line 9026 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 32901 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1201:
#line 9027 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 32907 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1202:
#line 9032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_expression));
          }
#line 32915 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1203:
#line 9036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list)),
                                        nullptr, true);
          }
#line 32924 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1204:
#line 9041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[0].query_primary));
          }
#line 32932 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1206:
#line 9081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = (yyvsp[-1].top_level_node);
          }
#line 32940 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1207:
#line 9085 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt((yyvsp[-1].query_expression), (yyvsp[0].into_destination));
          }
#line 32948 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1208:
#line 9089 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[0].locking_clause_list)), (yyvsp[-1].into_destination), true);
          }
#line 32956 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1209:
#line 9093 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node) = NEW_PTN PT_select_stmt(NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list)), (yyvsp[0].into_destination));
          }
#line 32964 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1210:
#line 9134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32972 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1211:
#line 9141 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_expression_body), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32980 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1212:
#line 9147 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32988 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1213:
#line 9154 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression)= NEW_PTN PT_query_expression((yyvsp[-3].with_clause), (yyvsp[-2].query_primary), (yyvsp[-1].order), (yyvsp[0].limit_clause));
          }
#line 32996 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1214:
#line 9159 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33004 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1215:
#line 9165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-2].with_clause), (yyvsp[-1].query_primary), nullptr, (yyvsp[0].limit_clause));
          }
#line 33012 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1216:
#line 9170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression) = NEW_PTN PT_query_expression((yyvsp[-1].with_clause), (yyvsp[0].query_primary), nullptr, nullptr);
          }
#line 33020 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1217:
#line 9177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = (yyvsp[0].query_primary);
          }
#line 33028 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1218:
#line 9181 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33036 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1219:
#line 9185 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary));
          }
#line 33044 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1220:
#line 9189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_expression_body), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33052 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1221:
#line 9193 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_expression_body) = NEW_PTN PT_union((yyvsp[-3].query_primary), (yylsp[-3]), (yyvsp[-1].num), (yyvsp[0].query_primary), true);
          }
#line 33060 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1222:
#line 9200 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_primary); }
#line 33066 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1223:
#line 9201 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary)= (yyvsp[-1].query_expression); }
#line 33072 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1224:
#line 9203 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-2].query_expression), (yyvsp[-1].locking_clause_list));
          }
#line 33080 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1225:
#line 9210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Bison doesn't get polymorphism.
            (yyval.query_primary)= (yyvsp[0].query_primary);
          }
#line 33089 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1226:
#line 9215 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_table_value_constructor((yyvsp[0].values_list));
          }
#line 33097 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1227:
#line 9219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item_list= NEW_PTN PT_select_item_list;
            if (item_list == nullptr ||
                item_list->push_back(
                  NEW_PTN Item_field((yyloc), nullptr, nullptr, "*")))
              MYSQL_YYABORT;
            (yyval.query_primary)= NEW_PTN PT_explicit_table({}, item_list, (yyvsp[0].table_reference_list));
          }
#line 33110 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1228:
#line 9239 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-8].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-7].select_options),  // select_options
                                      (yyvsp[-6].item_list2),  // select_item_list
                                      (yyvsp[-5].into_destination),  // into_clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33128 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1229:
#line 9260 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary)= NEW_PTN PT_query_specification(
                                      (yyvsp[-7].lexer.optimizer_hints),  // SELECT_SYM
                                      (yyvsp[-6].select_options),  // select_options
                                      (yyvsp[-5].item_list2),  // select_item_list
                                      NULL,// no INTO clause
                                      (yyvsp[-4].table_reference_list),  // from
                                      (yyvsp[-3].item),  // where
                                      (yyvsp[-2].group),  // group
                                      (yyvsp[-1].item),  // having
                                      (yyvsp[0].windows),  // windows
                                      (yylsp[-4]).raw.is_empty()); // implicit FROM
          }
#line 33146 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1230:
#line 9276 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33152 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1232:
#line 9281 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[0].table_reference_list); }
#line 33158 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1233:
#line 9285 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list).init(YYMEM_ROOT); }
#line 33164 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1235:
#line 9291 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33174 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1236:
#line 9297 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-2].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[0].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 33184 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1237:
#line 9306 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 33192 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1238:
#line 9313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list).init(YYMEM_ROOT);
            auto table= NEW_PTN
                PT_table_factor_table_ident((yyvsp[0].table), nullptr, NULL_CSTR, nullptr);
            if ((yyval.table_reference_list).push_back(table))
              MYSQL_YYABORT; // OOM
          }
#line 33204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1239:
#line 9324 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= 0;
          }
#line 33212 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1241:
#line 9332 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.select_options).merge((yyvsp[-1].select_options), (yyvsp[0].select_options)))
              MYSQL_YYABORT;
          }
#line 33221 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1243:
#line 9341 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_options).query_spec_options= (yyvsp[0].ulonglong_number);
          }
#line 33229 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1244:
#line 9345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_deprecated_warn_no_replacement(YYTHD, "SQL_NO_CACHE");
            /* Ignored since MySQL 8.0. */
            (yyval.select_options).query_spec_options= 0;
          }
#line 33239 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1245:
#line 9354 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= (yyvsp[-1].locking_clause_list);
            if ((yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33249 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1246:
#line 9360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause_list)= NEW_PTN PT_locking_clause_list(YYTHD->mem_root);
            if ((yyval.locking_clause_list) == nullptr || (yyval.locking_clause_list)->push_back((yyvsp[0].locking_clause)))
              MYSQL_YYABORT; // OOM
          }
#line 33259 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1247:
#line 9369 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause((yyvsp[-1].lock_strength), (yyvsp[0].locked_row_action));
          }
#line 33267 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1248:
#line 9373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_table_locking_clause((yyvsp[-2].lock_strength), (yyvsp[-1].table_ident_list), (yyvsp[0].locked_row_action));
          }
#line 33275 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1249:
#line 9377 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.locking_clause)= NEW_PTN PT_query_block_locking_clause(Lock_strength::SHARE);
          }
#line 33283 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1250:
#line 9383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::UPDATE; }
#line 33289 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1251:
#line 9384 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_strength)= Lock_strength::SHARE; }
#line 33295 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1252:
#line 9388 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_ident_list)= (yyvsp[0].table_ident_list); }
#line 33301 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1253:
#line 9392 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::WAIT; }
#line 33307 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1255:
#line 9397 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::SKIP; }
#line 33313 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1256:
#line 9398 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.locked_row_action)= Locked_row_action::NOWAIT; }
#line 33319 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1257:
#line 9403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 33329 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1258:
#line 9409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 33339 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1259:
#line 9415 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_field((yyloc), NULL, NULL, "*");
            (yyval.item_list2)= NEW_PTN PT_select_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back(item))
              MYSQL_YYABORT;
          }
#line 33350 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1260:
#line 9424 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 33356 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1261:
#line 9426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_expr_with_alias((yyloc), (yyvsp[-1].item), (yylsp[-1]).cpp, to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 33364 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1262:
#line 9433 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=null_lex_str;}
#line 33370 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1263:
#line 9434 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33376 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1264:
#line 9435 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33382 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1265:
#line 9436 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33388 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1266:
#line 9437 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 33394 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1267:
#line 9441 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33400 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1268:
#line 9442 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 33406 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1269:
#line 9448 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_or,
                                             Item_func::COND_OR_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33416 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1270:
#line 9454 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* XOR is a proprietary extension */
            (yyval.item) = NEW_PTN Item_func_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33425 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1271:
#line 9459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= flatten_associative_operator<Item_cond_and,
                                             Item_func::COND_AND_FUNC>(
                                                 YYMEM_ROOT, (yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33435 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1272:
#line 9465 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33443 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1273:
#line 9469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_TRUE);
          }
#line 33451 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1274:
#line 9473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_TRUE);
          }
#line 33459 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1275:
#line 9477 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-2].item), Item::BOOL_IS_FALSE);
          }
#line 33467 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1276:
#line 9481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[-3].item), Item::BOOL_NOT_FALSE);
          }
#line 33475 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1277:
#line 9485 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33483 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1278:
#line 9489 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33491 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1280:
#line 9497 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnull((yyloc), (yyvsp[-2].item));
          }
#line 33499 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1281:
#line 9501 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_isnotnull((yyloc), (yyvsp[-3].item));
          }
#line 33507 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1282:
#line 9505 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_comp_op((yyloc), (yyvsp[-2].item), (yyvsp[-1].boolfunc2creator), (yyvsp[0].item));
          }
#line 33515 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1283:
#line 9509 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].boolfunc2creator) == &comp_equal_creator)
              /*
                We throw this manual parse error rather than split the rule
                comp_op into a null-safe and a non null-safe rule, since doing
                so would add a shift/reduce conflict. It's actually this rule
                and the ones referencing it that cause all the conflicts, but
                we still don't want the count to go up.
              */
              YYTHD->syntax_error_at((yylsp[-2]));
            (yyval.item)= NEW_PTN PTI_comp_op_all((yyloc), (yyvsp[-3].item), (yyvsp[-2].boolfunc2creator), (yyvsp[-1].num), (yyvsp[0].subquery));
          }
#line 33532 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1285:
#line 9526 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-2].item), (yyvsp[0].subquery));
          }
#line 33540 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1286:
#line 9530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item= NEW_PTN Item_in_subselect((yyloc), (yyvsp[-3].item), (yyvsp[0].subquery));
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33549 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1287:
#line 9535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-4].item), true, (yyvsp[-1].item));
          }
#line 33557 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1288:
#line 9539 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->push_front((yyvsp[-6].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), false);
          }
#line 33568 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1289:
#line 9546 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_handle_sql2003_note184_exception((yyloc), (yyvsp[-5].item), false, (yyvsp[-1].item));
          }
#line 33576 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1290:
#line 9550 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].item_list2) == NULL || (yyvsp[-1].item_list2)->push_front((yyvsp[-3].item)) || (yyvsp[-1].item_list2)->value.push_front((yyvsp[-7].item)))
              MYSQL_YYABORT;

            (yyval.item)= NEW_PTN Item_func_in((yyloc), (yyvsp[-1].item_list2), true);
          }
#line 33587 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1291:
#line 9557 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_member_of((yyloc), (yyvsp[-5].item), (yyvsp[-1].item));
          }
#line 33595 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1292:
#line 9561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item), false);
          }
#line 33603 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1293:
#line 9565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_between((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item), true);
          }
#line 33611 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1294:
#line 9569 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item *item1= NEW_PTN Item_func_soundex((yyloc), (yyvsp[-3].item));
            Item *item4= NEW_PTN Item_func_soundex((yyloc), (yyvsp[0].item));
            if ((item1 == NULL) || (item4 == NULL))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_func_eq((yyloc), item1, item4);
          }
#line 33623 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1295:
#line 9577 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-2].item), (yyvsp[0].item), nullptr);
          }
#line 33631 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1296:
#line 9581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item) = NEW_PTN Item_func_like((yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33639 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1297:
#line 9585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-3].item), (yyvsp[0].item), nullptr);
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33648 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1298:
#line 9590 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto item = NEW_PTN Item_func_like((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[0].item));
            (yyval.item) = NEW_PTN Item_func_not((yyloc), item);
          }
#line 33657 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1299:
#line 9595 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-2].item));
            args->push_back((yyvsp[0].item));

            (yyval.item)= NEW_PTN Item_func_regexp_like((yylsp[-2]), args);
          }
#line 33669 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1300:
#line 9603 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto args= NEW_PTN PT_item_list;
            args->push_back((yyvsp[-3].item));
            args->push_back((yyvsp[0].item));
            Item *item= NEW_PTN Item_func_regexp_like((yyloc), args);
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), item, Item::BOOL_NEGATED);
          }
#line 33681 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1304:
#line 9620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_or((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33689 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1305:
#line 9624 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_and((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33697 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1306:
#line 9628 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_left((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33705 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1307:
#line 9632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_shift_right((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33713 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1308:
#line 9636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_plus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33721 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1309:
#line 9640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minus((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33729 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1310:
#line 9644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 0);
          }
#line 33737 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1311:
#line 9648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-4].item), (yyvsp[-1].item), (yyvsp[0].interval), 1);
          }
#line 33745 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1312:
#line 9652 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mul((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33753 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1313:
#line 9656 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 33761 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1314:
#line 9660 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 33769 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1315:
#line 9664 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_int_div((yyloc), (yyvsp[-2].item),(yyvsp[0].item));
          }
#line 33777 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1316:
#line 9668 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33785 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1317:
#line 9672 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33793 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1322:
#line 9686 "sql_yacc.yy" /* yacc.c:1646  */
    {
           push_deprecated_warn(YYTHD, "&&", "AND");
         }
#line 33801 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1325:
#line 9697 "sql_yacc.yy" /* yacc.c:1646  */
    { push_deprecated_warn(YYTHD, "!", "NOT"); }
#line 33807 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1327:
#line 9702 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_eq_creator; }
#line 33813 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1328:
#line 9703 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_equal_creator; }
#line 33819 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1329:
#line 9704 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ge_creator; }
#line 33825 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1330:
#line 9705 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_gt_creator; }
#line 33831 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1331:
#line 9706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_le_creator; }
#line 33837 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1332:
#line 9707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_lt_creator; }
#line 33843 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1333:
#line 9708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.boolfunc2creator) = &comp_ne_creator; }
#line 33849 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1334:
#line 9712 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 33855 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1335:
#line 9713 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 33861 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1341:
#line 9723 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_set_collation((yyloc), (yyvsp[-2].item), (yyvsp[0].lexer.lex_str));
          }
#line 33869 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1343:
#line 9727 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].param_marker); }
#line 33875 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1347:
#line 9732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_concat((yyloc), (yyvsp[-2].item), (yyvsp[0].item));
          }
#line 33883 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1348:
#line 9736 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item); // TODO: do we really want to ignore unary '+' before any kind of literals?
          }
#line 33891 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1349:
#line 9740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_neg((yyloc), (yyvsp[0].item));
          }
#line 33899 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1350:
#line 9744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_bit_neg((yyloc), (yyvsp[0].item));
          }
#line 33907 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1351:
#line 9748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_truth_transform((yyloc), (yyvsp[0].item), Item::BOOL_NEGATED);
          }
#line 33915 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1352:
#line 9752 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_singlerow_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 33923 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1353:
#line 9755 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[-1].item); }
#line 33929 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1354:
#line 9757 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 33937 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1355:
#line 9761 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_row((yyloc), (yyvsp[-3].item), (yyvsp[-1].item_list2)->value);
          }
#line 33945 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1356:
#line 9765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_exists_subselect((yyloc), (yyvsp[0].subquery));
          }
#line 33953 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1357:
#line 9769 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_odbc_date((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[-1].item));
          }
#line 33961 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1358:
#line 9773 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_match((yyloc), (yyvsp[-5].item_list2), (yyvsp[-2].item), (yyvsp[-1].num));
          }
#line 33969 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1359:
#line 9777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[0]), (yyvsp[0].item), ITEM_CAST_CHAR, &my_charset_bin);
          }
#line 33977 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1360:
#line 9781 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-4]), (yyvsp[-4].item), &(yyvsp[-2].cast_type), (yyvsp[-1].num));
          }
#line 33985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1361:
#line 9785 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_case((yyloc), *(yyvsp[-2].item_list), (yyvsp[-3].item), (yyvsp[-1].item) );
          }
#line 33993 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1362:
#line 9789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= create_func_cast(YYTHD, (yylsp[-3]), (yyvsp[-3].item), &(yyvsp[-1].cast_type));
          }
#line 34001 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1363:
#line 9793 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_conv_charset((yyloc), (yyvsp[-3].item),(yyvsp[-1].lexer.charset));
          }
#line 34009 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1364:
#line 9797 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc), (yyvsp[-1].item));
          }
#line 34017 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1365:
#line 9801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_insert_value((yyloc), (yyvsp[-1].item));
          }
#line 34025 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1366:
#line 9806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[0].item), (yyvsp[-3].item), (yyvsp[-2].interval), 0);
          }
#line 34033 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1367:
#line 9810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            (yyval.item)= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
          }
#line 34044 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1368:
#line 9817 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Item_string *path=
              NEW_PTN Item_string((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                                  YYTHD->variables.collation_connection);
            Item *extr= NEW_PTN Item_func_json_extract(YYTHD, (yyloc), (yyvsp[-2].item), path);
            (yyval.item)= NEW_PTN Item_func_json_unquote((yyloc), extr);
          }
#line 34056 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1369:
#line 9827 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 34062 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1370:
#line 9828 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 34068 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1371:
#line 9839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-1].item_list2));
          }
#line 34076 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1372:
#line 9843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_char((yyloc), (yyvsp[-3].item_list2), (yyvsp[-1].lexer.charset));
          }
#line 34084 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1373:
#line 9847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_current_user((yyloc));
          }
#line 34092 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1374:
#line 9851 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_date((yyloc), (yyvsp[-1].item));
          }
#line 34100 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1375:
#line 9855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_dayofmonth((yyloc), (yyvsp[-1].item));
          }
#line 34108 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1376:
#line 9859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_hour((yyloc), (yyvsp[-1].item));
          }
#line 34116 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1377:
#line 9863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_insert((yyloc), (yyvsp[-7].item), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34124 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1378:
#line 9867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34132 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1379:
#line 9871 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_interval((yyloc), YYMEM_ROOT, (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item_list2));
          }
#line 34140 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1380:
#line 9875 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_left((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34148 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1381:
#line 9879 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_minute((yyloc), (yyvsp[-1].item));
          }
#line 34156 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1382:
#line 9883 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_month((yyloc), (yyvsp[-1].item));
          }
#line 34164 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1383:
#line 9887 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_right((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34172 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1384:
#line 9891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_second((yyloc), (yyvsp[-1].item));
          }
#line 34180 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1385:
#line 9895 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_time((yyloc), (yyvsp[-1].item));
          }
#line 34188 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1386:
#line 9899 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_typecast_datetime((yyloc), (yyvsp[-1].item));
          }
#line 34196 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1387:
#line 9903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_add_time((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), 1, 0);
          }
#line 34204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1388:
#line 9907 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34213 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1389:
#line 9912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_LEADING);
          }
#line 34222 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1390:
#line 9917 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_TRAILING);
          }
#line 34231 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1391:
#line 9922 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), Item_func_trim::TRIM_BOTH);
          }
#line 34239 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1392:
#line 9926 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_LEADING);
          }
#line 34247 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1393:
#line 9930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_TRAILING);
          }
#line 34255 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1394:
#line 9934 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), Item_func_trim::TRIM_BOTH);
          }
#line 34263 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1395:
#line 9938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_trim((yyloc), (yyvsp[-1].item), (yyvsp[-3].item),
                                       Item_func_trim::TRIM_BOTH_DEFAULT);
          }
#line 34272 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1396:
#line 9943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_user((yyloc));
          }
#line 34280 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1397:
#line 9947 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_year((yyloc), (yyvsp[-1].item));
          }
#line 34288 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1398:
#line 9966 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 0);
          }
#line 34296 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1399:
#line 9970 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34304 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1400:
#line 9974 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_local((yyloc));
          }
#line 34312 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1401:
#line 9978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_local((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34320 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1402:
#line 9983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 0);
          }
#line 34328 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1403:
#line 9988 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34336 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1404:
#line 9992 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_extract((yyloc),  (yyvsp[-3].interval), (yyvsp[-1].item));
          }
#line 34344 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1405:
#line 9996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_get_format((yyloc), (yyvsp[-3].date_time_type), (yyvsp[-1].item));
          }
#line 34352 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1406:
#line 10000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_now((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34361 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1407:
#line 10005 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_locate((yyloc), (yyvsp[-1].item),(yyvsp[-3].item));
          }
#line 34369 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1408:
#line 10009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-3].item), (yyvsp[-1].item), INTERVAL_DAY, 1);
          }
#line 34377 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1409:
#line 10013 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-5].item), (yyvsp[-2].item), (yyvsp[-1].interval), 1);
          }
#line 34385 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1410:
#line 10017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34393 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1411:
#line 10021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34401 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1412:
#line 10025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34409 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1413:
#line 10029 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_substr((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34417 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1414:
#line 10033 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_nonkeyword_sysdate((yyloc),
              static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34426 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1415:
#line 10038 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_date_add_interval((yyloc), (yyvsp[-1].item), (yyvsp[-3].item), (yyvsp[-5].interval_time_st), 0);
          }
#line 34434 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1416:
#line 10042 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_timestamp_diff((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),(yyvsp[-5].interval_time_st));
          }
#line 34442 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1417:
#line 10046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curdate_utc((yyloc));
          }
#line 34450 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1418:
#line 10050 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_curtime_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34458 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1419:
#line 10054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_now_utc((yyloc), static_cast<uint8>((yyvsp[0].ulong_num)));
          }
#line 34466 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1420:
#line 10066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_ascii((yyloc), (yyvsp[-1].item));
          }
#line 34474 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1421:
#line 10070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_charset((yyloc), (yyvsp[-1].item));
          }
#line 34482 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1422:
#line 10074 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_coalesce((yyloc), (yyvsp[-1].item_list2));
          }
#line 34490 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1423:
#line 10078 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_collation((yyloc), (yyvsp[-1].item));
          }
#line 34498 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1424:
#line 10082 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_database((yyloc));
          }
#line 34506 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1425:
#line 10086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_if((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34514 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1426:
#line 10090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34522 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1427:
#line 10094 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_format((yyloc), (yyvsp[-5].item), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34530 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1428:
#line 10098 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_microsecond((yyloc), (yyvsp[-1].item));
          }
#line 34538 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1429:
#line 10102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_mod((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34546 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1430:
#line 10106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_quarter((yyloc), (yyvsp[-1].item));
          }
#line 34554 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1431:
#line 10110 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_repeat((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34562 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1432:
#line 10114 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_replace((yyloc), (yyvsp[-5].item),(yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34570 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1433:
#line 10118 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_reverse((yyloc), (yyvsp[-1].item));
          }
#line 34578 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1434:
#line 10122 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_row_count((yyloc));
          }
#line 34586 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1435:
#line 10126 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_round((yyloc), (yyvsp[-3].item),(yyvsp[-1].item),1);
          }
#line 34594 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1436:
#line 10130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-1].item), NULL);
          }
#line 34602 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1437:
#line 10134 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_week((yyloc), (yyvsp[-3].item), (yyvsp[-1].item));
          }
#line 34610 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1438:
#line 10138 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-1].item), 0, 0, 0);
          }
#line 34618 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1439:
#line 10142 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0);
          }
#line 34626 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1440:
#line 10146 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-4].item), 0, (yyvsp[-1].ulong_num), 0, true);
          }
#line 34634 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1441:
#line 10150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_weight_string((yyloc), (yyvsp[-7].item), (yyvsp[-5].ulong_num), (yyvsp[-3].ulong_num), (yyvsp[-1].ulong_num));
          }
#line 34642 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1443:
#line 10158 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_geometrycollection,
                        Geometry::wkb_point);
          }
#line 34652 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1444:
#line 10164 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_linestring,
                        Geometry::wkb_point);
          }
#line 34662 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1445:
#line 10170 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multilinestring,
                        Geometry::wkb_linestring);
          }
#line 34672 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1446:
#line 10176 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipoint,
                        Geometry::wkb_point);
          }
#line 34682 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1447:
#line 10182 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_multipolygon,
                        Geometry::wkb_polygon);
          }
#line 34692 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1448:
#line 10188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_point((yyloc), (yyvsp[-3].item),(yyvsp[-1].item));
          }
#line 34700 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1449:
#line 10192 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_spatial_collection((yyloc), (yyvsp[-1].item_list2),
                        Geometry::wkb_polygon,
                        Geometry::wkb_linestring);
          }
#line 34710 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1450:
#line 10210 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_ident_sys((yylsp[-3]), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 34718 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1451:
#line 10214 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_function_call_generic_2d((yyloc), (yyvsp[-5].lexer.lex_str), (yyvsp[-3].lexer.lex_str), (yyvsp[-1].item_list2));
          }
#line 34726 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1452:
#line 10221 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].num) | (yyvsp[0].num); }
#line 34732 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1453:
#line 10223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= FT_BOOL;
            DBUG_EXECUTE_IF("simulate_bug18831513",
                            {
                              THD *thd= YYTHD;
                              if (thd->sp_runtime_ctx)
                                YYTHD->syntax_error();
                            });
          }
#line 34746 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1454:
#line 10235 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 34752 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1455:
#line 10236 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_NL; }
#line 34758 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1456:
#line 10240 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0;         }
#line 34764 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1457:
#line 10241 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= FT_EXPAND; }
#line 34770 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1458:
#line 10245 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 34776 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1459:
#line 10246 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 34782 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1460:
#line 10251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 34792 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1461:
#line 10257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 34802 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1462:
#line 10266 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_udf_expr((yyloc), (yyvsp[-1].item), (yyvsp[0].lexer.lex_str), (yylsp[-1]).cpp);
          }
#line 34810 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1465:
#line 10278 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 34818 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1466:
#line 10282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_avg((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 34826 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1467:
#line 10286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_and((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34834 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1468:
#line 10290 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_or((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34842 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1469:
#line 10294 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_array> array{::new (YYMEM_ROOT)
                                                          Json_array};
            if (array == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_array((yyloc), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper),
                                             std::move(array));
          }
#line 34856 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1470:
#line 10304 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto wrapper = make_unique_destroy_only<Json_wrapper>(YYMEM_ROOT);
            if (wrapper == nullptr) YYABORT;
            unique_ptr_destroy_only<Json_object> object{::new (YYMEM_ROOT)
                                                            Json_object};
            if (object == nullptr) YYABORT;
            (yyval.item) = NEW_PTN Item_sum_json_object(
                (yyloc), (yyvsp[-4].item), (yyvsp[-2].item), (yyvsp[0].window), std::move(wrapper), std::move(object));
          }
#line 34870 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1471:
#line 10314 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_xor((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34878 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1472:
#line 10318 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_count_sym((yyloc), (yyvsp[0].window));
          }
#line 34886 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1473:
#line 10322 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_count((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34894 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1474:
#line 10326 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new Item_sum_count((yyloc), (yyvsp[-2].item_list2), (yyvsp[0].window));
          }
#line 34902 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1475:
#line 10330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34910 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1476:
#line 10339 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_min((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34918 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1477:
#line 10343 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34926 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1478:
#line 10347 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_max((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 34934 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1479:
#line 10351 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 34942 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1480:
#line 10355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 0, (yyvsp[0].window));
          }
#line 34950 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1481:
#line 10359 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_std((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 34958 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1482:
#line 10363 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_variance((yyloc), (yyvsp[-2].item), 1, (yyvsp[0].window));
          }
#line 34966 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1483:
#line 10367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), false, (yyvsp[0].window));
          }
#line 34974 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1484:
#line 10371 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_sum_sum((yyloc), (yyvsp[-2].item), true, (yyvsp[0].window));
          }
#line 34982 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1485:
#line 10378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_group_concat((yyloc), (yyvsp[-5].num), (yyvsp[-4].item_list2), (yyvsp[-3].order_list), (yyvsp[-2].string), (yyvsp[0].window));
          }
#line 34990 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1486:
#line 10385 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_row_number((yyloc), (yyvsp[0].window));
          }
#line 34998 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1487:
#line 10389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), false, (yyvsp[0].window));
          }
#line 35006 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1488:
#line 10393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_rank((yyloc), true, (yyvsp[0].window));
          }
#line 35014 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1489:
#line 10397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=  NEW_PTN Item_cume_dist((yyloc), (yyvsp[0].window));
          }
#line 35022 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1490:
#line 10401 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_percent_rank((yyloc), (yyvsp[0].window));
          }
#line 35030 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1491:
#line 10405 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)=NEW_PTN Item_ntile((yyloc), (yyvsp[-2].item), (yyvsp[0].window));
          }
#line 35038 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1492:
#line 10409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), true, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35053 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1493:
#line 10420 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL || args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).offset != NULL && args->push_back((yyvsp[-3].lead_lag_info).offset))
              MYSQL_YYABORT; // OOM
            if ((yyvsp[-3].lead_lag_info).default_value != NULL && args->push_back((yyvsp[-3].lead_lag_info).default_value))
              MYSQL_YYABORT; // OOM
            (yyval.item)= NEW_PTN Item_lead_lag((yyloc), false, args, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35068 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1494:
#line 10431 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), true, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35076 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1495:
#line 10435 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_first_last_value((yyloc), false, (yyvsp[-3].item), (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35084 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1496:
#line 10439 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_item_list *args= NEW_PTN PT_item_list;
            if (args == NULL ||
                args->push_back((yyvsp[-6].item)) ||
                args->push_back((yyvsp[-4].item)))
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN Item_nth_value((yyloc), args, (yyvsp[-2].from_first_last) == NFL_FROM_LAST, (yyvsp[-1].null_treatment), (yyvsp[0].window));
          }
#line 35097 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1497:
#line 10451 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= NULL;
            (yyval.lead_lag_info).default_value= NULL;
          }
#line 35106 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1498:
#line 10456 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].item_num);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35115 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1499:
#line 10461 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lead_lag_info).offset= (yyvsp[-1].param_marker);
            (yyval.lead_lag_info).default_value= (yyvsp[0].item);
          }
#line 35124 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1500:
#line 10469 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NULL;
          }
#line 35132 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1501:
#line 10473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= (yyvsp[0].item);
          }
#line 35140 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1502:
#line 10480 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_NONE;
          }
#line 35148 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1503:
#line 10484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_RESPECT_NULLS;
          }
#line 35156 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1504:
#line 10488 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.null_treatment)= NT_IGNORE_NULLS;
          }
#line 35164 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1505:
#line 10496 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_NONE;
          }
#line 35172 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1506:
#line 10500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_FIRST;
          }
#line 35180 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1507:
#line 10504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.from_first_last)= NFL_FROM_LAST;
          }
#line 35188 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1508:
#line 10511 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NULL;
          }
#line 35196 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1509:
#line 10515 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1510:
#line 10522 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35212 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1511:
#line 10529 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= NEW_PTN PT_window((yyvsp[0].item_string));
          }
#line 35220 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1512:
#line 10533 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
          }
#line 35228 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1513:
#line 10540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NEW_PTN Item_string((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYTHD->charset());
          }
#line 35236 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1514:
#line 10547 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[-1].window);
          }
#line 35244 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1515:
#line 10557 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto frame= (yyvsp[0].window_frame);
             if (!frame) // build an equivalent frame spec
             {
               auto start_bound= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
               auto end_bound= NEW_PTN PT_border((yyvsp[-1].order_list) ? WBT_CURRENT_ROW :
                 WBT_UNBOUNDED_FOLLOWING);
               auto bounds= NEW_PTN PT_borders(start_bound, end_bound);
               frame= NEW_PTN PT_frame(WFU_RANGE, bounds, nullptr);
               frame->m_originally_absent= true;
             }
             (yyval.window)= NEW_PTN PT_window((yyvsp[-2].order_list), (yyvsp[-1].order_list), frame, (yyvsp[-3].item_string));
           }
#line 35262 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1516:
#line 10574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= NULL;
          }
#line 35270 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1517:
#line 10578 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_string)= (yyvsp[0].item_string);
          }
#line 35278 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1518:
#line 10585 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35286 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1519:
#line 10589 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35294 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1520:
#line 10596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NULL;
          }
#line 35302 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1521:
#line 10600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[0].order_list);
          }
#line 35310 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1522:
#line 10607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NULL;
          }
#line 35318 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1523:
#line 10613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window_frame)= NEW_PTN PT_frame((yyvsp[-2].frame_units), (yyvsp[-1].frame_extent), (yyvsp[0].frame_exclusion));
          }
#line 35326 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1524:
#line 10620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto end_bound= NEW_PTN PT_border(WBT_CURRENT_ROW);
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[0].bound), end_bound);
          }
#line 35335 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1525:
#line 10625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= (yyvsp[0].frame_extent);
          }
#line 35343 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1526:
#line 10632 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_PRECEDING);
          }
#line 35351 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1527:
#line 10636 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].item_num));
          }
#line 35359 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1528:
#line 10640 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-1].param_marker));
          }
#line 35367 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1529:
#line 10644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_PRECEDING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35375 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1530:
#line 10648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_CURRENT_ROW);
          }
#line 35383 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1531:
#line 10655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_extent)= NEW_PTN PT_borders((yyvsp[-2].bound), (yyvsp[0].bound));
          }
#line 35391 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1532:
#line 10662 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= (yyvsp[0].bound);
          }
#line 35399 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1533:
#line 10666 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_UNBOUNDED_FOLLOWING);
          }
#line 35407 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1534:
#line 10670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].item_num));
          }
#line 35415 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1535:
#line 10674 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-1].param_marker));
          }
#line 35423 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1536:
#line 10678 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.bound)= NEW_PTN PT_border(WBT_VALUE_FOLLOWING, (yyvsp[-2].item), (yyvsp[-1].interval));
          }
#line 35431 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1537:
#line 10685 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NULL;
          }
#line 35439 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1538:
#line 10689 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_CURRENT_ROW);
          }
#line 35447 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1539:
#line 10693 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_GROUP);
          }
#line 35455 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1540:
#line 10697 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_TIES);
          }
#line 35463 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1541:
#line 10701 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_exclusion)= NEW_PTN PT_exclusion(WFX_NO_OTHERS);
          }
#line 35470 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1542:
#line 10706 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_ROWS; }
#line 35476 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1543:
#line 10707 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_RANGE; }
#line 35482 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1544:
#line 10708 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.frame_units)= WFU_GROUPS; }
#line 35488 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1545:
#line 10713 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_grouping((yyloc), (yyvsp[-1].item_list2));
          }
#line 35496 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1546:
#line 10719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35502 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1547:
#line 10724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_USER_SET_EXPR));
            (yyval.item)= NEW_PTN PTI_variable_aux_set_var((yyloc), (yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 35513 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1548:
#line 10731 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_ident_or_text((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 35521 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1549:
#line 10735 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_variable_aux_3d((yyloc), (yyvsp[-2].var_type), (yyvsp[-1].lexer.lex_str), (yylsp[-1]), (yyvsp[0].lexer.lex_str));
          }
#line 35529 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1550:
#line 10741 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 0; }
#line 35535 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1551:
#line 10742 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num) = 1; }
#line 35541 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1552:
#line 10747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String(",", 1, &my_charset_latin1);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 35551 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1553:
#line 10752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string) = (yyvsp[0].string); }
#line 35557 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1554:
#line 10756 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= NULL; }
#line 35563 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1555:
#line 10757 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_list)= (yyvsp[0].order_list); }
#line 35569 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1556:
#line 10762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 35578 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1557:
#line 10767 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_gorder_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 35589 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1558:
#line 10777 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_in_sum_expr((yylsp[-1]), (yyvsp[0].item));
          }
#line 35597 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1559:
#line 10784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= &my_charset_bin;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
          }
#line 35608 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1560:
#line 10791 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).length= (yyvsp[-1].c_str);
            (yyval.cast_type).dec= NULL;
            if ((yyvsp[0].charset_with_opt_binary).force_binary)
            {
              // Bugfix: before this patch we ignored [undocumented]
              // collation modifier in the CAST(expr, CHAR(...) BINARY) syntax.
              // To restore old behavior just remove this "if ($3...)" branch.

              (yyval.cast_type).charset= get_bin_collation((yyvsp[0].charset_with_opt_binary).charset ? (yyvsp[0].charset_with_opt_binary).charset :
                  YYTHD->variables.collation_connection);
              if ((yyval.cast_type).charset == NULL)
                MYSQL_YYABORT;
            }
            else
              (yyval.cast_type).charset= (yyvsp[0].charset_with_opt_binary).charset;
          }
#line 35631 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1561:
#line 10810 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_CHAR;
            (yyval.cast_type).charset= national_charset_info;
            (yyval.cast_type).length= (yyvsp[0].c_str);
            (yyval.cast_type).dec= NULL;
            warn_about_deprecated_national(YYTHD);
          }
#line 35643 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1562:
#line 10818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35654 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1563:
#line 10825 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_SIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35665 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1564:
#line 10832 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35676 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1565:
#line 10839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_UNSIGNED_INT;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35687 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1566:
#line 10846 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATE;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35698 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1567:
#line 10853 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_TIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 35709 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1568:
#line 10860 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target= ITEM_CAST_DATETIME;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= (yyvsp[0].c_str);
          }
#line 35720 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1569:
#line 10867 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_DECIMAL;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= (yyvsp[0].precision).length;
            (yyval.cast_type).dec= (yyvsp[0].precision).dec;
          }
#line 35731 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1570:
#line 10874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target=ITEM_CAST_JSON;
            (yyval.cast_type).charset= NULL;
            (yyval.cast_type).length= NULL;
            (yyval.cast_type).dec= NULL;
          }
#line 35742 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1571:
#line 10881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ((yyvsp[0].numeric_type) == Numeric_type::DOUBLE) ?
              ITEM_CAST_DOUBLE : ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = nullptr;
            (yyval.cast_type).dec = nullptr;
          }
#line 35754 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1572:
#line 10889 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.cast_type).target = ITEM_CAST_FLOAT;
            (yyval.cast_type).charset = nullptr;
            (yyval.cast_type).length = (yyvsp[0].precision).length;
            (yyval.cast_type).dec = nullptr;
          }
#line 35765 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1573:
#line 10898 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= NULL; }
#line 35771 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1575:
#line 10904 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35781 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1576:
#line 10910 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35791 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1577:
#line 10918 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[0].item_list2); }
#line 35797 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1578:
#line 10919 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 35803 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1579:
#line 10924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 35813 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1580:
#line 10930 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2) == NULL || (yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 35823 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1581:
#line 10938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35829 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1582:
#line 10939 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35835 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1583:
#line 10943 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 35841 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1584:
#line 10944 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 35847 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1585:
#line 10949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list)= new (YYMEM_ROOT) List<Item>;
            if ((yyval.item_list) == NULL)
              MYSQL_YYABORT;
            (yyval.item_list)->push_back((yyvsp[-2].item));
            (yyval.item_list)->push_back((yyvsp[0].item));
          }
#line 35859 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1586:
#line 10957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-4].item_list)->push_back((yyvsp[-2].item));
            (yyvsp[-4].item_list)->push_back((yyvsp[0].item));
            (yyval.item_list)= (yyvsp[-4].item_list);
          }
#line 35869 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1587:
#line 10965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 35875 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1588:
#line 10966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 35881 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1589:
#line 10968 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The ODBC escape syntax for Outer Join.

              All productions from table_factor and joined_table can be escaped,
              not only the '{LEFT | RIGHT} [OUTER] JOIN' syntax.
            */
            (yyval.table_reference) = (yyvsp[-1].table_reference);
          }
#line 35895 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1590:
#line 10980 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].table_reference); }
#line 35901 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1591:
#line 10981 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[0].join_table); }
#line 35907 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1592:
#line 11063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 35915 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1593:
#line 11068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 35923 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1594:
#line 11072 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_on((yyvsp[-4].table_reference), (yylsp[-3]), (yyvsp[-3].join_type), (yyvsp[-2].table_reference), (yyvsp[0].item));
          }
#line 35931 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1595:
#line 11076 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-6].table_reference), (yylsp[-5]), (yyvsp[-5].join_type), (yyvsp[-4].table_reference), (yyvsp[-1].string_list));
          }
#line 35939 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1596:
#line 11081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto this_cross_join= NEW_PTN PT_cross_join((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), NULL);

            if ((yyvsp[0].table_reference) == NULL)
              MYSQL_YYABORT; // OOM

            (yyval.join_table)= (yyvsp[0].table_reference)->add_cross_join(this_cross_join);
          }
#line 35952 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1597:
#line 11090 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.join_table)= NEW_PTN PT_joined_table_using((yyvsp[-2].table_reference), (yylsp[-1]), (yyvsp[-1].join_type), (yyvsp[0].table_reference));
          }
#line 35960 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1598:
#line 11096 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_INNER; }
#line 35966 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1599:
#line 11097 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_RIGHT; }
#line 35972 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1600:
#line 11098 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_NATURAL_LEFT; }
#line 35978 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1601:
#line 11102 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 35984 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1602:
#line 11103 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 35990 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1603:
#line 11104 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_INNER; }
#line 35996 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1604:
#line 11105 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_STRAIGHT_INNER; }
#line 36002 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1605:
#line 11108 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_LEFT; }
#line 36008 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1606:
#line 11109 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_type)= JTT_RIGHT; }
#line 36014 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1611:
#line 11127 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string_list)= NULL; }
#line 36020 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1613:
#line 11133 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= (yyvsp[-1].string_list);
          }
#line 36028 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1616:
#line 11163 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].derived_table); }
#line 36034 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1617:
#line 11165 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_factor_joined_table((yyvsp[0].join_table)); }
#line 36040 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1618:
#line 11167 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= NEW_PTN PT_table_reference_list_parens((yyvsp[0].table_reference_list)); }
#line 36046 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1619:
#line 11168 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference) = (yyvsp[0].table_reference); }
#line 36052 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1620:
#line 11172 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference_list)= (yyvsp[-1].table_reference_list); }
#line 36058 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1621:
#line 11174 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference_list)= (yyvsp[-3].table_reference_list);
            if ((yyval.table_reference_list).push_back((yyvsp[-1].table_reference)))
              MYSQL_YYABORT; // OOM
          }
#line 36068 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1622:
#line 11182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36074 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1623:
#line 11183 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_reference)= (yyvsp[-1].table_reference); }
#line 36080 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1624:
#line 11188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_reference)= NEW_PTN PT_table_factor_table_ident((yyvsp[-3].table), (yyvsp[-2].string_list), (yyvsp[-1].lex_cstr), (yyvsp[0].key_usage_list));
          }
#line 36088 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1625:
#line 11194 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36094 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1626:
#line 11195 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.join_table)= (yyvsp[-1].join_table); }
#line 36100 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1627:
#line 11200 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              The alias is actually not optional at all, but being MySQL we
              are friendly and give an informative error message instead of
              just 'syntax error'.
            */
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(false, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36117 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1628:
#line 11213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].lex_cstr).str == nullptr)
              my_message(ER_DERIVED_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_DERIVED_MUST_HAVE_ALIAS), MYF(0));

            (yyval.derived_table)= NEW_PTN PT_derived_table(true, (yyvsp[-2].subquery), (yyvsp[-1].lex_cstr), &(yyvsp[0].simple_ident_list));
          }
#line 36129 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1629:
#line 11225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Alias isn't optional, follow derived's behavior
            if ((yyvsp[0].lex_cstr) == NULL_CSTR)
            {
              my_message(ER_TF_MUST_HAVE_ALIAS,
                         ER_THD(YYTHD, ER_TF_MUST_HAVE_ALIAS), MYF(0));
              MYSQL_YYABORT;
            }

            (yyval.table_reference)= NEW_PTN PT_table_factor_function((yyvsp[-5].item), (yyvsp[-3].text_literal), (yyvsp[-2].jtc_list), to_lex_string((yyvsp[0].lex_cstr)));
          }
#line 36145 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1630:
#line 11240 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-1].jtc_list);
          }
#line 36153 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1631:
#line 11247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= NEW_PTN Mem_root_array<PT_json_table_column *>(YYMEM_ROOT);
            if ((yyval.jtc_list) == NULL || (yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36163 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1632:
#line 11253 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jtc_list)= (yyvsp[-2].jtc_list);
            if ((yyval.jtc_list)->push_back((yyvsp[0].jt_column)))
              MYSQL_YYABORT; // OOM
          }
#line 36173 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1633:
#line 11262 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_for_ordinality((yyvsp[-2].lexer.lex_str));
          }
#line 36181 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1634:
#line 11267 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto column = make_unique_destroy_only<Json_table_column>(
                YYMEM_ROOT, (yyvsp[-3].jt_column_type), (yyvsp[-1].text_literal), (yyvsp[0].jt_on_error_or_empty).error.type, (yyvsp[0].jt_on_error_or_empty).error.default_string,
                (yyvsp[0].jt_on_error_or_empty).empty.type, (yyvsp[0].jt_on_error_or_empty).empty.default_string);
            if (column == nullptr) MYSQL_YYABORT;  // OOM
            (yyval.jt_column) = NEW_PTN PT_json_table_column_with_path(std::move(column), (yyvsp[-6].lexer.lex_str),
                                                        (yyvsp[-5].type), (yyvsp[-4].lexer.charset));
          }
#line 36194 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1635:
#line 11276 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column)= NEW_PTN PT_json_table_column_with_nested_path((yyvsp[-1].text_literal), (yyvsp[0].jtc_list));
          }
#line 36202 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1636:
#line 11282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_PATH;
          }
#line 36210 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1637:
#line 11286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_column_type)= enum_jt_column::JTC_EXISTS;
          }
#line 36218 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1638:
#line 11293 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36227 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1639:
#line 11298 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).error = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36236 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1640:
#line 11303 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = {enum_jtc_on::JTO_IMPLICIT, nullptr};
          }
#line 36245 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1641:
#line 11308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_error_or_empty).empty = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).error = (yyvsp[0].jt_on_response);
          }
#line 36254 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1642:
#line 11313 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(
              YYTHD, Sql_condition::SL_WARNING, ER_WARN_DEPRECATED_SYNTAX,
              ER_THD(YYTHD, ER_WARN_DEPRECATED_JSON_TABLE_ON_ERROR_ON_EMPTY));
            (yyval.jt_on_error_or_empty).error = (yyvsp[-1].jt_on_response);
            (yyval.jt_on_error_or_empty).empty = (yyvsp[0].jt_on_response);
          }
#line 36266 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1643:
#line 11323 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36272 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1644:
#line 11326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.jt_on_response)= (yyvsp[-2].jt_on_response); }
#line 36278 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1645:
#line 11330 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_ERROR, nullptr};
          }
#line 36286 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1646:
#line 11334 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_NULL, nullptr};
          }
#line 36294 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1647:
#line 11338 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.jt_on_response) = {enum_jtc_on::JTO_DEFAULT, (yyvsp[0].text_literal)};
          }
#line 36302 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1648:
#line 11345 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= old_mode ?  INDEX_HINT_MASK_JOIN : INDEX_HINT_MASK_ALL;
          }
#line 36310 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1649:
#line 11348 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_JOIN;  }
#line 36316 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1650:
#line 11349 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_ORDER; }
#line 36322 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1651:
#line 11350 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= INDEX_HINT_MASK_GROUP; }
#line 36328 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1652:
#line 11354 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_FORCE; }
#line 36334 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1653:
#line 11355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.index_hint)= INDEX_HINT_IGNORE; }
#line 36340 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1654:
#line 11361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), (yyvsp[-5].index_hint), (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36349 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1655:
#line 11367 "sql_yacc.yy" /* yacc.c:1646  */
    {
            init_index_hints((yyvsp[-1].key_usage_list), INDEX_HINT_USE, (yyvsp[-3].num));
            (yyval.key_usage_list)= (yyvsp[-1].key_usage_list);
          }
#line 36358 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1657:
#line 11376 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[0].key_usage_list)->concat((yyvsp[-1].key_usage_list));
            (yyval.key_usage_list)= (yyvsp[0].key_usage_list);
          }
#line 36367 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1658:
#line 11383 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.key_usage_list)= NULL; }
#line 36373 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1661:
#line 11393 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            Index_hint *hint= NEW_PTN Index_hint(NULL, 0);
            if ((yyval.key_usage_list) == NULL || hint == NULL || (yyval.key_usage_list)->push_front(hint))
              MYSQL_YYABORT;
          }
#line 36384 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1663:
#line 11404 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36394 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1664:
#line 11410 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_element)= NEW_PTN Index_hint(STRING_WITH_LEN("PRIMARY"));
            if ((yyval.key_usage_element) == NULL)
              MYSQL_YYABORT;
          }
#line 36404 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1665:
#line 11419 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.key_usage_list)= NEW_PTN List<Index_hint>;
            if ((yyval.key_usage_list) == NULL || (yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36414 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1666:
#line 11425 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.key_usage_list)->push_front((yyvsp[0].key_usage_element)))
              MYSQL_YYABORT;
          }
#line 36423 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1668:
#line 11437 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string_list)= NEW_PTN List<String>;
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if ((yyval.string_list) == NULL || s == NULL || (yyval.string_list)->push_back(s))
              MYSQL_YYABORT;
          }
#line 36436 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1669:
#line 11446 "sql_yacc.yy" /* yacc.c:1646  */
    {
            String *s= NEW_PTN String(const_cast<const char *>((yyvsp[0].lexer.lex_str).str),
                                               (yyvsp[0].lexer.lex_str).length,
                                               system_charset_info);
            if (s == NULL || (yyvsp[-2].string_list)->push_back(s))
              MYSQL_YYABORT;
            (yyval.string_list)= (yyvsp[-2].string_list);
          }
#line 36449 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1670:
#line 11457 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 36455 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1671:
#line 11458 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_HOUR; }
#line 36461 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1672:
#line 11459 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MICROSECOND; }
#line 36467 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1673:
#line 11460 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_MINUTE; }
#line 36473 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1674:
#line 11461 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_DAY_SECOND; }
#line 36479 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1675:
#line 11462 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MICROSECOND; }
#line 36485 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1676:
#line 11463 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_MINUTE; }
#line 36491 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1677:
#line 11464 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_HOUR_SECOND; }
#line 36497 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1678:
#line 11465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_MICROSECOND; }
#line 36503 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1679:
#line 11466 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_MINUTE_SECOND; }
#line 36509 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1680:
#line 11467 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_SECOND_MICROSECOND; }
#line 36515 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1681:
#line 11468 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval)=INTERVAL_YEAR_MONTH; }
#line 36521 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1682:
#line 11472 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_DAY; }
#line 36527 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1683:
#line 11473 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_WEEK; }
#line 36533 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1684:
#line 11474 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_HOUR; }
#line 36539 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1685:
#line 11475 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MINUTE; }
#line 36545 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1686:
#line 11476 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MONTH; }
#line 36551 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1687:
#line 11477 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_QUARTER; }
#line 36557 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1688:
#line 11478 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_SECOND; }
#line 36563 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1689:
#line 11479 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_MICROSECOND; }
#line 36569 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1690:
#line 11480 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.interval_time_st)=INTERVAL_YEAR; }
#line 36575 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1691:
#line 11484 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATE; }
#line 36581 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1692:
#line 11485 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_TIME; }
#line 36587 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1693:
#line 11486 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36593 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1694:
#line 11487 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.date_time_type)= MYSQL_TIMESTAMP_DATETIME; }
#line 36599 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1697:
#line 11496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = NULL_CSTR; }
#line 36605 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1698:
#line 11497 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr) = to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 36611 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1701:
#line 11506 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = nullptr; }
#line 36617 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1703:
#line 11511 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item) = NEW_PTN PTI_where((yylsp[0]), (yyvsp[0].item)); }
#line 36623 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1704:
#line 11515 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36629 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1705:
#line 11517 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= new PTI_having((yyloc), (yyvsp[0].item));
          }
#line 36637 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1706:
#line 11524 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), false);
          }
#line 36645 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1707:
#line 11528 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_clause)= NEW_PTN PT_with_clause((yyvsp[0].with_list), true);
          }
#line 36653 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1708:
#line 11535 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;
          }
#line 36662 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1709:
#line 11540 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.with_list)= NEW_PTN PT_with_list(YYTHD->mem_root);
            if ((yyval.with_list) == NULL || (yyval.with_list)->push_back((yyvsp[0].common_table_expr)))
              MYSQL_YYABORT;    /* purecov: inspected */
          }
#line 36672 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1710:
#line 11549 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_STRING subq_text;
            subq_text.length= (yylsp[0]).cpp.length();
            subq_text.str= YYTHD->strmake((yylsp[0]).cpp.start, subq_text.length);
            if (subq_text.str == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
            uint subq_text_offset= (yylsp[0]).cpp.start - YYLIP->get_cpp_buf();
            (yyval.common_table_expr)= NEW_PTN PT_common_table_expr((yyvsp[-3].lexer.lex_str), subq_text, subq_text_offset,
                                             (yyvsp[0].subquery), &(yyvsp[-2].simple_ident_list), YYTHD->mem_root);
            if ((yyval.common_table_expr) == NULL)
              MYSQL_YYABORT;   /* purecov: inspected */
          }
#line 36689 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1711:
#line 11565 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Because () isn't accepted by the rule of
              simple_ident_list, we can use an empty array to
              designates that the parenthesised list was omitted.
            */
            (yyval.simple_ident_list).init(YYTHD->mem_root);
          }
#line 36702 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1712:
#line 11574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-1].simple_ident_list);
          }
#line 36710 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1713:
#line 11581 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list).init(YYTHD->mem_root);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; /* purecov: inspected */
          }
#line 36720 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1714:
#line 11587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.simple_ident_list)= (yyvsp[-2].simple_ident_list);
            if ((yyval.simple_ident_list).push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;  /* purecov: inspected */
          }
#line 36730 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1715:
#line 11596 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NULL;
          }
#line 36738 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1716:
#line 11600 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= (yyvsp[0].windows);
          }
#line 36746 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1717:
#line 11607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.windows)= NEW_PTN PT_window_list();
            if ((yyval.windows) == NULL || (yyval.windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
          }
#line 36756 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1718:
#line 11613 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].windows)->push_back((yyvsp[0].window)))
              MYSQL_YYABORT; // OOM
            (yyval.windows)= (yyvsp[-2].windows);
          }
#line 36766 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1719:
#line 11622 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.window)= (yyvsp[0].window);
            if ((yyval.window) == NULL)
              MYSQL_YYABORT; // OOM
            (yyval.window)->set_name((yyvsp[-2].item_string));
          }
#line 36777 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1720:
#line 11635 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.group)= NULL; }
#line 36783 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1721:
#line 11637 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.group)= NEW_PTN PT_group((yyvsp[-1].order_list), (yyvsp[0].olap_type));
          }
#line 36791 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1722:
#line 11644 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36800 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1723:
#line 11649 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36811 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1724:
#line 11659 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= UNSPECIFIED_OLAP_TYPE; }
#line 36817 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1725:
#line 11660 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.olap_type)= ROLLUP_TYPE; }
#line 36823 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1726:
#line 11676 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= (yyvsp[-2].order_list);
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36832 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1727:
#line 11681 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36843 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1728:
#line 11691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 36851 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1729:
#line 11697 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order)= NULL; }
#line 36857 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1731:
#line 11703 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order)= NEW_PTN PT_order((yyvsp[0].order_list));
          }
#line 36865 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1732:
#line 11710 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyvsp[-2].order_list)->push_back((yyvsp[0].order_expr));
            (yyval.order_list)= (yyvsp[-2].order_list);
          }
#line 36874 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1733:
#line 11715 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_list)= NEW_PTN PT_order_list();
            if ((yyval.order_list) == NULL)
              MYSQL_YYABORT;
            (yyval.order_list)->push_back((yyvsp[0].order_expr));
          }
#line 36885 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1734:
#line 11724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_NOT_RELEVANT; }
#line 36891 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1736:
#line 11729 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_ASC; }
#line 36897 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1737:
#line 11730 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.order_direction)= ORDER_DESC; }
#line 36903 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1738:
#line 11734 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.limit_clause)= NULL; }
#line 36909 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1740:
#line 11740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_clause)= NEW_PTN PT_limit_clause((yyvsp[0].limit_options));
          }
#line 36917 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1741:
#line 11747 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= NULL;
            (yyval.limit_options).is_offset_first= false;
          }
#line 36927 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1742:
#line 11753 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[0].item);
            (yyval.limit_options).opt_offset= (yyvsp[-2].item);
            (yyval.limit_options).is_offset_first= true;
          }
#line 36937 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1743:
#line 11759 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.limit_options).limit= (yyvsp[-2].item);
            (yyval.limit_options).opt_offset= (yyvsp[0].item);
            (yyval.limit_options).is_offset_first= false;
          }
#line 36947 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1744:
#line 11768 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)), (yylsp[0]).raw);
          }
#line 36955 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1745:
#line 11772 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_limit_option_param_marker((yyloc), (yyvsp[0].param_marker));
          }
#line 36963 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1746:
#line 11776 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 36971 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1747:
#line 11780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 36979 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1748:
#line 11784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 36987 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1749:
#line 11790 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 36993 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1750:
#line 11791 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item); }
#line 36999 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1751:
#line 11795 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37005 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1752:
#line 11796 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37011 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1753:
#line 11797 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37017 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1754:
#line 11798 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37023 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1755:
#line 11799 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37029 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1756:
#line 11800 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37035 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1757:
#line 11804 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37041 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1758:
#line 11805 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= (ulong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37047 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1759:
#line 11806 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37053 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1760:
#line 11807 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulong_num)= (ulong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37059 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1761:
#line 11808 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37065 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1762:
#line 11812 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37071 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1763:
#line 11813 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37077 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1764:
#line 11814 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37083 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1765:
#line 11815 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37089 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1766:
#line 11816 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37095 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1767:
#line 11820 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37101 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1768:
#line 11821 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= (ulonglong) my_strtoll((yyvsp[0].lexer.lex_str).str, (char**) 0, 16); }
#line 37107 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1769:
#line 11822 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37113 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1770:
#line 11823 "sql_yacc.yy" /* yacc.c:1646  */
    { int error; (yyval.ulonglong_number)= (ulonglong) my_strtoll10((yyvsp[0].lexer.lex_str).str, nullptr, &error); }
#line 37119 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1771:
#line 11824 "sql_yacc.yy" /* yacc.c:1646  */
    { MYSQL_YYABORT; }
#line 37125 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1772:
#line 11829 "sql_yacc.yy" /* yacc.c:1646  */
    { YYTHD->syntax_error(ER_ONLY_INTEGERS_ALLOWED); }
#line 37131 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1775:
#line 11839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= (yyvsp[-2].select_var_list);
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37141 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1776:
#line 11845 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_list)= NEW_PTN PT_select_var_list((yyloc));
            if ((yyval.select_var_list) == NULL || (yyval.select_var_list)->push_back((yyvsp[0].select_var_ident)))
              MYSQL_YYABORT;
          }
#line 37151 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1777:
#line 11854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_var((yyvsp[0].lexer.lex_str));
          }
#line 37159 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1778:
#line 11858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.select_var_ident)= NEW_PTN PT_select_sp_var((yyvsp[0].lexer.lex_str));
          }
#line 37167 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1779:
#line 11865 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= (yyvsp[0].into_destination);
          }
#line 37175 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1780:
#line 11874 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_outfile((yyloc), (yyvsp[-3].lexer.lex_str), (yyvsp[-2].lexer.charset), (yyvsp[-1].field_separators), (yyvsp[0].line_separators));
          }
#line 37183 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1781:
#line 11878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.into_destination)= NEW_PTN PT_into_destination_dumpfile((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 37191 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1782:
#line 11881 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.into_destination)= (yyvsp[0].select_var_list); }
#line 37197 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1783:
#line 11890 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_select_stmt(SQLCOM_DO,
                  NEW_PTN PT_query_expression(
                    NEW_PTN PT_query_specification({}, (yyvsp[0].item_list2))));
          }
#line 37207 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1784:
#line 11903 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($6) is ignored!
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_DROP_TABLE;
            lex->drop_temporary= (yyvsp[-4].is_not_empty);
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37224 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1785:
#line 11919 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_index_stmt(YYMEM_ROOT, (yyvsp[-3].lexer.lex_str).str, (yyvsp[-1].table),
                                           (yyvsp[0].opt_index_lock_and_algorithm).algo.get_or_default(),
                                           (yyvsp[0].opt_index_lock_and_algorithm).lock.get_or_default());
          }
#line 37234 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1786:
#line 11928 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_DROP_DB;
            lex->drop_if_exists=(yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 37245 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1787:
#line 11938 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_name *spname;
            if ((yyvsp[-2].lexer.lex_str).str &&
                (check_and_convert_db_name(&(yyvsp[-2].lexer.lex_str), false) != Ident_name_check::OK))
               MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-3].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str), true);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37272 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1788:
#line 11961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Unlike DROP PROCEDURE, "DROP FUNCTION ident" should work
              even if there is no current database. In this case it
              applies only to UDF.
              Hence we can't merge rules for "DROP FUNCTION ident.ident"
              and "DROP FUNCTION ident" into one "DROP FUNCTION sp_name"
              rule. sp_name assumes that database name should be always
              provided - either explicitly or implicitly.
            */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            LEX_STRING db= NULL_STR;
            sp_name *spname;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }
            if (thd->db().str && lex->copy_db_to(&db.str, &db.length))
              MYSQL_YYABORT;
            if (sp_check_name(&(yyvsp[0].lexer.lex_str)))
               MYSQL_YYABORT;
            lex->sql_command = SQLCOM_DROP_FUNCTION;
            lex->drop_if_exists= (yyvsp[-1].num);
            spname= new (YYMEM_ROOT) sp_name(to_lex_cstring(db), (yyvsp[0].lexer.lex_str), false);
            if (spname == NULL)
              MYSQL_YYABORT;
            spname->init_qname(thd);
            lex->spname= spname;
          }
#line 37308 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1789:
#line 11996 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_resource_group(to_lex_cstring((yyvsp[-1].lexer.lex_str)), (yyvsp[0].resource_group_flag_type));
          }
#line 37316 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1790:
#line 12003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->sphead)
            {
              my_error(ER_SP_NO_DROP_SP, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_DROP_PROCEDURE;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
          }
#line 37332 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1791:
#line 12018 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex=Lex;
             lex->sql_command= SQLCOM_DROP_USER;
             lex->drop_if_exists= (yyvsp[-1].num);
             lex->users_list= *(yyvsp[0].user_list);
          }
#line 37343 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1792:
#line 12028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Note: opt_restrict ($5) is ignored!
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_VIEW;
            lex->drop_if_exists= (yyvsp[-2].num);
            YYPS->m_lock_type= TL_UNLOCK;
            YYPS->m_mdl_type= MDL_EXCLUSIVE;
            if (Select->add_tables(YYTHD, (yyvsp[-1].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 37359 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1793:
#line 12043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->drop_if_exists= (yyvsp[-1].num);
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_DROP_EVENT;
          }
#line 37369 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1794:
#line 12052 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_DROP_TRIGGER;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->spname= (yyvsp[0].spname);
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_drop_trigger();
          }
#line 37381 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1795:
#line 12063 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_drop_tablespace{(yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37403 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1796:
#line 12083 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT;
            }

            auto cmd= NEW_PTN Sql_cmd_drop_undo_tablespace{
              DROP_UNDO_TABLESPACE, (yyvsp[-1].lexer.lex_str), {nullptr, 0},  pc};
            if (!cmd)
              MYSQL_YYABORT; // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37426 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1797:
#line 12105 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto pc= NEW_PTN Alter_tablespace_parse_context{YYTHD};
            if (pc == NULL)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM

            if ((yyvsp[0].ts_options) != NULL)
            {
              if (YYTHD->is_error() || contextualize_array(pc, (yyvsp[0].ts_options)))
                MYSQL_YYABORT; /* purecov: inspected */
            }

            auto cmd= NEW_PTN Sql_cmd_logfile_group{DROP_LOGFILE_GROUP,
                                                    (yyvsp[-1].lexer.lex_str), pc};
            if (!cmd)
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
            Lex->m_sql_cmd= cmd;
            Lex->sql_command= SQLCOM_ALTER_TABLESPACE;
          }
#line 37449 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1798:
#line 12128 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_DROP_SERVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_drop_server((yyvsp[0].lexer.lex_str), (yyvsp[-1].num));
          }
#line 37458 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1799:
#line 12136 "sql_yacc.yy" /* yacc.c:1646  */
    {
	    (yyval.top_level_node)= NEW_PTN PT_drop_srs((yyvsp[0].ulonglong_number), (yyvsp[-1].num));
	  }
#line 37466 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1800:
#line 12143 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_drop_role((yyvsp[-1].num), (yyvsp[0].user_list));
          }
#line 37474 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1801:
#line 12150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= NEW_PTN Mem_root_array<Table_ident *>(YYMEM_ROOT);
            if ((yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37484 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1802:
#line 12156 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_list)= (yyvsp[-2].table_list);
            if ((yyval.table_list) == NULL || (yyval.table_list)->push_back((yyvsp[0].table)))
              MYSQL_YYABORT; // OOM
          }
#line 37494 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1803:
#line 12165 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list).init(YYMEM_ROOT);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37504 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1804:
#line 12171 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident_list)= (yyvsp[-2].table_ident_list);
            if ((yyval.table_ident_list).push_back((yyvsp[0].table_ident)))
              MYSQL_YYABORT; // OOM
          }
#line 37514 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1805:
#line 12179 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 37520 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1806:
#line 12180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 1; }
#line 37526 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1807:
#line 12184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 37532 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1808:
#line 12185 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 37538 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1809:
#line 12189 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ts_options)= NULL; }
#line 37544 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1811:
#line 12195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= NEW_PTN Mem_root_array<PT_alter_tablespace_option_base*>(YYMEM_ROOT);
            if ((yyval.ts_options) == NULL || (yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37554 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1812:
#line 12201 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.ts_options)= (yyvsp[-2].ts_options);
            if ((yyval.ts_options)->push_back((yyvsp[0].ts_option)))
              MYSQL_YYABORT; /* purecov: inspected */ // OOM
          }
#line 37564 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1815:
#line 12226 "sql_yacc.yy" /* yacc.c:1646  */
    {
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                             DBUG_SET("+d,simulate_out_of_memory"););
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-4].table), (yyvsp[-3].string_list),
                                  (yyvsp[-2].column_row_value_list_pair).column_list, (yyvsp[-2].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
            DBUG_EXECUTE_IF("bug29614521_simulate_oom",
                            DBUG_SET("-d,bug29614521_simulate_oom"););
          }
#line 37580 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1816:
#line 12247 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[-2].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-9].lexer.optimizer_hints), (yyvsp[-8].lock_type), (yyvsp[-7].is_not_empty), (yyvsp[-5].table), (yyvsp[-4].string_list),
                                  (yyvsp[-2].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  (yyvsp[-1].insert_update_values_reference).table_alias, (yyvsp[-1].insert_update_values_reference).column_list,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37595 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1817:
#line 12265 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(false, (yyvsp[-7].lexer.optimizer_hints), (yyvsp[-6].lock_type), (yyvsp[-5].is_not_empty), (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[-1].insert_query_expression).column_list, NULL,
                                  (yyvsp[-1].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  (yyvsp[0].column_value_list_pair).column_list, (yyvsp[0].column_value_list_pair).value_list);
          }
#line 37607 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1818:
#line 12281 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].column_row_value_list_pair).column_list, (yyvsp[0].column_row_value_list_pair).row_value_list,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37619 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1819:
#line 12295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            PT_insert_values_list *one_row= NEW_PTN PT_insert_values_list;
            if (one_row == NULL || one_row->push_back(&(yyvsp[0].column_value_list_pair).value_list->value))
              MYSQL_YYABORT; // OOM
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].lock_type), false, (yyvsp[-3].table), (yyvsp[-2].string_list),
                                  (yyvsp[0].column_value_list_pair).column_list, one_row,
                                  NULL,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37634 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1820:
#line 12311 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_insert(true, (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].lock_type), false, (yyvsp[-2].table), (yyvsp[-1].string_list),
                                  (yyvsp[0].insert_query_expression).column_list, NULL,
                                  (yyvsp[0].insert_query_expression).insert_query_expression,
                                  NULL_CSTR, NULL,
                                  NULL, NULL);
          }
#line 37646 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1821:
#line 12321 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT; }
#line 37652 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1822:
#line 12322 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37658 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1823:
#line 12324 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_CONCURRENT_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "INSERT DELAYED", "INSERT");
        }
#line 37671 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1824:
#line 12332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE; }
#line 37677 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1825:
#line 12336 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= (yyvsp[0].lock_type); }
#line 37683 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1826:
#line 12338 "sql_yacc.yy" /* yacc.c:1646  */
    {
          (yyval.lock_type)= TL_WRITE_DEFAULT;

          push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                              ER_WARN_LEGACY_SYNTAX_CONVERTED,
                              ER_THD(YYTHD, ER_WARN_LEGACY_SYNTAX_CONVERTED),
                              "REPLACE DELAYED", "REPLACE");
        }
#line 37696 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1829:
#line 12355 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 37705 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1830:
#line 12360 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 37714 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1831:
#line 12365 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_row_value_list_pair).column_list= (yyvsp[-2].item_list2);
            (yyval.column_row_value_list_pair).row_value_list= (yyvsp[0].values_list);
          }
#line 37723 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1832:
#line 12373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 37732 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1833:
#line 12378 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= NEW_PTN PT_item_list;
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 37741 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1834:
#line 12383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_query_expression).column_list= (yyvsp[-2].item_list2);
            (yyval.insert_query_expression).insert_query_expression= (yyvsp[0].query_primary);
          }
#line 37750 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1835:
#line 12391 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37760 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1836:
#line 12397 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37770 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1837:
#line 12406 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= (yyvsp[0].values_list);
          }
#line 37778 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1838:
#line 12412 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_expression); }
#line 37784 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1839:
#line 12414 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.query_primary) = NEW_PTN PT_locking((yyvsp[-1].query_expression), (yyvsp[0].locking_clause_list));
          }
#line 37792 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1840:
#line 12417 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.query_primary) = (yyvsp[0].query_primary); }
#line 37798 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1843:
#line 12427 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37807 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1844:
#line 12432 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == NULL || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37817 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1845:
#line 12442 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37826 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1846:
#line 12447 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.values_list)= NEW_PTN PT_insert_values_list;
            if ((yyval.values_list) == nullptr || (yyval.values_list)->push_back(&(yyvsp[0].item_list2)->value))
              MYSQL_YYABORT;
          }
#line 37836 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1851:
#line 12465 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 37842 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1852:
#line 12469 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 37848 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1853:
#line 12474 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL)
              MYSQL_YYABORT;
          }
#line 37858 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1855:
#line 12484 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-2].item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
            (yyval.item_list2)= (yyvsp[-2].item_list2);
          }
#line 37868 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1856:
#line 12490 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == NULL || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT;
          }
#line 37878 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1858:
#line 12500 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_default_value((yyloc));
          }
#line 37886 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1859:
#line 12507 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = NULL_CSTR;
            (yyval.insert_update_values_reference).column_list = NULL;
          }
#line 37895 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1860:
#line 12512 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.insert_update_values_reference).table_alias = to_lex_cstring((yyvsp[-1].lexer.lex_str));
            /* The column list object is short-lived, requiring duplication. */
            void *column_list_raw_mem= YYTHD->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
            if (!column_list_raw_mem)
              MYSQL_YYABORT; // OOM
            (yyval.insert_update_values_reference).column_list =
              static_cast<Create_col_name_list *>(column_list_raw_mem);
          }
#line 37909 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1861:
#line 12525 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).value_list= NULL;
            (yyval.column_value_list_pair).column_list= NULL;
          }
#line 37918 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1862:
#line 12530 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[0].column_value_list_pair);
          }
#line 37926 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1863:
#line 12548 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_update((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].lock_type), (yyvsp[-6].is_not_empty), (yyvsp[-5].table_reference_list), (yyvsp[-3].column_value_list_pair).column_list, (yyvsp[-3].column_value_list_pair).value_list,
                                  (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 37935 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1864:
#line 12555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= NULL; }
#line 37941 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1865:
#line 12556 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.with_clause)= (yyvsp[0].with_clause); }
#line 37947 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1866:
#line 12561 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair)= (yyvsp[-2].column_value_list_pair);
            if ((yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 37958 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1867:
#line 12568 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_list_pair).column_list= NEW_PTN PT_item_list;
            (yyval.column_value_list_pair).value_list= NEW_PTN PT_item_list;
            if ((yyval.column_value_list_pair).column_list == NULL || (yyval.column_value_list_pair).value_list == NULL ||
                (yyval.column_value_list_pair).column_list->push_back((yyvsp[0].column_value_pair).column) ||
                (yyval.column_value_list_pair).value_list->push_back((yyvsp[0].column_value_pair).value))
              MYSQL_YYABORT; // OOM
          }
#line 37971 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1868:
#line 12580 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.column_value_pair).column= (yyvsp[-2].item);
            (yyval.column_value_pair).value= (yyvsp[0].item);
          }
#line 37980 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1869:
#line 12587 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 37986 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1870:
#line 12588 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 37992 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1871:
#line 12604 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-9].with_clause), (yyvsp[-8].lexer.optimizer_hints), (yyvsp[-7].num), (yyvsp[-5].table), (yyvsp[-4].lex_cstr), (yyvsp[-3].string_list), (yyvsp[-2].item), (yyvsp[-1].order), (yyvsp[0].item));
          }
#line 38000 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1872:
#line 12614 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-6].with_clause), (yyvsp[-5].lexer.optimizer_hints), (yyvsp[-4].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38008 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1873:
#line 12625 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_delete((yyvsp[-7].with_clause), (yyvsp[-6].lexer.optimizer_hints), (yyvsp[-5].num), (yyvsp[-3].table_ident_list), (yyvsp[-1].table_reference_list), (yyvsp[0].item));
          }
#line 38016 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1876:
#line 12636 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= 0; }
#line 38022 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1877:
#line 12637 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= (yyvsp[-1].opt_delete_option) | (yyvsp[0].num); }
#line 38028 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1878:
#line 12641 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_QUICK; }
#line 38034 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1879:
#line 12642 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_LOW_PRIORITY; }
#line 38040 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1880:
#line 12643 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.opt_delete_option)= DELETE_IGNORE; }
#line 38046 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1881:
#line 12648 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_truncate_table_stmt((yyvsp[0].table));
          }
#line 38054 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1888:
#line 12668 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CPU;
    }
#line 38062 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1889:
#line 12672 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_MEMORY;
    }
#line 38070 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1890:
#line 12676 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_BLOCK_IO;
    }
#line 38078 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1891:
#line 12680 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_CONTEXT;
    }
#line 38086 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1892:
#line 12684 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_PAGE_FAULTS;
    }
#line 38094 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1893:
#line 12688 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_IPC;
    }
#line 38102 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1894:
#line 12692 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SWAPS;
    }
#line 38110 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1895:
#line 12696 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_SOURCE;
    }
#line 38118 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1896:
#line 12700 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->profile_options|= PROFILE_ALL;
    }
#line 38126 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1897:
#line 12707 "sql_yacc.yy" /* yacc.c:1646  */
    {
      Lex->show_profile_query_id= 0;
    }
#line 38134 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1898:
#line 12711 "sql_yacc.yy" /* yacc.c:1646  */
    {
      int error;
      Lex->show_profile_query_id=
        static_cast<my_thread_id>(my_strtoll10((yyvsp[0].lexer.lex_str).str, NULL, &error));
      if (error != 0)
        MYSQL_YYABORT;
    }
#line 38146 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1899:
#line 12724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 38157 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1901:
#line 12735 "sql_yacc.yy" /* yacc.c:1646  */
    {
             Lex->sql_command= SQLCOM_SHOW_DATABASES;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_databases_query(
                       (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38170 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1902:
#line 12744 "sql_yacc.yy" /* yacc.c:1646  */
    {
             auto *p= NEW_PTN PT_show_tables((yyloc), (yyvsp[-3].show_cmd_type), (yyvsp[-1].simple_string), (yyvsp[0].wild_or_where).wild, (yyvsp[0].wild_or_where).where);

             MAKE_CMD(p);
           }
#line 38180 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1903:
#line 12750 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TRIGGERS;
             lex->verbose= (yyvsp[-3].is_not_empty);
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_triggers_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38196 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1904:
#line 12762 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_EVENTS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_events_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
               MYSQL_YYABORT;
           }
#line 38211 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1905:
#line 12773 "sql_yacc.yy" /* yacc.c:1646  */
    {
             LEX *lex= Lex;
             lex->sql_command= SQLCOM_SHOW_TABLE_STATUS;
             lex->select_lex->db= (yyvsp[-1].simple_string);
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
             if (dd::info_schema::build_show_tables_query((yyloc), YYTHD, lex->wild,
                                         (yyvsp[0].wild_or_where).where, true) == nullptr)
               MYSQL_YYABORT;
           }
#line 38226 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1906:
#line 12784 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (lex->set_wild((yyvsp[0].wild_or_where).wild)) {
              MYSQL_YYABORT; // OOM
            }
            if ((yyvsp[0].wild_or_where).where != nullptr) {
              ITEMIZE((yyvsp[0].wild_or_where).where, &(yyvsp[0].wild_or_where).where);
              Select->set_where_cond((yyvsp[0].wild_or_where).where);
            }
            lex->sql_command= SQLCOM_SHOW_OPEN_TABLES;
            lex->select_lex->db= (yyvsp[-1].simple_string);
            if (prepare_schema_table(YYTHD, lex, 0, SCH_OPEN_TABLES))
              MYSQL_YYABORT;
          }
#line 38245 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1907:
#line 12799 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PLUGINS;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_PLUGINS))
              MYSQL_YYABORT;
          }
#line 38256 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1908:
#line 12806 "sql_yacc.yy" /* yacc.c:1646  */
    {
            const bool is_temp_table=
              Lex->create_info->options & HA_LEX_CREATE_TMP_TABLE;
            if (resolve_engine(YYTHD, to_lex_cstring((yyvsp[-1].lexer.lex_str)), is_temp_table, true,
                               &Lex->create_info->db_type))
              MYSQL_YYABORT;
          }
#line 38268 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1909:
#line 12814 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_info->db_type= NULL; }
#line 38274 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1910:
#line 12821 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            Item *where= (yyvsp[0].wild_or_where).where;
            LEX_STRING wild= (yyvsp[0].wild_or_where).wild;
            DBUG_ASSERT((wild.str == nullptr) || (where == nullptr));

            auto *p= where ? NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), where)
                           : NEW_PTN PT_show_fields((yyloc), (yyvsp[-5].show_cmd_type), (yyvsp[-2].table), wild);

            lex->sql_command= SQLCOM_SHOW_FIELDS;
            MAKE_CMD(p);
          }
#line 38296 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1911:
#line 12839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_BINLOGS;
          }
#line 38304 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1912:
#line 12843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_HOSTS;
          }
#line 38312 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1913:
#line 12847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_BINLOG_EVENTS;
          }
#line 38321 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1914:
#line 12852 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));
          }
#line 38330 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1915:
#line 12857 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_RELAYLOG_EVENTS;
          }
#line 38339 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1916:
#line 12862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[-1].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[-1].limit_clause));
          }
#line 38348 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1917:
#line 12872 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            // TODO: error if table_ident is <db>.<table> and opt_db is set.
            if ((yyvsp[-1].simple_string))
              (yyvsp[-2].table)->change_db((yyvsp[-1].simple_string));

            auto *p= NEW_PTN PT_show_keys((yyloc), (yyvsp[-5].is_not_empty), (yyvsp[-2].table), (yyvsp[0].item));

            lex->sql_command= SQLCOM_SHOW_KEYS;
            MAKE_CMD(p);
          }
#line 38365 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1918:
#line 12885 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_STORAGE_ENGINES;
            if (prepare_schema_table(YYTHD, lex, 0, SCH_ENGINES))
              MYSQL_YYABORT;
          }
#line 38376 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1919:
#line 12892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "warning_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38388 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1920:
#line 12900 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
            Parse_context pc(YYTHD, Select);
            if (create_select_for_variable(&pc, "error_count"))
              YYABORT;
            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_select(NULL);
          }
#line 38400 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1921:
#line 12908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_WARNS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW WARNINGS doesn't clear them.
          }
#line 38412 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1922:
#line 12916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            Lex->sql_command = SQLCOM_SHOW_ERRORS;
            Lex->keep_diagnostics= DA_KEEP_DIAGNOSTICS; // SHOW ERRORS doesn't clear them.
          }
#line 38424 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1923:
#line 12924 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning_printf(YYTHD, Sql_condition::SL_WARNING,
                                ER_WARN_DEPRECATED_SYNTAX,
                                ER_THD(YYTHD, ER_WARN_DEPRECATED_SYNTAX),
                                "SHOW PROFILES", "Performance Schema");
            Lex->sql_command = SQLCOM_SHOW_PROFILES;
          }
#line 38436 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1924:
#line 12932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].limit_clause) != NULL)
              CONTEXTUALIZE((yyvsp[0].limit_clause));

            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_PROFILE;
            if (prepare_schema_table(YYTHD, lex, NULL, SCH_PROFILES) != 0)
              YYABORT;
          }
#line 38450 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1925:
#line 12942 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_STATUS;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_status(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38476 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1926:
#line 12964 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROCESSLIST;
            Lex->verbose= (yyvsp[-1].is_not_empty);
          }
#line 38485 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1927:
#line 12969 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_VARIABLES;
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM

            if ((yyvsp[-2].var_type) == OPT_SESSION)
            {
              if (build_show_session_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
            else
            {
              if (build_show_global_variables(
                    (yyloc), thd, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
                MYSQL_YYABORT;
            }
          }
#line 38511 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1928:
#line 12991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_CHARSETS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_character_set_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38524 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1929:
#line 13000 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_COLLATIONS;
            if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
              MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_collation_query(
                                  (yyloc), YYTHD, Lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38537 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1930:
#line 13009 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_PRIVILEGES;
            /* Show all available grants in the server */
          }
#line 38547 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1931:
#line 13015 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants(0, 0);
            MAKE_CMD(tmp);
          }
#line 38556 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1932:
#line 13020 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[0].lex_user), 0);
            MAKE_CMD(tmp);
          }
#line 38565 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1933:
#line 13025 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_show_grants((yyvsp[-2].lex_user), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 38574 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1934:
#line 13030 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command=SQLCOM_SHOW_CREATE_DB;
            Lex->create_info->options= (yyvsp[-1].is_not_empty) ? HA_LEX_CREATE_IF_NOT_EXISTS : 0;
            Lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 38584 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1935:
#line 13036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL,0))
              MYSQL_YYABORT;
            lex->only_view= 0;
            lex->create_info->storage_media= HA_SM_DEFAULT;
          }
#line 38597 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1936:
#line 13045 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command = SQLCOM_SHOW_CREATE;
            if (!lex->select_lex->add_table_to_list(YYTHD, (yyvsp[0].table), NULL, 0))
              MYSQL_YYABORT;
            lex->only_view= 1;
          }
#line 38609 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1937:
#line 13053 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_MASTER_STAT;
          }
#line 38617 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1938:
#line 13057 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_SHOW_SLAVE_STAT;
          }
#line 38625 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1939:
#line 13061 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_PROC;
            lex->spname= (yyvsp[0].spname);
          }
#line 38636 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1940:
#line 13068 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            lex->sql_command = SQLCOM_SHOW_CREATE_FUNC;
            lex->spname= (yyvsp[0].spname);
          }
#line 38647 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1941:
#line 13075 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_TRIGGER;
            lex->spname= (yyvsp[0].spname);
          }
#line 38657 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1942:
#line 13081 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_PROC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38671 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1943:
#line 13091 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_SHOW_STATUS_FUNC;
             if (Lex->set_wild((yyvsp[0].wild_or_where).wild))
               MYSQL_YYABORT; // OOM
            if (dd::info_schema::build_show_procedures_query(
                                    (yyloc), YYTHD, lex->wild, (yyvsp[0].wild_or_where).where) == nullptr)
              MYSQL_YYABORT;
          }
#line 38685 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1944:
#line 13101 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_PROC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 38694 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1945:
#line 13106 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHOW_FUNC_CODE;
            Lex->spname= (yyvsp[0].spname);
          }
#line 38703 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1946:
#line 13111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->spname= (yyvsp[0].spname);
            Lex->sql_command = SQLCOM_SHOW_CREATE_EVENT;
          }
#line 38712 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1947:
#line 13116 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SHOW_CREATE_USER;
            lex->grant_user=(yyvsp[0].lex_user);
          }
#line 38722 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1948:
#line 13125 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_STATUS; }
#line 38728 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1949:
#line 13127 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_MUTEX; }
#line 38734 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1950:
#line 13129 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->sql_command= SQLCOM_SHOW_ENGINE_LOGS; }
#line 38740 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1955:
#line 13143 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= 0; }
#line 38746 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1956:
#line 13144 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.simple_string)= (yyvsp[0].lexer.lex_str).str; }
#line 38752 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1957:
#line 13148 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 38758 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1958:
#line 13149 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 38764 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1959:
#line 13153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 0; }
#line 38770 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1960:
#line 13154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= 1; }
#line 38776 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1961:
#line 13158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::STANDARD; }
#line 38782 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1962:
#line 13159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::FULL_SHOW; }
#line 38788 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1963:
#line 13160 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_SHOW; }
#line 38794 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1964:
#line 13161 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.show_cmd_type)= Show_cmd_type::EXTENDED_FULL_SHOW; }
#line 38800 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1967:
#line 13170 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = 0; }
#line 38806 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1968:
#line 13171 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.log_file_name = (yyvsp[0].lexer.lex_str).str; }
#line 38812 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1969:
#line 13175 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = 4; /* skip magic number */ }
#line 38818 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1970:
#line 13176 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->mi.pos = (yyvsp[0].ulonglong_number); }
#line 38824 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1971:
#line 13180 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = {}; }
#line 38830 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1972:
#line 13181 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { (yyvsp[0].lexer.lex_str), {} }; }
#line 38836 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1973:
#line 13182 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.wild_or_where) = { {}, (yyvsp[0].item) }; }
#line 38842 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1974:
#line 13188 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_show_fields((yyloc), Show_cmd_type::STANDARD, (yyvsp[-1].table), (yyvsp[0].lexer.lex_str));
          }
#line 38850 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1975:
#line 13195 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain((yyvsp[-1].explain_format_type), (yyvsp[0].top_level_node));
          }
#line 38858 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1981:
#line 13207 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_explain_for_connection(static_cast<my_thread_id>((yyvsp[0].ulong_num)));
          }
#line 38866 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1984:
#line 13219 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
          }
#line 38874 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1985:
#line 13223 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "JSON"))
              (yyval.explain_format_type)= Explain_format_type::JSON;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TRADITIONAL"))
              (yyval.explain_format_type)= Explain_format_type::TRADITIONAL;
            else if (is_identifier((yyvsp[0].lexer.lex_str), "TREE"))
              (yyval.explain_format_type)= Explain_format_type::TREE;
            else
            {
              my_error(ER_UNKNOWN_EXPLAIN_FORMAT, MYF(0), (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 38892 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1986:
#line 13237 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.explain_format_type)= Explain_format_type::TREE_WITH_EXECUTE;
          }
#line 38900 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1987:
#line 13243 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= LEX_STRING{ nullptr, 0 }; }
#line 38906 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1988:
#line 13245 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].string) != nullptr)
              (yyval.lexer.lex_str)= (yyvsp[0].string)->lex_string();
          }
#line 38915 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1990:
#line 13257 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_FLUSH;
            lex->type= 0;
            lex->no_write_to_binlog= (yyvsp[0].num);
          }
#line 38926 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1991:
#line 13264 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38932 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1992:
#line 13269 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_TABLES;
            /*
              Set type of metadata and table locks for
              FLUSH TABLES table_list [WITH READ LOCK].
            */
            YYPS->m_lock_type= TL_READ_NO_INSERT;
            YYPS->m_mdl_type= MDL_SHARED_HIGH_PRIO;
            if (Select->add_tables(YYTHD, (yyvsp[0].table_list), TL_OPTION_UPDATING,
                                   YYPS->m_lock_type, YYPS->m_mdl_type))
              MYSQL_YYABORT;
          }
#line 38949 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1993:
#line 13281 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38955 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1995:
#line 13286 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 38961 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1996:
#line 13288 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_READ_LOCK;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 38977 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1997:
#line 13300 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->query_tables == NULL) // Table list can't be empty
            {
              YYTHD->syntax_error(ER_NO_TABLES_USED);
              MYSQL_YYABORT;
            }
          }
#line 38989 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 1998:
#line 13308 "sql_yacc.yy" /* yacc.c:1646  */
    {
            TABLE_LIST *tables= Lex->query_tables;
            Lex->type|= REFRESH_FOR_EXPORT;
            for (; tables; tables= tables->next_global)
            {
              tables->mdl_request.set_type(MDL_SHARED_NO_WRITE);
              /* Don't try to flush views. */
              tables->required_type= dd::enum_table_type::BASE_TABLE;
              tables->open_type= OT_BASE_ONLY;      /* Ignore temporary tables. */
            }
          }
#line 39005 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2000:
#line 13324 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39011 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2001:
#line 13329 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ERROR_LOG; }
#line 39017 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2002:
#line 13331 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_ENGINE_LOG; }
#line 39023 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2003:
#line 13333 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GENERAL_LOG; }
#line 39029 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2004:
#line 13335 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLOW_LOG; }
#line 39035 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2005:
#line 13337 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_BINARY_LOG; }
#line 39041 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2006:
#line 13339 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_RELAY_LOG; }
#line 39047 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2007:
#line 13341 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_HOSTS; }
#line 39053 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2008:
#line 13343 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_GRANT; }
#line 39059 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2009:
#line 13345 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_LOG; }
#line 39065 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2010:
#line 13347 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_STATUS; }
#line 39071 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2011:
#line 13349 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_USER_RESOURCES; }
#line 39077 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2012:
#line 13351 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_OPTIMIZER_COSTS; }
#line 39083 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2013:
#line 13355 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.table_list)= NULL; }
#line 39089 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2015:
#line 13361 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET; lex->type=0;
          }
#line 39098 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2016:
#line 13366 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39104 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2017:
#line 13368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RESET;
            lex->type|= REFRESH_PERSIST;
            lex->option_type= OPT_PERSIST;
          }
#line 39115 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2020:
#line 13383 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= false;
            lex->name= NULL_STR;
          }
#line 39125 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2021:
#line 13389 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->drop_if_exists= (yyvsp[-1].num);
            lex->name= (yyvsp[0].lexer.lex_str);
          }
#line 39135 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2022:
#line 13397 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type|= REFRESH_SLAVE; }
#line 39141 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2024:
#line 13400 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->type|= REFRESH_MASTER;
            /*
              Reset Master should acquire global read lock
              in order to avoid any parallel transaction commits
              while the reset operation is going on.

              *Only if* the thread is not already acquired the global
              read lock, server will acquire global read lock
              during the operation and release it at the
              end of the reset operation.
            */
            if (!(YYTHD)->global_read_lock.is_acquired())
              Lex->type|= REFRESH_TABLES | REFRESH_READ_LOCK;
          }
#line 39161 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2026:
#line 13419 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= false; }
#line 39167 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2027:
#line 13420 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->reset_slave_info.all= true; }
#line 39173 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2028:
#line 13424 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39179 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2029:
#line 13426 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].ulonglong_number) == 0 || (yyvsp[0].ulonglong_number) > MAX_ALLOWED_FN_EXT_RESET_MASTER)
            {
              my_error(ER_RESET_MASTER_TO_VALUE_OUT_OF_RANGE, MYF(0),
                       (yyvsp[0].ulonglong_number), MAX_ALLOWED_FN_EXT_RESET_MASTER);
              MYSQL_YYABORT;
            }
            else
              Lex->next_binlog_file_nr = (yyvsp[0].ulonglong_number);
          }
#line 39194 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2030:
#line 13440 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->type=0;
            lex->sql_command = SQLCOM_PURGE;
          }
#line 39204 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2031:
#line 13446 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 39210 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2033:
#line 13455 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->to_log = (yyvsp[0].lexer.lex_str).str;
          }
#line 39218 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2034:
#line 13459 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex= Lex;
            lex->purge_value_list.empty();
            lex->purge_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_PURGE_BEFORE;
          }
#line 39231 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2035:
#line 13473 "sql_yacc.yy" /* yacc.c:1646  */
    {
            ITEMIZE((yyvsp[0].item), &(yyvsp[0].item));

            LEX *lex=Lex;
            lex->kill_value_list.empty();
            lex->kill_value_list.push_front((yyvsp[0].item));
            lex->sql_command= SQLCOM_KILL;
          }
#line 39244 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2036:
#line 13484 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39250 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2037:
#line 13485 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= 0; }
#line 39256 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2038:
#line 13486 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->type= ONLY_KILL_QUERY; }
#line 39262 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2039:
#line 13493 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command=SQLCOM_CHANGE_DB;
            lex->select_lex->db= (yyvsp[0].lexer.lex_str).str;
          }
#line 39272 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2040:
#line 13521 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_load_table((yyvsp[-16].filetype),  // data_or_xml
                                      (yyvsp[-15].lock_type),  // load_data_lock
                                      (yyvsp[-14].is_not_empty),  // opt_local
                                      (yyvsp[-12].lexer.lex_str),  // TEXT_STRING_filesystem
                                      (yyvsp[-11].on_duplicate),  // opt_duplicate
                                      (yyvsp[-8].table), // table_ident
                                      (yyvsp[-7].string_list), // opt_use_partition
                                      (yyvsp[-6].lexer.charset), // opt_load_data_charset
                                      (yyvsp[-5].string), // opt_xml_rows_identified_by
                                      (yyvsp[-4].field_separators), // opt_field_term
                                      (yyvsp[-3].line_separators), // opt_line_term
                                      (yyvsp[-2].ulong_num), // opt_ignore_lines
                                      (yyvsp[-1].item_list2), // opt_field_or_var_spec
                                      (yyvsp[0].load_set_list).set_var_list,// opt_load_data_set_spec
                                      (yyvsp[0].load_set_list).set_expr_list,
                                      (yyvsp[0].load_set_list).set_expr_str_list);
          }
#line 39295 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2041:
#line 13542 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_CSV; }
#line 39301 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2042:
#line 13543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.filetype)= FILETYPE_XML; }
#line 39307 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2043:
#line 13547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 39313 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2044:
#line 13548 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 39319 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2045:
#line 13552 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_DEFAULT; }
#line 39325 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2046:
#line 13553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_CONCURRENT_INSERT; }
#line 39331 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2047:
#line 13554 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lock_type)= TL_WRITE_LOW_PRIORITY; }
#line 39337 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2048:
#line 13558 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::ERROR; }
#line 39343 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2050:
#line 13563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::REPLACE_DUP; }
#line 39349 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2051:
#line 13564 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.on_duplicate)= On_duplicate::IGNORE_DUP; }
#line 39355 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2052:
#line 13568 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators).cleanup(); }
#line 39361 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2053:
#line 13569 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.field_separators)= (yyvsp[0].field_separators); }
#line 39367 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2054:
#line 13574 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators)= (yyvsp[-1].field_separators);
            (yyval.field_separators).merge_field_separators((yyvsp[0].field_separators));
          }
#line 39376 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2056:
#line 13583 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).field_term= (yyvsp[0].string);
          }
#line 39385 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2057:
#line 13588 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
            (yyval.field_separators).opt_enclosed= 1;
          }
#line 39395 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2058:
#line 13594 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).enclosed= (yyvsp[0].string);
          }
#line 39404 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2059:
#line 13599 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.field_separators).cleanup();
            (yyval.field_separators).escaped= (yyvsp[0].string);
          }
#line 39413 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2060:
#line 13606 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators).cleanup(); }
#line 39419 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2061:
#line 13607 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.line_separators)= (yyvsp[0].line_separators); }
#line 39425 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2062:
#line 13612 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators)= (yyvsp[-1].line_separators);
            (yyval.line_separators).merge_line_separators((yyvsp[0].line_separators));
          }
#line 39434 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2064:
#line 13621 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_term= (yyvsp[0].string);
          }
#line 39443 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2065:
#line 13626 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.line_separators).cleanup();
            (yyval.line_separators).line_start= (yyvsp[0].string);
          }
#line 39452 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2066:
#line 13633 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= nullptr; }
#line 39458 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2067:
#line 13634 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.string)= (yyvsp[0].string); }
#line 39464 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2068:
#line 13638 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= 0; }
#line 39470 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2069:
#line 13639 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulong_num)= atol((yyvsp[-1].lexer.lex_str).str); }
#line 39476 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2072:
#line 13648 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39482 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2073:
#line 13649 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= (yyvsp[-1].item_list2); }
#line 39488 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2074:
#line 13650 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item_list2)= nullptr; }
#line 39494 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2075:
#line 13655 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= (yyvsp[-2].item_list2);
            if ((yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39504 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2076:
#line 13661 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_list2)= NEW_PTN PT_item_list;
            if ((yyval.item_list2) == nullptr || (yyval.item_list2)->push_back((yyvsp[0].item)))
              MYSQL_YYABORT; // OOM
          }
#line 39514 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2078:
#line 13671 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_user_var_as_out_param((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39522 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2079:
#line 13677 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= {nullptr, nullptr, nullptr}; }
#line 39528 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2080:
#line 13678 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.load_set_list)= (yyvsp[0].load_set_list); }
#line 39534 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2081:
#line 13683 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list)= (yyvsp[-2].load_set_list);
            if ((yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var) ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr) ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 39546 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2082:
#line 13691 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.load_set_list).set_var_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_var_list == nullptr ||
                (yyval.load_set_list).set_var_list->push_back((yyvsp[0].load_set_element).set_var))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_list= NEW_PTN PT_item_list;
            if ((yyval.load_set_list).set_expr_list == nullptr ||
                (yyval.load_set_list).set_expr_list->push_back((yyvsp[0].load_set_element).set_expr))
              MYSQL_YYABORT; // OOM

            (yyval.load_set_list).set_expr_str_list= NEW_PTN List<String>;
            if ((yyval.load_set_list).set_expr_str_list == nullptr ||
                (yyval.load_set_list).set_expr_str_list->push_back((yyvsp[0].load_set_element).set_expr_str))
              MYSQL_YYABORT; // OOM
          }
#line 39567 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2083:
#line 13711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            size_t length= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;

            if ((yyvsp[0].item) == nullptr)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item)->item_name.copy((yylsp[-1]).cpp.start, length, YYTHD->charset());

            (yyval.load_set_element).set_var= (yyvsp[-2].item);
            (yyval.load_set_element).set_expr= (yyvsp[0].item);
            (yyval.load_set_element).set_expr_str= NEW_PTN String((yylsp[-1]).cpp.start,
                                            length,
                                            YYTHD->charset());
            if ((yyval.load_set_element).set_expr_str == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 39587 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2084:
#line 13732 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_text_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
          }
#line 39596 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2085:
#line 13737 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_nchar_string((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[0].lexer.lex_str));
            warn_about_deprecated_national(YYTHD);
          }
#line 39606 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2086:
#line 13743 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_underscore_charset((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39615 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2087:
#line 13748 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.text_literal)= NEW_PTN PTI_text_literal_concat((yyloc),
                YYTHD->m_parser_state->m_lip.text_string_is_7bit(), (yyvsp[-1].text_literal), (yyvsp[0].lexer.lex_str));
          }
#line 39624 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2088:
#line 13756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.string)= NEW_PTN String((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length,
                               YYTHD->variables.collation_connection);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39635 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2089:
#line 13763 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39646 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2090:
#line 13770 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX_CSTRING s= Item_bin_string::make_bin_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
            (yyval.string)= NEW_PTN String(s.str, s.length, &my_charset_bin);
            if ((yyval.string) == NULL)
              MYSQL_YYABORT;
          }
#line 39657 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2091:
#line 13780 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *i= NEW_PTN Item_param((yyloc), YYMEM_ROOT,
                                        (uint) ((yylsp[0]).raw.start - YYLIP->get_buf()));
            if (i == NULL)
              MYSQL_YYABORT;
            auto *lex= Lex;
            /*
              If we are not re-parsing a CTE definition, this is a
              real parameter, so add it to param_list.
            */
            if (!lex->reparse_common_table_expr_at &&
                lex->param_list.push_back(i))
              MYSQL_YYABORT;
            (yyval.param_marker)= i;
          }
#line 39677 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2093:
#line 13799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 39683 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2094:
#line 13801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].item_num) == NULL)
              MYSQL_YYABORT; // OOM
            (yyvsp[0].item_num)->max_length++;
            (yyval.item)= (yyvsp[0].item_num)->neg();
          }
#line 39694 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2095:
#line 13811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].text_literal); }
#line 39700 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2096:
#line 13812 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= (yyvsp[0].item_num); }
#line 39706 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2098:
#line 13815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex_input_stream *lip= YYLIP;
            /*
              For the digest computation, in this context only,
              NULL is considered a literal, hence reduced to '?'
              REDUCE:
                TOK_GENERIC_VALUE := NULL_SYM
            */
            lip->reduce_digest_token(TOK_GENERIC_VALUE, NULL_SYM);
            (yyval.item)= NEW_PTN Item_null((yyloc));
          }
#line 39722 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2099:
#line 13827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_false((yyloc));
          }
#line 39730 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2100:
#line 13831 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_func_true((yyloc));
          }
#line 39738 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2101:
#line 13835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_hex_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39746 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2102:
#line 13839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_bin_string((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39754 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2103:
#line 13843 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_hex_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39762 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2104:
#line 13847 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_literal_underscore_charset_bin_num((yyloc), (yyvsp[-1].lexer.charset), (yyvsp[0].lexer.lex_str));
          }
#line 39770 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2105:
#line 13854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39778 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2106:
#line 13858 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_int((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39786 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2107:
#line 13862 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_uint((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39794 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2108:
#line 13866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_decimal((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, YYCSCL);
          }
#line 39802 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2109:
#line 13870 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item_num)= NEW_PTN Item_float((yyloc), (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length);
          }
#line 39810 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2110:
#line 13878 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATE, YYCSCL);
          }
#line 39818 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2111:
#line 13882 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_TIME, YYCSCL);
          }
#line 39826 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2112:
#line 13886 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_temporal_literal((yyloc), (yyvsp[0].lexer.lex_str), MYSQL_TYPE_DATETIME, YYCSCL);
          }
#line 39834 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2115:
#line 13905 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), NULL, (yyvsp[-2].lexer.lex_str).str);
          }
#line 39842 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2116:
#line 13909 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_table_wild((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str);
          }
#line 39852 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2117:
#line 13918 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[-1].item), (yyvsp[0].order_direction));
          }
#line 39860 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2118:
#line 13925 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.order_expr)= NEW_PTN PT_order_expr((yyvsp[0].item), ORDER_NOT_RELEVANT);
          }
#line 39868 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2119:
#line 13932 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_ident((yyloc), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 39876 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2121:
#line 13940 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_nospvar_ident((yyloc), (yyvsp[0].lexer.lex_str));
          }
#line 39884 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2123:
#line 13948 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN PTI_simple_ident_q_2d((yyloc), (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 39892 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2124:
#line 13952 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (check_and_convert_db_name(&(yyvsp[-4].lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
            (yyval.item)= NEW_PTN PTI_simple_ident_q_3d((yyloc), (yyvsp[-4].lexer.lex_str).str, (yyvsp[-2].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).str);
          }
#line 39902 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2125:
#line 13961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 39912 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2126:
#line 13967 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              (yyval.table)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if ((yyval.table) == NULL)
              MYSQL_YYABORT;
          }
#line 39926 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2127:
#line 13980 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 39936 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2128:
#line 13986 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.table_ident)= NEW_PTN Table_ident(YYTHD->get_protocol(),
                                    to_lex_cstring((yyvsp[-3].lexer.lex_str)),
                                    to_lex_cstring((yyvsp[-1].lexer.lex_str)), 0);
            if ((yyval.table_ident) == NULL)
              MYSQL_YYABORT;
          }
#line 39948 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2129:
#line 13996 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str); }
#line 39954 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2130:
#line 13998 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
            {
              const CHARSET_INFO *cs= system_charset_info;
              int dummy_error;
              size_t wlen= cs->cset->well_formed_len(cs, (yyvsp[0].lexer.lex_str).str,
                                                     (yyvsp[0].lexer.lex_str).str+(yyvsp[0].lexer.lex_str).length,
                                                     (yyvsp[0].lexer.lex_str).length, &dummy_error);
              if (wlen < (yyvsp[0].lexer.lex_str).length)
              {
                ErrConvString err((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, &my_charset_bin);
                my_error(ER_INVALID_CHARACTER_STRING, MYF(0),
                         cs->csname, err.ptr());
                MYSQL_YYABORT;
              }
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            }
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 39985 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2131:
#line 14028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!strcont((yyvsp[0].lexer.lex_str).str, "\n"))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_WRONG_VALUE, MYF(0), "argument contains not-allowed LF", (yyvsp[0].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
          }
#line 39999 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2132:
#line 14041 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (strcont((yyvsp[0].lexer.lex_str).str, "."))
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              my_error(ER_INVALID_RPL_WILD_TABLE_FILTER_PATTERN, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 40013 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2133:
#line 14054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40030 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2134:
#line 14070 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_collation_connection)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), thd->variables.collation_connection,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40047 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2135:
#line 14086 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_character_set_filesystem)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str),
                                      thd->variables.character_set_filesystem,
                                      (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset()))
                MYSQL_YYABORT;
            }
          }
#line 40065 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2138:
#line 14108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= to_lex_string(Item_hex_string::make_hex_str((yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length));
          }
#line 40073 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2139:
#line 14115 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;

            if (thd->charset_is_system_charset)
              (yyval.lexer.lex_str)= (yyvsp[0].lexer.lex_str);
            else
            {
              if (thd->convert_string(&(yyval.lexer.lex_str), system_charset_info,
                                  (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length, thd->charset(), true))
                MYSQL_YYABORT;
            }
          }
#line 40090 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2140:
#line 14130 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str); }
#line 40096 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2141:
#line 14132 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lexer.lex_str).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40108 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2143:
#line 14144 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40119 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2144:
#line 14153 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstr)=to_lex_cstring((yyvsp[0].lexer.lex_str)); }
#line 40125 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2145:
#line 14155 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            (yyval.lex_cstr).str= thd->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lex_cstr).str == NULL)
              MYSQL_YYABORT;
            (yyval.lex_cstr).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40137 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2147:
#line 14167 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str).str= YYTHD->strmake((yyvsp[0].lexer.keyword).str, (yyvsp[0].lexer.keyword).length);
            if ((yyval.lexer.lex_str).str == NULL)
              MYSQL_YYABORT;
            (yyval.lexer.lex_str).length= (yyvsp[0].lexer.keyword).length;
          }
#line 40148 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2148:
#line 14176 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40154 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2149:
#line 14177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40160 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2150:
#line 14178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lexer.lex_str)=(yyvsp[0].lexer.lex_str);}
#line 40166 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2154:
#line 14189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40175 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2155:
#line 14194 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40184 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2156:
#line 14202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[0].lex_user);
          }
#line 40192 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2157:
#line 14206 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)=(LEX_USER*) YYTHD->alloc(sizeof(LEX_USER))))
              MYSQL_YYABORT;
            /*
              empty LEX_USER means current_user and
              will be handled in the  get_current_user() function
              later
            */
            memset((yyval.lex_user), 0, sizeof(LEX_USER));
          }
#line 40207 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2158:
#line 14220 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[0].lexer.lex_str), NULL)))
              MYSQL_YYABORT;
          }
#line 40216 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2159:
#line 14225 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (!((yyval.lex_user)= LEX_USER::alloc(YYTHD, &(yyvsp[-2].lexer.lex_str), &(yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT;
          }
#line 40225 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2160:
#line 14233 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str) = (yyvsp[0].lexer.lex_str);
            if (check_and_convert_db_name(&(yyval.lexer.lex_str), false) != Ident_name_check::OK)
              MYSQL_YYABORT;
          }
#line 40235 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2604:
#line 14779 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.set)= NEW_PTN PT_set((yylsp[-1]), (yyvsp[0].start_option_value_list));
          }
#line 40243 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2605:
#line 14788 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_no_type((yyvsp[-1].option_value_no_option_type), (yylsp[-1]), (yyvsp[0].option_value_list));
          }
#line 40251 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2606:
#line 14792 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_transaction((yyvsp[0].transaction_characteristics), (yylsp[0]));
          }
#line 40259 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2607:
#line 14796 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_start_option_value_list_type((yyvsp[-1].var_type), (yyvsp[0].start_option_value_list_following_option_type));
          }
#line 40267 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2608:
#line 14800 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.lex_str).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                false,
                                                                (yylsp[-1]));
          }
#line 40278 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2609:
#line 14807 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password((yyvsp[-2].lexer.keyword).str, (yyvsp[-1].lex_cstr).str,
                                                                (yyvsp[0].is_not_empty),
                                                                true,
                                                                (yylsp[-1]));
          }
#line 40290 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2610:
#line 14815 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.lex_str).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    false,
                                                                    (yylsp[-1]));
          }
#line 40302 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2611:
#line 14823 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // RANDOM PASSWORD GENERATION AND RETURN RESULT SET...
            (yyval.start_option_value_list)= NEW_PTN PT_option_value_no_option_type_password_for((yyvsp[-4].lex_user), (yyvsp[-2].lexer.keyword).str,
                                                                    (yyvsp[-1].lex_cstr).str,
                                                                    (yyvsp[0].is_not_empty),
                                                                    true,
                                                                    (yylsp[-1]));
          }
#line 40315 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2612:
#line 14835 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role((yyvsp[0].user_list));
          }
#line 40323 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2613:
#line 14839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_NONE);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40332 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2614:
#line 14844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_DEFAULT);
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40341 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2615:
#line 14849 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), (yyvsp[-2].user_list),
                                                    role_enum::ROLE_NAME);
          }
#line 40350 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2616:
#line 14854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_NONE);
          }
#line 40359 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2617:
#line 14859 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_alter_user_default_role(false, (yyvsp[0].user_list), NULL,
                                                   role_enum::ROLE_ALL);
          }
#line 40368 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2618:
#line 14864 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_role(role_enum::ROLE_ALL, (yyvsp[0].user_list));
            Lex->sql_command= SQLCOM_SET_ROLE;
          }
#line 40377 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2619:
#line 14871 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= NULL; }
#line 40383 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2620:
#line 14872 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.user_list)= (yyvsp[0].user_list); }
#line 40389 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2621:
#line 14877 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[0].lexer.lex_str)), nullptr);
          }
#line 40397 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2622:
#line 14881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_set_resource_group(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].thread_id_list_type));
          }
#line 40405 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2623:
#line 14888 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= NEW_PTN Mem_root_array<ulonglong>(YYMEM_ROOT);
            if ((yyval.thread_id_list_type) == nullptr || (yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40415 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2624:
#line 14894 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.thread_id_list_type)= (yyvsp[-2].thread_id_list_type);
            if ((yyval.thread_id_list_type)->push_back((yyvsp[0].ulong_num)))
              MYSQL_YYABORT; // OOM
          }
#line 40425 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2625:
#line 14902 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.thread_id_list_type)= (yyvsp[0].thread_id_list_type); }
#line 40431 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2626:
#line 14908 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)=
              NEW_PTN PT_start_option_value_list_following_option_type_eq((yyvsp[-1].option_value_following_option_type),
                                                                          (yylsp[-1]),
                                                                          (yyvsp[0].option_value_list));
          }
#line 40442 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2627:
#line 14915 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.start_option_value_list_following_option_type)= NEW_PTN
              PT_start_option_value_list_following_option_type_transaction((yyvsp[0].transaction_characteristics),
                                                                           (yylsp[0]));
          }
#line 40452 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2628:
#line 14924 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= NULL; }
#line 40458 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2629:
#line 14925 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.option_value_list)= (yyvsp[0].option_value_list); }
#line 40464 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2630:
#line 14931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list_head((yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40472 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2631:
#line 14935 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_list)= NEW_PTN PT_option_value_list((yyvsp[-2].option_value_list), (yylsp[-1]), (yyvsp[0].node), (yylsp[0]));
          }
#line 40480 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2632:
#line 14943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.node)= NEW_PTN PT_option_value_type((yyvsp[-1].var_type), (yyvsp[0].option_value_following_option_type));
          }
#line 40488 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2633:
#line 14946 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.node)= (yyvsp[0].option_value_no_option_type); }
#line 40494 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2634:
#line 14950 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40500 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2635:
#line 14951 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40506 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2636:
#line 14952 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40512 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2637:
#line 14953 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40518 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2638:
#line 14954 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40524 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2639:
#line 14958 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40530 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2640:
#line 14959 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40536 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2641:
#line 14960 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40542 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2642:
#line 14961 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40548 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2643:
#line 14965 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 40554 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2644:
#line 14966 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40560 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2645:
#line 14967 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40566 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2646:
#line 14968 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40572 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2647:
#line 14972 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_DEFAULT; }
#line 40578 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2648:
#line 14973 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_PERSIST; }
#line 40584 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2649:
#line 14974 "sql_yacc.yy" /* yacc.c:1646  */
    {(yyval.var_type)=OPT_PERSIST_ONLY; }
#line 40590 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2650:
#line 14975 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_GLOBAL; }
#line 40596 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2651:
#line 14976 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40602 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2652:
#line 14977 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.var_type)=OPT_SESSION; }
#line 40608 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2653:
#line 14983 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_following_option_type)= NEW_PTN PT_option_value_following_option_type((yyloc), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 40616 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2654:
#line 14993 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_internal((yyvsp[-2].internal_variable_name), (yyvsp[0].item), (yylsp[0]));
          }
#line 40624 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2655:
#line 14997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_user_var((yyvsp[-2].lexer.lex_str), (yyvsp[0].item));
          }
#line 40632 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2656:
#line 15002 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_sys_var((yyvsp[-3].var_type), (yyvsp[-2].internal_variable_name), (yyvsp[0].item));
          }
#line 40640 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2657:
#line 15006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_charset((yyvsp[0].lexer.charset));
          }
#line 40648 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2658:
#line 15010 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              Bad syntax, always fails with an error
            */
            (yyval.option_value_no_option_type)= NEW_PTN PT_option_value_no_option_type_names((yylsp[-1]));
          }
#line 40659 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2659:
#line 15017 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type)= NEW_PTN PT_set_names((yyvsp[-1].lexer.charset), (yyvsp[0].lexer.charset));
          }
#line 40667 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2660:
#line 15021 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.option_value_no_option_type) = NEW_PTN PT_set_names(nullptr, nullptr);
          }
#line 40675 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2661:
#line 15028 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_1d(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40683 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2662:
#line 15032 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_2d((yyloc), to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 40691 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2663:
#line 15036 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.internal_variable_name)= NEW_PTN PT_internal_variable_name_default((yyvsp[0].lexer.lex_str));
          }
#line 40699 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2664:
#line 15043 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].transaction_access_mode), (yyvsp[0].isolation_level));
          }
#line 40707 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2665:
#line 15047 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_characteristics)= NEW_PTN PT_transaction_characteristics((yyvsp[-1].isolation_level), (yyvsp[0].transaction_access_mode));
          }
#line 40715 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2666:
#line 15054 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.transaction_access_mode)= NEW_PTN PT_transaction_access_mode((yyvsp[0].num));
          }
#line 40723 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2667:
#line 15060 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= NULL; }
#line 40729 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2668:
#line 15061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.transaction_access_mode)= (yyvsp[0].transaction_access_mode); }
#line 40735 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2669:
#line 15066 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.isolation_level)= NEW_PTN PT_isolation_level((yyvsp[0].tx_isolation));
          }
#line 40743 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2670:
#line 15072 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= NULL; }
#line 40749 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2671:
#line 15073 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.isolation_level)= (yyvsp[0].isolation_level); }
#line 40755 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2672:
#line 15077 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= true; }
#line 40761 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2673:
#line 15078 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= false; }
#line 40767 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2674:
#line 15082 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_UNCOMMITTED; }
#line 40773 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2675:
#line 15083 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_READ_COMMITTED; }
#line 40779 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2676:
#line 15084 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_REPEATABLE_READ; }
#line 40785 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2677:
#line 15085 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.tx_isolation)= ISO_SERIALIZABLE; }
#line 40791 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2679:
#line 15090 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.item)= NULL; }
#line 40797 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2680:
#line 15092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ON", 2, system_charset_info);
          }
#line 40805 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2681:
#line 15096 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ALL", 3, system_charset_info);
          }
#line 40813 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2682:
#line 15100 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "binary", 6, system_charset_info);
          }
#line 40821 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2683:
#line 15104 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "ROW", 3, system_charset_info);
          }
#line 40829 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2684:
#line 15108 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.item)= NEW_PTN Item_string((yyloc), "SYSTEM", 6, system_charset_info);
          }
#line 40837 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2685:
#line 15117 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "LOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_LOCK_TABLES;
          }
#line 40852 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2686:
#line 15128 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40858 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2687:
#line 15130 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_LOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_lock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40869 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2692:
#line 15150 "sql_yacc.yy" /* yacc.c:1646  */
    {
            thr_lock_type lock_type= (thr_lock_type) (yyvsp[0].num);
            enum_mdl_type mdl_lock_type;

            if (lock_type >= TL_WRITE_ALLOW_WRITE)
            {
              /* LOCK TABLE ... WRITE/LOW_PRIORITY WRITE */
              mdl_lock_type= MDL_SHARED_NO_READ_WRITE;
            }
            else if (lock_type == TL_READ)
            {
              /* LOCK TABLE ... READ LOCAL */
              mdl_lock_type= MDL_SHARED_READ;
            }
            else
            {
              /* LOCK TABLE ... READ */
              mdl_lock_type= MDL_SHARED_READ_ONLY;
            }

            if (!Select->add_table_to_list(YYTHD, (yyvsp[-2].table), (yyvsp[-1].lex_cstr).str, 0, lock_type,
                                           mdl_lock_type))
              MYSQL_YYABORT;
          }
#line 40898 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2693:
#line 15177 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ_NO_INSERT; }
#line 40904 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2694:
#line 15178 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_WRITE_DEFAULT; }
#line 40910 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2695:
#line 15180 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.num)= TL_WRITE_LOW_PRIORITY;
            push_deprecated_warn(YYTHD, "LOW_PRIORITY WRITE", "WRITE");
          }
#line 40919 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2696:
#line 15184 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= TL_READ; }
#line 40925 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2697:
#line 15189 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_BADSTATEMENT, MYF(0), "UNLOCK");
              MYSQL_YYABORT;
            }
            lex->sql_command= SQLCOM_UNLOCK_TABLES;
          }
#line 40940 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2698:
#line 15200 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 40946 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2699:
#line 15202 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_UNLOCK_INSTANCE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_unlock_instance();
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT; // OOM
          }
#line 40957 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2700:
#line 15213 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_SHUTDOWN;
            (yyval.top_level_node)= NEW_PTN PT_shutdown();
          }
#line 40966 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2701:
#line 15221 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_restart_server();
          }
#line 40974 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2702:
#line 15228 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_ALTER_INSTANCE;
            (yyval.top_level_node)= NEW_PTN PT_alter_instance((yyvsp[0].alter_instance_action));
          }
#line 40983 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2703:
#line 15235 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-2].lexer.lex_str), "INNODB"))
            {
              (yyval.alter_instance_action)= ROTATE_INNODB_MASTER_KEY;
            }
            else if (is_identifier((yyvsp[-2].lexer.lex_str), "BINLOG"))
            {
              (yyval.alter_instance_action)= ROTATE_BINLOG_MASTER_KEY;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-2]));
              MYSQL_YYABORT;
            }
          }
#line 41003 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2704:
#line 15251 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[0].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS_ROLLBACK_ON_ERROR;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[0]));
              MYSQL_YYABORT;
            }
          }
#line 41019 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2705:
#line 15263 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (is_identifier((yyvsp[-4].lexer.lex_str), "TLS"))
            {
              (yyval.alter_instance_action) = ALTER_INSTANCE_RELOAD_TLS;
            }
            else
            {
              YYTHD->syntax_error_at((yylsp[-4]));
              MYSQL_YYABORT;
            }
          }
#line 41035 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2706:
#line 15282 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_open((yyvsp[-2].table), (yyvsp[0].lex_cstr));
          }
#line 41043 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2707:
#line 15286 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_close(to_lex_cstring((yyvsp[-1].lexer.lex_str)));
          }
#line 41051 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2708:
#line 15295 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_table_scan(to_lex_cstring((yyvsp[-4].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41059 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2709:
#line 15305 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_scan(to_lex_cstring((yyvsp[-5].lexer.lex_str)),
                                              to_lex_cstring((yyvsp[-3].lexer.lex_str)), (yyvsp[-2].ha_read_mode), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41068 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2710:
#line 15317 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.top_level_node)= NEW_PTN PT_handler_index_range_scan(to_lex_cstring((yyvsp[-8].lexer.lex_str)),
                                                    to_lex_cstring((yyvsp[-6].lexer.lex_str)),
                                                    (yyvsp[-5].ha_rkey_mode), (yyvsp[-3].item_list2), (yyvsp[-1].item), (yyvsp[0].limit_clause));
          }
#line 41078 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2711:
#line 15325 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41084 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2712:
#line 15326 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41090 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2713:
#line 15330 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RFIRST; }
#line 41096 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2714:
#line 15331 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RNEXT;  }
#line 41102 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2715:
#line 15332 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RPREV;  }
#line 41108 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2716:
#line 15333 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_read_mode)= enum_ha_read_modes::RLAST;  }
#line 41114 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2717:
#line 15337 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_EXACT;   }
#line 41120 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2718:
#line 15338 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_NEXT; }
#line 41126 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2719:
#line 15339 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_KEY_OR_PREV; }
#line 41132 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2720:
#line 15340 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_AFTER_KEY;   }
#line 41138 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2721:
#line 15341 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ha_rkey_mode)=HA_READ_BEFORE_KEY;  }
#line 41144 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2722:
#line 15348 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_revoke_roles((yyvsp[-2].role_or_privilege_list), (yyvsp[0].user_list));
            MAKE_CMD(tmp);
          }
#line 41153 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2723:
#line 15353 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            if (apply_privileges(YYTHD, *(yyvsp[-5].role_or_privilege_list)))
              MYSQL_YYABORT;
            lex->sql_command= (lex->grant == GLOBAL_ACLS) ? SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41172 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2724:
#line 15368 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41181 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2725:
#line 15373 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= (lex->grant == (GLOBAL_ACLS & ~GRANT_ACL)) ?
                                                            SQLCOM_REVOKE_ALL
                                                          : SQLCOM_REVOKE;
            if ((yyvsp[-3].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-3].acl_type));
            lex->users_list= *(yyvsp[0].user_list);
          }
#line 41199 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2726:
#line 15387 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_REVOKE_ALL;
            Lex->users_list= *(yyvsp[0].user_list);
          }
#line 41208 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2727:
#line 15392 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_REVOKE;
            lex->users_list= *(yyvsp[0].user_list);
            lex->users_list.push_front ((yyvsp[-2].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41220 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2728:
#line 15403 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto *tmp= NEW_PTN PT_grant_roles((yyvsp[-3].role_or_privilege_list), (yyvsp[-1].user_list), (yyvsp[0].is_not_empty));
            MAKE_CMD(tmp);
          }
#line 41229 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2729:
#line 15409 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if (apply_privileges(YYTHD, *(yyvsp[-7].role_or_privilege_list)))
              MYSQL_YYABORT;

            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41248 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2730:
#line 15424 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->all_privileges= 1;
            Lex->grant= GLOBAL_ACLS;
          }
#line 41257 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2731:
#line 15429 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[-5].acl_type) != Acl_type::TABLE && !lex->columns.is_empty())
            {
              YYTHD->syntax_error();
              MYSQL_YYABORT;
            }
            lex->type= static_cast<ulong>((yyvsp[-5].acl_type));
            lex->users_list= *(yyvsp[-2].user_list);
          }
#line 41273 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2732:
#line 15441 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_GRANT;
            if ((yyvsp[0].is_not_empty))
              lex->grant |= GRANT_ACL;
            lex->users_list= *(yyvsp[-1].user_list);
            lex->users_list.push_front ((yyvsp[-3].lex_user));
            lex->type= TYPE_ENUM_PROXY;
          }
#line 41287 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2733:
#line 15453 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41293 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2734:
#line 15454 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::TABLE; }
#line 41299 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2735:
#line 15455 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::FUNCTION; }
#line 41305 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2736:
#line 15456 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.acl_type)= Acl_type::PROCEDURE; }
#line 41311 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2739:
#line 15466 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= NEW_PTN Mem_root_array<PT_role_or_privilege *>(YYMEM_ROOT);
            if ((yyval.role_or_privilege_list) == NULL || (yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41321 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2740:
#line 15472 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege_list)= (yyvsp[-2].role_or_privilege_list);
            if ((yyval.role_or_privilege_list)->push_back((yyvsp[0].role_or_privilege)))
              MYSQL_YYABORT; // OOM
          }
#line 41331 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2741:
#line 15481 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if ((yyvsp[0].lex_cstring_list) == NULL)
              (yyval.role_or_privilege)= NEW_PTN PT_role_or_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
            else
              (yyval.role_or_privilege)= NEW_PTN PT_dynamic_privilege((yylsp[-1]), (yyvsp[-1].lexer.lex_str));
          }
#line 41342 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2742:
#line 15488 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_role_at_host((yylsp[-2]), (yyvsp[-2].lexer.lex_str), (yyvsp[0].lexer.lex_str)); }
#line 41348 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2743:
#line 15490 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SELECT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41354 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2744:
#line 15492 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), INSERT_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41360 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2745:
#line 15494 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), UPDATE_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41366 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2746:
#line 15496 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REFERENCES_ACL, (yyvsp[0].lex_cstring_list)); }
#line 41372 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2747:
#line 15498 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DELETE_ACL); }
#line 41378 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2748:
#line 15500 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), 0); }
#line 41384 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2749:
#line 15502 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), INDEX_ACL); }
#line 41390 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2750:
#line 15504 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), ALTER_ACL); }
#line 41396 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2751:
#line 15506 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), CREATE_ACL); }
#line 41402 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2752:
#line 15508 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), DROP_ACL); }
#line 41408 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2753:
#line 15510 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EXECUTE_ACL); }
#line 41414 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2754:
#line 15512 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), RELOAD_ACL); }
#line 41420 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2755:
#line 15514 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SHUTDOWN_ACL); }
#line 41426 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2756:
#line 15516 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), PROCESS_ACL); }
#line 41432 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2757:
#line 15518 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), FILE_ACL); }
#line 41438 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2758:
#line 15520 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), GRANT_ACL);
            Lex->grant_privilege= true;
          }
#line 41447 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2759:
#line 15525 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_DB_ACL); }
#line 41453 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2760:
#line 15527 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* DEPRECATED */
            (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), SUPER_ACL);
            if (Lex->grant != GLOBAL_ACLS)
            {
              /*
                 An explicit request was made for the SUPER priv id
              */
              push_warning(Lex->thd, Sql_condition::SL_WARNING,
                           ER_WARN_DEPRECATED_SYNTAX,
                           "The SUPER privilege identifier is deprecated");
            }
          }
#line 41471 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2761:
#line 15541 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-2]), CREATE_TMP_ACL); }
#line 41477 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2762:
#line 15543 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), LOCK_TABLES_ACL); }
#line 41483 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2763:
#line 15545 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_SLAVE_ACL); }
#line 41489 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2764:
#line 15547 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), REPL_CLIENT_ACL); }
#line 41495 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2765:
#line 15549 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_VIEW_ACL); }
#line 41501 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2766:
#line 15551 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), SHOW_VIEW_ACL); }
#line 41507 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2767:
#line 15553 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_PROC_ACL); }
#line 41513 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2768:
#line 15555 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), ALTER_PROC_ACL); }
#line 41519 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2769:
#line 15557 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_USER_ACL); }
#line 41525 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2770:
#line 15559 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), EVENT_ACL); }
#line 41531 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2771:
#line 15561 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[0]), TRIGGER_ACL); }
#line 41537 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2772:
#line 15563 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_TABLESPACE_ACL); }
#line 41543 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2773:
#line 15565 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), CREATE_ROLE_ACL); }
#line 41549 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2774:
#line 15567 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.role_or_privilege)= NEW_PTN PT_static_privilege((yylsp[-1]), DROP_ROLE_ACL); }
#line 41555 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2775:
#line 15571 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41561 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2776:
#line 15572 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41567 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2781:
#line 15587 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_subject)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "SUBJECT");
              MYSQL_YYABORT;
            }
            lex->x509_subject=(yyvsp[0].lexer.lex_str).str;
          }
#line 41581 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2782:
#line 15597 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->x509_issuer)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "ISSUER");
              MYSQL_YYABORT;
            }
            lex->x509_issuer=(yyvsp[0].lexer.lex_str).str;
          }
#line 41595 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2783:
#line 15607 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            if (lex->ssl_cipher)
            {
              my_error(ER_DUP_ARGUMENT, MYF(0), "CIPHER");
              MYSQL_YYABORT;
            }
            lex->ssl_cipher=(yyvsp[0].lexer.lex_str).str;
          }
#line 41609 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2784:
#line 15620 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            size_t dummy;
            if (lex->copy_db_to(&lex->current_select()->db, &dummy))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41627 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2785:
#line 15634 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = (yyvsp[-2].lexer.lex_str).str;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant = DB_OP_ACLS;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41643 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2786:
#line 15646 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->current_select()->db = NULL;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant= GLOBAL_ACLS & ~GRANT_ACL;
            else if (lex->columns.elements)
            {
              my_error(ER_ILLEGAL_GRANT_FOR_TABLE, MYF(0));
              MYSQL_YYABORT;
            }
          }
#line 41659 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2787:
#line 15658 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 41675 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2788:
#line 15670 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Table_ident *tmp;
            if (YYTHD->get_protocol()->has_client_capability(CLIENT_NO_SCHEMA))
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            else {
              tmp = NEW_PTN Table_ident(to_lex_cstring((yyvsp[-2].lexer.lex_str)), to_lex_cstring((yyvsp[0].lexer.lex_str)));
            }
            if (tmp == NULL)
              MYSQL_YYABORT;
            LEX *lex=Lex;
            if (!lex->current_select()->add_table_to_list(lex->thd, tmp, NULL,
                                                        TL_OPTION_UPDATING))
              MYSQL_YYABORT;
            if (lex->grant == GLOBAL_ACLS)
              lex->grant =  TABLE_OP_ACLS;
          }
#line 41696 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2789:
#line 15690 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41706 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2790:
#line 15696 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41716 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2791:
#line 15705 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= new (YYMEM_ROOT) List<LEX_USER>;
            if ((yyval.user_list) == NULL || (yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41726 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2792:
#line 15711 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.user_list)= (yyvsp[-2].user_list);
            if ((yyval.user_list)->push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 41736 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2793:
#line 15719 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41742 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2794:
#line 15720 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41748 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2795:
#line 15724 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 41754 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2796:
#line 15725 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 41760 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2797:
#line 15729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->has_password_generator= false;
            (yyvsp[-3].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 41775 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2798:
#line 15740 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= true;
            (yyvsp[-4].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
          }
#line 41790 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2799:
#line 15751 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 41805 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2800:
#line 15762 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 41822 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2801:
#line 15775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->plugin.str= (yyvsp[-2].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->plugin.length= (yyvsp[-2].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->auth.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-5].lex_user)->auth.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-5].lex_user)->has_password_generator= false;
          }
#line 41840 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2802:
#line 15789 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= false;
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= true;
          }
#line 41856 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2803:
#line 15801 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[0].lex_user);
            (yyvsp[0].lex_user)->auth= NULL_CSTR;
            (yyvsp[0].lex_user)->discard_old_password= false;
            (yyvsp[0].lex_user)->retain_current_password= false;
            (yyvsp[0].lex_user)->has_password_generator= false;
          }
#line 41868 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2804:
#line 15812 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->has_password_generator= false;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_replace_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41886 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2805:
#line 15827 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-8].lex_user);
            (yyvsp[-8].lex_user)->has_password_generator= false;
            (yyvsp[-8].lex_user)->plugin.str= (yyvsp[-5].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->plugin.length= (yyvsp[-5].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->auth.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->auth.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-8].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-8].lex_user)->uses_replace_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-8].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-8].lex_user)->discard_old_password= false;
            (yyvsp[-8].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41907 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2806:
#line 15844 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)=(yyvsp[-4].lex_user);
            (yyvsp[-4].lex_user)->has_password_generator= false;
            (yyvsp[-4].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-4].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-4].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-4].lex_user)->discard_old_password= false;
            (yyvsp[-4].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41922 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2807:
#line 15855 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-5].lex_user);
            (yyvsp[-5].lex_user)->has_password_generator= true;
            (yyvsp[-5].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-5].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-5].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-5].lex_user)->discard_old_password= false;
            (yyvsp[-5].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
          }
#line 41937 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2808:
#line 15866 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->has_password_generator= true;
            (yyvsp[-7].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= false;
            (yyvsp[-7].lex_user)->uses_replace_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-7].lex_user)->current_auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->current_auth.length= (yyvsp[-1].lexer.lex_str).length;
            Lex->contains_plaintext_password= true;
          }
#line 41955 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2809:
#line 15880 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-3].lex_user);
            (yyvsp[-3].lex_user)->plugin.str= (yyvsp[0].lexer.lex_str).str;
            (yyvsp[-3].lex_user)->plugin.length= (yyvsp[0].lexer.lex_str).length;
            (yyvsp[-3].lex_user)->auth= EMPTY_CSTR;
            (yyvsp[-3].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-3].lex_user)->discard_old_password= false;
            (yyvsp[-3].lex_user)->retain_current_password= false;
            (yyvsp[-3].lex_user)->has_password_generator= false;
          }
#line 41970 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2810:
#line 15892 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_authentication_string_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 41987 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2811:
#line 15906 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-6].lex_user);
            (yyvsp[-6].lex_user)->plugin.str= (yyvsp[-3].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->plugin.length= (yyvsp[-3].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-6].lex_user)->discard_old_password= false;
            (yyvsp[-6].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-6].lex_user)->has_password_generator= false;
          }
#line 42005 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2812:
#line 15921 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-7].lex_user);
            (yyvsp[-7].lex_user)->plugin.str= (yyvsp[-4].lexer.lex_str).str;
            (yyvsp[-7].lex_user)->plugin.length= (yyvsp[-4].lexer.lex_str).length;
            (yyvsp[-7].lex_user)->uses_identified_with_clause= true;
            (yyvsp[-7].lex_user)->uses_identified_by_clause= true;
            (yyvsp[-7].lex_user)->discard_old_password= false;
            (yyvsp[-7].lex_user)->retain_current_password= (yyvsp[0].is_not_empty);
            Lex->contains_plaintext_password= true;
            (yyvsp[-7].lex_user)->has_password_generator= true;
          }
#line 42021 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2813:
#line 15933 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_user)= (yyvsp[-1].lex_user);
            (yyvsp[-1].lex_user)->discard_old_password= (yyvsp[0].is_not_empty);
            (yyvsp[-1].lex_user)->retain_current_password= false;
            (yyvsp[-1].lex_user)->auth= NULL_CSTR;
            (yyvsp[-1].lex_user)->has_password_generator= false;
          }
#line 42033 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2814:
#line 15944 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42042 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2815:
#line 15949 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42051 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2816:
#line 15957 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
         }
#line 42060 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2817:
#line 15962 "sql_yacc.yy" /* yacc.c:1646  */
    {
            if (Lex->users_list.push_back((yyvsp[0].lex_user)))
              MYSQL_YYABORT;
          }
#line 42069 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2818:
#line 15969 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= NULL; }
#line 42075 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2819:
#line 15970 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.lex_cstring_list)= (yyvsp[-1].lex_cstring_list); }
#line 42081 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2820:
#line 15975 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= NEW_PTN Mem_root_array<LEX_CSTRING>(YYMEM_ROOT);
            if ((yyval.lex_cstring_list) == NULL || (yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42091 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2821:
#line 15981 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_cstring_list)= (yyvsp[-2].lex_cstring_list);
            if ((yyval.lex_cstring_list)->push_back(to_lex_cstring((yyvsp[0].lexer.lex_str))))
              MYSQL_YYABORT; // OOM
          }
#line 42101 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2823:
#line 15991 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_SPECIFIED;
          }
#line 42109 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2824:
#line 15995 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_ANY;
          }
#line 42117 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2825:
#line 15999 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_X509;
          }
#line 42125 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2826:
#line 16003 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type=SSL_TYPE_NONE;
          }
#line 42133 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2827:
#line 16009 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42139 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2828:
#line 16011 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant |= GRANT_ACL;}
#line 42145 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2829:
#line 16015 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 42151 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2830:
#line 16016 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 42157 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2831:
#line 16020 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42163 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2832:
#line 16022 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NAME;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42171 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2833:
#line 16026 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.role_type = role_enum::ROLE_ALL;
            Lex->grant_as.role_list = (yyvsp[0].user_list);
          }
#line 42180 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2834:
#line 16031 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_NONE; }
#line 42186 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2835:
#line 16033 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.role_type = role_enum::ROLE_DEFAULT; }
#line 42192 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2836:
#line 16037 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->grant_as.grant_as_used = false; }
#line 42198 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2837:
#line 16039 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->grant_as.grant_as_used = true;
            Lex->grant_as.user = (yyvsp[-1].lex_user);
          }
#line 42207 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2838:
#line 16046 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command = SQLCOM_BEGIN;
            lex->start_transaction_opt= 0;
          }
#line 42217 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2839:
#line 16051 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42223 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2840:
#line 16055 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42229 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2841:
#line 16056 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42235 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2842:
#line 16061 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42241 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2843:
#line 16062 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42247 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2844:
#line 16063 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42253 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2845:
#line 16068 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_UNKNOWN; }
#line 42259 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2846:
#line 16069 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_YES; }
#line 42265 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2847:
#line 16070 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.m_yes_no_unk)= TVL_NO; }
#line 42271 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2848:
#line 16074 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42277 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2849:
#line 16075 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42283 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2850:
#line 16080 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_COMMIT;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42296 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2851:
#line 16092 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK;
            /* Don't allow AND CHAIN RELEASE. */
            MYSQL_YYABORT_UNLESS((yyvsp[-1].m_yes_no_unk) != TVL_YES || (yyvsp[0].m_yes_no_unk) != TVL_YES);
            lex->tx_chain= (yyvsp[-1].m_yes_no_unk);
            lex->tx_release= (yyvsp[0].m_yes_no_unk);
          }
#line 42309 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2852:
#line 16102 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_ROLLBACK_TO_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42319 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2853:
#line 16111 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42329 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2854:
#line 16120 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex=Lex;
            lex->sql_command= SQLCOM_RELEASE_SAVEPOINT;
            lex->ident= (yyvsp[0].lexer.lex_str);
          }
#line 42339 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2855:
#line 16133 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42345 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2856:
#line 16134 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=1; }
#line 42351 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2857:
#line 16135 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)=0; }
#line 42357 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2860:
#line 16148 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.subquery)= NEW_PTN PT_subquery((yyloc), (yyvsp[0].query_primary));
          }
#line 42365 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2861:
#line 16154 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_STRAIGHT_JOIN; }
#line 42371 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2862:
#line 16155 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_HIGH_PRIORITY; }
#line 42377 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2863:
#line 16156 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_DISTINCT; }
#line 42383 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2864:
#line 16157 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_SMALL_RESULT; }
#line 42389 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2865:
#line 16158 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_BIG_RESULT; }
#line 42395 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2866:
#line 16159 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= OPTION_BUFFER_RESULT; }
#line 42401 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2867:
#line 16160 "sql_yacc.yy" /* yacc.c:1646  */
    {
            push_warning(YYTHD, Sql_condition::SL_WARNING,
                         ER_WARN_DEPRECATED_SYNTAX,
                         ER_THD(YYTHD, ER_WARN_DEPRECATED_SQL_CALC_FOUND_ROWS));
            (yyval.ulonglong_number)= OPTION_FOUND_ROWS;
          }
#line 42412 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2868:
#line 16166 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.ulonglong_number)= SELECT_ALL; }
#line 42418 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2869:
#line 16177 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // Initialize context for 'CREATE view_or_trigger_or_sp_or_event'
            Lex->create_info= YYTHD->alloc_typed<HA_CREATE_INFO>();
            if (Lex->create_info == NULL)
              MYSQL_YYABORT; // OOM
          }
#line 42429 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2870:
#line 16187 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42435 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2871:
#line 16189 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42441 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2872:
#line 16191 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42447 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2886:
#line 16224 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /*
              We have to distinguish missing DEFINER-clause from case when
              CURRENT_USER specified as definer explicitly in order to properly
              handle CREATE TRIGGER statements which come to replication thread
              from older master servers (i.e. to create non-suid trigger in this
              case).
            */
            YYTHD->lex->definer= 0;
          }
#line 42462 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2887:
#line 16238 "sql_yacc.yy" /* yacc.c:1646  */
    {
            YYTHD->lex->definer= get_current_user(YYTHD, (yyvsp[0].lex_user));
          }
#line 42470 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2888:
#line 16251 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42476 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2889:
#line 16253 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42482 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2890:
#line 16255 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 42488 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2891:
#line 16260 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_mode= enum_view_create_mode::VIEW_CREATE_OR_REPLACE; }
#line 42494 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2892:
#line 16265 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_UNDEFINED; }
#line 42500 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2893:
#line 16267 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_MERGE; }
#line 42506 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2894:
#line 16269 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_algorithm= VIEW_ALGORITHM_TEMPTABLE; }
#line 42512 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2895:
#line 16274 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFAULT; }
#line 42518 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2896:
#line 16276 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_DEFINER; }
#line 42524 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2897:
#line 16278 "sql_yacc.yy" /* yacc.c:1646  */
    { Lex->create_view_suid= VIEW_SUID_INVOKER; }
#line 42530 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2898:
#line 16283 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            lex->sql_command= SQLCOM_CREATE_VIEW;
            /* first table in list is target VIEW name */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-1].table), NULL,
                                                    TL_OPTION_UPDATING,
                                                    TL_IGNORE,
                                                    MDL_EXCLUSIVE))
              MYSQL_YYABORT;
            lex->query_tables->open_strategy= TABLE_LIST::OPEN_STUB;
            thd->parsing_system_view= lex->query_tables->is_system_view;
            if ((yyvsp[0].simple_ident_list).size())
            {
              for (auto column_alias : (yyvsp[0].simple_ident_list))
              {
                // Report error if the column name/length is incorrect.
                if (check_column_name(column_alias.str))
                {
                  my_error(ER_WRONG_COLUMN_NAME, MYF(0), column_alias.str);
                  MYSQL_YYABORT;
                }
              }
              /*
                The $4 object is short-lived (its 'm_array' is not);
                so we have to duplicate it, and then we can store a
                pointer.
              */
              void *rawmem= thd->memdup(&((yyvsp[0].simple_ident_list)), sizeof((yyvsp[0].simple_ident_list)));
              if (!rawmem)
                MYSQL_YYABORT; /* purecov: inspected */
              lex->query_tables->
                set_derived_column_names(static_cast<Create_col_name_list* >(rawmem));
            }
          }
#line 42570 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2900:
#line 16323 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= Lex;
            lex->parsing_options.allows_variable= false;
            lex->parsing_options.allows_select_into= false;

            /*
              In CREATE VIEW v ... the table_list initially contains
              here a table entry for the destination "table" `v'.
              Backup it and clean the table list for the processing of
              the query expression and push `v' back to the beginning of the
              table_list finally.

              @todo: Don't save the CREATE destination table in
                     SELECT_LEX::table_list and remove this backup & restore.

              The following work only with the local list, the global list
              is created correctly in this case
            */
            SQL_I_List<TABLE_LIST> save_list;
            SELECT_LEX * const save_select= Select;
            save_select->table_list.save_and_clear(&save_list);

            CONTEXTUALIZE((yyvsp[-1].query_primary));

            /*
              The following work only with the local list, the global list
              is created correctly in this case
            */
            save_select->table_list.push_front(&save_list);

            Lex->create_view_check= (yyvsp[0].num);

            /*
              It's simpler to use @$ to grab the whole rule text, OTOH  it's
              also simple to lose something that way when changing this rule,
              so let use explicit @1 and @2 to memdup this view definition:
            */
            const size_t len= (yylsp[0]).cpp.end - (yylsp[-1]).cpp.start;
            lex->create_view_select.str=
              static_cast<char *>(thd->memdup((yylsp[-1]).cpp.start, len));
            lex->create_view_select.length= len;
            trim_whitespace(thd->charset(), &lex->create_view_select);

            lex->parsing_options.allows_variable= true;
            lex->parsing_options.allows_select_into= true;
          }
#line 42622 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2901:
#line 16373 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_NONE; }
#line 42628 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2902:
#line 16374 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 42634 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2903:
#line 16375 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_CASCADED; }
#line 42640 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2904:
#line 16376 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= VIEW_CHECK_LOCAL; }
#line 42646 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2905:
#line 16387 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_FOLLOWS; }
#line 42652 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2906:
#line 16389 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.trigger_action_order_type)= TRG_ORDER_PRECEDES; }
#line 42658 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2907:
#line 16394 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= TRG_ORDER_NONE;
              (yyval.trg_characteristics).anchor_trigger_name= NULL_CSTR;
            }
#line 42667 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2908:
#line 16400 "sql_yacc.yy" /* yacc.c:1646  */
    {
              (yyval.trg_characteristics).ordering_clause= (yyvsp[-1].trigger_action_order_type);
              (yyval.trg_characteristics).anchor_trigger_name= { (yyvsp[0].lexer.lex_str).str, (yyvsp[0].lexer.lex_str).length };
            }
#line 42676 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2909:
#line 16417 "sql_yacc.yy" /* yacc.c:1646  */
    {                 /* $11 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "TRIGGER");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::TRIGGER, (yyvsp[-8].spname));

            if (!sp)
              MYSQL_YYABORT;

            sp->m_trg_chistics.action_time= (enum enum_trigger_action_time_type) (yyvsp[-7].num);
            sp->m_trg_chistics.event= (enum enum_trigger_event_type) (yyvsp[-6].num);
            sp->m_trg_chistics.ordering_clause= (yyvsp[0].trg_characteristics).ordering_clause;
            sp->m_trg_chistics.anchor_trigger_name= (yyvsp[0].trg_characteristics).anchor_trigger_name;

            lex->stmt_definition_begin= (yylsp[-9]).cpp.start;
            lex->ident.str= const_cast<char *>((yylsp[-4]).cpp.start);
            lex->ident.length= (yylsp[-2]).cpp.start - (yylsp[-4]).cpp.start;

            lex->sphead= sp;
            lex->spname= (yyvsp[-8].spname);

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
            sp->m_chistics= &lex->sp_chistics;
            sp->set_body_start(thd, (yylsp[0]).cpp.end);
          }
#line 42712 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2910:
#line 16449 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_TRIGGER;

            if (sp->is_not_allowed_in_function("trigger"))
              MYSQL_YYABORT;

            /*
              We have to do it after parsing trigger body, because some of
              sp_proc_stmt alternatives are not saving/restoring LEX, so
              lex->query_tables can be wiped out.
            */
            if (!lex->select_lex->add_table_to_list(thd, (yyvsp[-6].table),
                                                    nullptr,
                                                    TL_OPTION_UPDATING,
                                                    TL_READ_NO_INSERT,
                                                    MDL_SHARED_NO_WRITE))
              MYSQL_YYABORT;

            Lex->m_sql_cmd= new (YYTHD->mem_root) Sql_cmd_create_trigger();
          }
#line 42743 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2911:
#line 16486 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_AGGREGATE;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 42764 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2912:
#line 16504 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            if (is_native_function((yyvsp[-4].lexer.lex_str)))
            {
              my_error(ER_NATIVE_FCT_NAME_COLLISION, MYF(0),
                       (yyvsp[-4].lexer.lex_str).str);
              MYSQL_YYABORT;
            }
            lex->sql_command = SQLCOM_CREATE_FUNCTION;
            lex->udf.type= UDFTYPE_FUNCTION;
            lex->stmt_definition_begin= (yylsp[-5]).cpp.start;
            lex->udf.name = (yyvsp[-4].lexer.lex_str);
            lex->udf.returns=(Item_result) (yyvsp[-2].num);
            lex->udf.dl=(yyvsp[0].lexer.lex_str).str;
          }
#line 42785 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2913:
#line 16526 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $4 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->stmt_definition_begin= (yylsp[-2]).cpp.start;
            lex->spname= (yyvsp[-1].spname);

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "FUNCTION");
              MYSQL_YYABORT;
            }

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::FUNCTION, lex->spname);

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;

            sp->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 42812 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2914:
#line 16550 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $7 */
            Lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
          }
#line 42820 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2915:
#line 16556 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $11 */
            LEX *lex= Lex;
            sp_head *sp= lex->sphead;

            CONTEXTUALIZE((yyvsp[-1].type));
            enum_field_types field_type= (yyvsp[-1].type)->type;
            const CHARSET_INFO *cs= (yyvsp[-1].type)->get_charset();
            if (merge_sp_var_charset_and_collation(cs, (yyvsp[0].lexer.charset), &cs))
              MYSQL_YYABORT;

            /*
              This was disabled in 5.1.12. See bug #20701
              When collation support in SP is implemented, then this test
              should be removed.
            */
            if ((field_type == MYSQL_TYPE_STRING || field_type == MYSQL_TYPE_VARCHAR)
                && ((yyvsp[-1].type)->get_type_flags() & BINCMP_FLAG))
            {
              my_error(ER_NOT_SUPPORTED_YET, MYF(0), "return value collation");
              MYSQL_YYABORT;
            }

            if (sp->m_return_field_def.init(YYTHD, "", field_type,
                                            (yyvsp[-1].type)->get_length(), (yyvsp[-1].type)->get_dec(),
                                            (yyvsp[-1].type)->get_type_flags(), NULL, NULL, &NULL_CSTR, 0,
                                            (yyvsp[-1].type)->get_interval_list(),
                                            cs ? cs : YYTHD->variables.collation_database,
                                            (yyvsp[0].lexer.charset) != nullptr, (yyvsp[-1].type)->get_uint_geom_type(),
                                            nullptr, nullptr, {},
                                            dd::Column::enum_hidden_type::HT_VISIBLE))
            {
              MYSQL_YYABORT;
            }

            if (prepare_sp_create_field(YYTHD,
                                        &sp->m_return_field_def))
              MYSQL_YYABORT;

            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 42865 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2916:
#line 16597 "sql_yacc.yy" /* yacc.c:1646  */
    { /* $13 */
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 42877 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2917:
#line 16605 "sql_yacc.yy" /* yacc.c:1646  */
    {
            THD *thd= YYTHD;
            LEX *lex= thd->lex;
            sp_head *sp= lex->sphead;

            if (sp->is_not_allowed_in_function("function"))
              MYSQL_YYABORT;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_SPFUNCTION;

            if (!(sp->m_flags & sp_head::HAS_RETURN))
            {
              my_error(ER_SP_NORETURN, MYF(0), sp->m_qname.str);
              MYSQL_YYABORT;
            }

            if (is_native_function(sp->m_name))
            {
              /*
                This warning will be printed when
                [1] A client query is parsed,
                [2] A stored function is loaded by db_load_routine.
                Printing the warning for [2] is intentional, to cover the
                following scenario:
                - A user define a SF 'foo' using MySQL 5.N
                - An application uses select foo(), and works.
                - MySQL 5.{N+1} defines a new native function 'foo', as
                part of a new feature.
                - MySQL 5.{N+1} documentation is updated, and should mention
                that there is a potential incompatible change in case of
                existing stored function named 'foo'.
                - The user deploys 5.{N+1}. At this point, 'select foo()'
                means something different, and the user code is most likely
                broken (it's only safe if the code is 'select db.foo()').
                With a warning printed when the SF is loaded (which has to occur
                before the call), the warning will provide a hint explaining
                the root cause of a later failure of 'select foo()'.
                With no warning printed, the user code will fail with no
                apparent reason.
                Printing a warning each time db_load_routine is executed for
                an ambiguous function is annoying, since that can happen a lot,
                but in practice should not happen unless there *are* name
                collisions.
                If a collision exists, it should not be silenced but fixed.
              */
              push_warning_printf(thd,
                                  Sql_condition::SL_NOTE,
                                  ER_NATIVE_FCT_NAME_COLLISION,
                                  ER_THD(thd, ER_NATIVE_FCT_NAME_COLLISION),
                                  sp->m_name.str);
            }
          }
#line 42936 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2918:
#line 16664 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$3*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            if (lex->sphead)
            {
              my_error(ER_SP_NO_RECURSIVE_CREATE, MYF(0), "PROCEDURE");
              MYSQL_YYABORT;
            }

            lex->stmt_definition_begin= (yylsp[0]).cpp.start;

            sp_head *sp= sp_start_parsing(thd, enum_sp_type::PROCEDURE, (yyvsp[0].spname));

            if (!sp)
              MYSQL_YYABORT;

            lex->sphead= sp;
          }
#line 42960 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2919:
#line 16684 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$5*/
            Lex->sphead->m_parser_data.set_parameter_start_ptr((yylsp[0]).cpp.end);
          }
#line 42968 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2920:
#line 16689 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$8*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_parser_data.set_parameter_end_ptr((yylsp[0]).cpp.start);
            memset(&lex->sp_chistics, 0, sizeof(st_sp_chistics));
          }
#line 42980 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2921:
#line 16697 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$10*/
            THD *thd= YYTHD;
            LEX *lex= thd->lex;

            lex->sphead->m_chistics= &lex->sp_chistics;
            lex->sphead->set_body_start(thd, yylloc.cpp.start);
          }
#line 42992 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2922:
#line 16705 "sql_yacc.yy" /* yacc.c:1646  */
    {                     /*$12*/
            THD *thd= YYTHD;
            LEX *lex= Lex;

            sp_finish_parsing(thd);

            lex->sql_command= SQLCOM_CREATE_PROCEDURE;
          }
#line 43005 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2923:
#line 16719 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_START;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_start((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43014 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2924:
#line 16724 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_END;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_end((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43023 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2925:
#line 16729 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_PREPARE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_prepare((yyvsp[0].xid));
          }
#line 43032 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2926:
#line 16734 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_COMMIT;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_commit((yyvsp[-1].xid), (yyvsp[0].xa_option_type));
          }
#line 43041 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2927:
#line 16739 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_ROLLBACK;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_rollback((yyvsp[0].xid));
          }
#line 43050 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2928:
#line 16744 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command = SQLCOM_XA_RECOVER;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_xa_recover((yyvsp[0].is_not_empty));
          }
#line 43059 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2929:
#line 16751 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= false; }
#line 43065 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2930:
#line 16752 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.is_not_empty)= true; }
#line 43071 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2931:
#line 16756 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[0].string)->length() <= MAXGTRIDSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length(), 0, 0);
            (yyval.xid)= xid;
          }
#line 43084 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2932:
#line 16765 "sql_yacc.yy" /* yacc.c:1646  */
    {
            MYSQL_YYABORT_UNLESS((yyvsp[-2].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[0].string)->length() <= MAXBQUALSIZE);
            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set(1L, (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length(), (yyvsp[0].string)->ptr(), (yyvsp[0].string)->length());
            (yyval.xid)= xid;
          }
#line 43098 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2933:
#line 16775 "sql_yacc.yy" /* yacc.c:1646  */
    {
            // check for overwflow of xid format id
            bool format_id_overflow_detected= ((yyvsp[0].ulong_num) > LONG_MAX);

            MYSQL_YYABORT_UNLESS((yyvsp[-4].string)->length() <= MAXGTRIDSIZE &&
                                 (yyvsp[-2].string)->length() <= MAXBQUALSIZE
                                 && !format_id_overflow_detected);

            XID *xid;
            if (!(xid= (XID *)YYTHD->alloc(sizeof(XID))))
              MYSQL_YYABORT;
            xid->set((yyvsp[0].ulong_num), (yyvsp[-4].string)->ptr(), (yyvsp[-4].string)->length(), (yyvsp[-2].string)->ptr(), (yyvsp[-2].string)->length());
            (yyval.xid)= xid;
          }
#line 43117 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2934:
#line 16792 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43123 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2935:
#line 16793 "sql_yacc.yy" /* yacc.c:1646  */
    {}
#line 43129 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2936:
#line 16797 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43135 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2937:
#line 16798 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_JOIN;        }
#line 43141 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2938:
#line 16799 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_RESUME;      }
#line 43147 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2939:
#line 16803 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43153 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2940:
#line 16804 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_ONE_PHASE;   }
#line 43159 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2941:
#line 16809 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_NONE;        }
#line 43165 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2942:
#line 16811 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_SUSPEND;     }
#line 43171 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2943:
#line 16813 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.xa_option_type)= XA_FOR_MIGRATE; }
#line 43177 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2944:
#line 16818 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_plugin(to_lex_cstring((yyvsp[-2].lexer.lex_str)), (yyvsp[0].lexer.lex_str));
          }
#line 43187 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2945:
#line 16824 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_INSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_install_component((yyvsp[0].lex_str_list));
          }
#line 43197 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2946:
#line 16833 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_PLUGIN;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_plugin(to_lex_cstring((yyvsp[0].lexer.lex_str)));
          }
#line 43207 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2947:
#line 16839 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->sql_command= SQLCOM_UNINSTALL_COMPONENT;
            lex->m_sql_cmd= new (YYMEM_ROOT) Sql_cmd_uninstall_component((yyvsp[0].lex_str_list));
          }
#line 43217 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2948:
#line 16848 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list).init(YYTHD->mem_root);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43227 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2949:
#line 16854 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lex_str_list)= (yyvsp[-2].lex_str_list);
            if ((yyval.lex_str_list).push_back((yyvsp[0].lexer.lex_str)))
              MYSQL_YYABORT; // OOM
          }
#line 43237 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2950:
#line 16863 "sql_yacc.yy" /* yacc.c:1646  */
    {
            LEX *lex= Lex;
            lex->m_sql_cmd=
              new (YYTHD->mem_root) Sql_cmd_import_table((yyvsp[0].lex_str_list));
            if (lex->m_sql_cmd == NULL)
              MYSQL_YYABORT;
            lex->sql_command= SQLCOM_IMPORT;
          }
#line 43250 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2951:
#line 16881 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone(to_lex_cstring((yyvsp[0].lexer.lex_str)));
            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43261 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2952:
#line 16891 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->sql_command= SQLCOM_CLONE;
            /* Reject space characters around ':' */
            if ((yylsp[-4]).raw.start - (yylsp[-6]).raw.end != 1) {
              YYTHD->syntax_error_at((yylsp[-5]));
              MYSQL_YYABORT;
            }
            (yyvsp[-6].lex_user)->auth.str= (yyvsp[-1].lexer.lex_str).str;
            (yyvsp[-6].lex_user)->auth.length= (yyvsp[-1].lexer.lex_str).length;
            (yyvsp[-6].lex_user)->uses_identified_by_clause= true;
            Lex->contains_plaintext_password= true;

            Lex->m_sql_cmd= NEW_PTN Sql_cmd_clone((yyvsp[-6].lex_user), (yyvsp[-4].ulong_num), to_lex_cstring((yyvsp[0].lexer.lex_str)));

            if (Lex->m_sql_cmd == nullptr)
              MYSQL_YYABORT;
          }
#line 43283 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2953:
#line 16912 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= null_lex_str;
          }
#line 43291 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2954:
#line 16916 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.lexer.lex_str)= (yyvsp[-1].lexer.lex_str);
          }
#line 43299 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2955:
#line 16923 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NOT_SPECIFIED;
          }
#line 43307 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2956:
#line 16927 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_SPECIFIED;
          }
#line 43315 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2957:
#line 16931 "sql_yacc.yy" /* yacc.c:1646  */
    {
            Lex->ssl_type= SSL_TYPE_NONE;
          }
#line 43323 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2958:
#line 16937 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::USER_RESOURCE_GROUP; }
#line 43329 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2959:
#line 16938 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_type)= resourcegroups::Type::SYSTEM_RESOURCE_GROUP; }
#line 43335 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2960:
#line 16943 "sql_yacc.yy" /* yacc.c:1646  */
    {
            /* Make an empty list. */
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr)
              MYSQL_YYABORT;
          }
#line 43346 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2961:
#line 16949 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_vcpu_list_type)= (yyvsp[0].resource_group_vcpu_list_type); }
#line 43352 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2962:
#line 16954 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= NEW_PTN Mem_root_array<resourcegroups::Range>(YYMEM_ROOT);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43363 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2963:
#line 16961 "sql_yacc.yy" /* yacc.c:1646  */
    {
            resourcegroups::Range r((yyvsp[0].vcpu_range_type).start, (yyvsp[0].vcpu_range_type).end);
            (yyval.resource_group_vcpu_list_type)= (yyvsp[-2].resource_group_vcpu_list_type);
            if ((yyval.resource_group_vcpu_list_type) == nullptr || (yyval.resource_group_vcpu_list_type)->push_back(r))
              MYSQL_YYABORT;
          }
#line 43374 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2964:
#line 16971 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto cpu_id= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= (yyval.vcpu_range_type).end=
              static_cast<resourcegroups::platform::cpu_id_t>(cpu_id);
            DBUG_ASSERT((yyval.vcpu_range_type).start == cpu_id); // truncation check
          }
#line 43385 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2965:
#line 16978 "sql_yacc.yy" /* yacc.c:1646  */
    {
            auto start= my_strtoull((yyvsp[-2].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).start= static_cast<resourcegroups::platform::cpu_id_t>(start);
            DBUG_ASSERT((yyval.vcpu_range_type).start == start); // truncation check

            auto end= my_strtoull((yyvsp[0].lexer.lex_str).str, nullptr, 10);
            (yyval.vcpu_range_type).end= static_cast<resourcegroups::platform::cpu_id_t>(end);
            DBUG_ASSERT((yyval.vcpu_range_type).end == end); // truncation check
          }
#line 43399 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2966:
#line 16990 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43405 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2967:
#line 16991 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.num)= -static_cast<int>(my_strtoll((yyvsp[0].lexer.lex_str).str, nullptr, 10)); }
#line 43411 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2968:
#line 16995 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_priority_type).is_default= true; }
#line 43417 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2969:
#line 16997 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_priority_type).is_default= false;
            (yyval.resource_group_priority_type).value= (yyvsp[0].num);
          }
#line 43426 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2970:
#line 17004 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_state_type).is_default= true; }
#line 43432 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2971:
#line 17006 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= true;
          }
#line 43441 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2972:
#line 17011 "sql_yacc.yy" /* yacc.c:1646  */
    {
            (yyval.resource_group_state_type).is_default= false;
            (yyval.resource_group_state_type).value= false;
          }
#line 43450 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2973:
#line 17018 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= false; }
#line 43456 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;

  case 2974:
#line 17019 "sql_yacc.yy" /* yacc.c:1646  */
    { (yyval.resource_group_flag_type)= true; }
#line 43462 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
    break;


#line 43466 "/export/home/pb2/build/sb_3-38522761-1585229681.91/dist_GPL/sql/sql_yacc.cc" /* yacc.c:1646  */
      default: break;
    }
  /* User semantic actions sometimes alter yychar, and that requires
     that yytoken be updated with the new translation.  We take the
     approach of translating immediately before every use of yytoken.
     One alternative is translating here after every semantic action,
     but that translation would be missed if the semantic action invokes
     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
     incorrect destructor might then be invoked immediately.  In the
     case of YYERROR or YYBACKUP, subsequent parser actions might lead
     to an incorrect destructor call or verbose syntax error message
     before the lookahead is translated.  */
  YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);

  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);

  *++yyvsp = yyval;
  *++yylsp = yyloc;

  /* Now 'shift' the result of the reduction.  Determine what state
     that goes to, based on the state we popped back to and the rule
     number reduced by.  */

  yyn = yyr1[yyn];

  yystate = yypgoto[yyn - YYNTOKENS] + *yyssp;
  if (0 <= yystate && yystate <= YYLAST && yycheck[yystate] == *yyssp)
    yystate = yytable[yystate];
  else
    yystate = yydefgoto[yyn - YYNTOKENS];

  goto yynewstate;


/*--------------------------------------.
| yyerrlab -- here on detecting error.  |
`--------------------------------------*/
yyerrlab:
  /* Make sure we have latest lookahead translation.  See comments at
     user semantic actions for why this is necessary.  */
  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);

  /* If not already recovering from an error, report this error.  */
  if (!yyerrstatus)
    {
      ++yynerrs;
#if ! YYERROR_VERBOSE
      yyerror (&yylloc, YYTHD, parse_tree, YY_("syntax error"));
#else
# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
                                        yyssp, yytoken)
      {
        char const *yymsgp = YY_("syntax error");
        int yysyntax_error_status;
        yysyntax_error_status = YYSYNTAX_ERROR;
        if (yysyntax_error_status == 0)
          yymsgp = yymsg;
        else if (yysyntax_error_status == 1)
          {
            if (yymsg != yymsgbuf)
              YYSTACK_FREE (yymsg);
            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
            if (!yymsg)
              {
                yymsg = yymsgbuf;
                yymsg_alloc = sizeof yymsgbuf;
                yysyntax_error_status = 2;
              }
            else
              {
                yysyntax_error_status = YYSYNTAX_ERROR;
                yymsgp = yymsg;
              }
          }
        yyerror (&yylloc, YYTHD, parse_tree, yymsgp);
        if (yysyntax_error_status == 2)
          goto yyexhaustedlab;
      }
# undef YYSYNTAX_ERROR
#endif
    }

  yyerror_range[1] = yylloc;

  if (yyerrstatus == 3)
    {
      /* If just tried and failed to reuse lookahead token after an
         error, discard it.  */

      if (yychar <= YYEOF)
        {
          /* Return failure if at end of input.  */
          if (yychar == YYEOF)
            YYABORT;
        }
      else
        {
          yydestruct ("Error: discarding",
                      yytoken, &yylval, &yylloc, YYTHD, parse_tree);
          yychar = YYEMPTY;
        }
    }

  /* Else will try to reuse lookahead token after shifting the error
     token.  */
  goto yyerrlab1;


/*---------------------------------------------------.
| yyerrorlab -- error raised explicitly by YYERROR.  |
`---------------------------------------------------*/
yyerrorlab:

  /* Pacify compilers like GCC when the user code never invokes
     YYERROR and the label yyerrorlab therefore never appears in user
     code.  */
  if (/*CONSTCOND*/ 0)
     goto yyerrorlab;

  yyerror_range[1] = yylsp[1-yylen];
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYERROR.  */
  YYPOPSTACK (yylen);
  yylen = 0;
  YY_STACK_PRINT (yyss, yyssp);
  yystate = *yyssp;
  goto yyerrlab1;


/*-------------------------------------------------------------.
| yyerrlab1 -- common code for both syntax error and YYERROR.  |
`-------------------------------------------------------------*/
yyerrlab1:
  yyerrstatus = 3;      /* Each real token shifted decrements this.  */

  for (;;)
    {
      yyn = yypact[yystate];
      if (!yypact_value_is_default (yyn))
        {
          yyn += YYTERROR;
          if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
            {
              yyn = yytable[yyn];
              if (0 < yyn)
                break;
            }
        }

      /* Pop the current state because it cannot handle the error token.  */
      if (yyssp == yyss)
        YYABORT;

      yyerror_range[1] = *yylsp;
      yydestruct ("Error: popping",
                  yystos[yystate], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
      yystate = *yyssp;
      YY_STACK_PRINT (yyss, yyssp);
    }

  YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN
  *++yyvsp = yylval;
  YY_IGNORE_MAYBE_UNINITIALIZED_END

  yyerror_range[2] = yylloc;
  /* Using YYLLOC is tempting, but would change the location of
     the lookahead.  YYLOC is available though.  */
  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
  *++yylsp = yyloc;

  /* Shift the error token.  */
  YY_SYMBOL_PRINT ("Shifting", yystos[yyn], yyvsp, yylsp);

  yystate = yyn;
  goto yynewstate;


/*-------------------------------------.
| yyacceptlab -- YYACCEPT comes here.  |
`-------------------------------------*/
yyacceptlab:
  yyresult = 0;
  goto yyreturn;

/*-----------------------------------.
| yyabortlab -- YYABORT comes here.  |
`-----------------------------------*/
yyabortlab:
  yyresult = 1;
  goto yyreturn;

#if !defined yyoverflow || YYERROR_VERBOSE
/*-------------------------------------------------.
| yyexhaustedlab -- memory exhaustion comes here.  |
`-------------------------------------------------*/
yyexhaustedlab:
  yyerror (&yylloc, YYTHD, parse_tree, YY_("memory exhausted"));
  yyresult = 2;
  /* Fall through.  */
#endif

yyreturn:
  if (yychar != YYEMPTY)
    {
      /* Make sure we have latest lookahead translation.  See comments at
         user semantic actions for why this is necessary.  */
      yytoken = YYTRANSLATE (yychar);
      yydestruct ("Cleanup: discarding lookahead",
                  yytoken, &yylval, &yylloc, YYTHD, parse_tree);
    }
  /* Do not reclaim the symbols of the rule whose action triggered
     this YYABORT or YYACCEPT.  */
  YYPOPSTACK (yylen);
  YY_STACK_PRINT (yyss, yyssp);
  while (yyssp != yyss)
    {
      yydestruct ("Cleanup: popping",
                  yystos[*yyssp], yyvsp, yylsp, YYTHD, parse_tree);
      YYPOPSTACK (1);
    }
#ifndef yyoverflow
  if (yyss != yyssa)
    YYSTACK_FREE (yyss);
#endif
#if YYERROR_VERBOSE
  if (yymsg != yymsgbuf)
    YYSTACK_FREE (yymsg);
#endif
  return yyresult;
}
